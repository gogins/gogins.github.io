{"version":3,"file":"pitch.astro.mjs","sources":["../../../src/useEvent.mjs","../../../src/useFrame.mjs","../../../src/components/PitchSlider.jsx","../../../src/pages/understand/pitch.mdx"],"sourcesContent":["import { useEffect } from 'react';\n\nfunction useEvent(name, onTrigger, useCapture = false) {\n  useEffect(() => {\n    document.addEventListener(name, onTrigger, useCapture);\n    return () => {\n      document.removeEventListener(name, onTrigger, useCapture);\n    };\n  }, [onTrigger]);\n}\n\nexport default useEvent;\n","import { useEffect, useRef } from 'react';\n\nfunction useFrame(callback, autostart = false) {\n  const requestRef = useRef();\n  const previousTimeRef = useRef();\n\n  const animate = (time) => {\n    if (previousTimeRef.current !== undefined) {\n      const deltaTime = time - previousTimeRef.current;\n      callback(time, deltaTime);\n    }\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  const start = () => {\n    requestRef.current = requestAnimationFrame(animate);\n  };\n  const stop = () => {\n    requestRef.current && cancelAnimationFrame(requestRef.current);\n    delete requestRef.current;\n  };\n  useEffect(() => {\n    if (requestRef.current) {\n      stop();\n      start();\n    }\n  }, [callback]);\n\n  useEffect(() => {\n    if (autostart) {\n      start();\n    }\n    return stop;\n  }, []); // Make sure the effect only runs once\n\n  return {\n    start,\n    stop,\n  };\n}\n\nexport default useFrame;\n","import useEvent from '@src/useEvent.mjs';\nimport useFrame from '@src/useFrame.mjs';\nimport { getAudioContext } from '@strudel/webaudio';\nimport { midi2note } from '@strudel/core';\nimport { useState, useRef, useEffect } from 'react';\nimport Claviature from '@components/Claviature';\n\nlet Button = (props) => <button {...props} className=\"bg-lineHighlight p-2 rounded-md color-foreground\" />;\n\nfunction plotValues(ctx, values, min, max, color) {\n  let { width, height } = ctx.canvas;\n  ctx.strokeStyle = color;\n  const thickness = 8;\n  ctx.lineWidth = thickness;\n  ctx.beginPath();\n\n  let x = (f) => ((f - min) / (max - min)) * width;\n  let y = (i) => (1 - i / values.length) * height;\n  values.forEach((f, i, a) => {\n    ctx.lineTo(x(f), y(i));\n  });\n  ctx.stroke();\n}\n\nfunction getColor(cssVariable) {\n  if (typeof document === 'undefined') {\n    return 'white';\n  }\n  const dummyElement = document.createElement('div');\n  dummyElement.style.color = cssVariable;\n  // Append the dummy element to the document body\n  document.body.appendChild(dummyElement);\n  // Get the computed style of the dummy element\n  const styles = getComputedStyle(dummyElement);\n  // Get the value of the CSS variable\n  const color = styles.getPropertyValue(cssVariable);\n  document.body.removeChild(dummyElement);\n  return color;\n}\n\nlet pitchColor = '#eab308';\nlet frequencyColor = '#3b82f6';\n\nexport function PitchSlider({\n  buttons = [],\n  animatable = false,\n  plot = false,\n  showPitchSlider = false,\n  showFrequencySlider = false,\n  pitchStep = '0.001',\n  min = 55,\n  max = 7040,\n  initial = 220,\n  baseFrequency = min,\n  zeroOffset = 0,\n  claviature,\n}) {\n  const oscRef = useRef();\n  const activeRef = useRef();\n  const freqRef = useRef(initial);\n  const historyRef = useRef([freqRef.current]);\n  const frameRef = useRef();\n  const canvasRef = useRef();\n  const [hz, setHz] = useState(freqRef.current);\n\n  useEffect(() => {\n    freqRef.current = hz;\n  }, [hz]);\n\n  useEvent('mouseup', () => {\n    oscRef.current?.stop();\n    activeRef.current = false;\n  });\n\n  let freqSlider2freq = (progress) => min + progress * (max - min);\n  let pitchSlider2freq = (progress) => min * 2 ** (progress * Math.log2(max / min));\n  let freq2freqSlider = (freq) => (freq - min) / (max - min);\n  let freq2pitchSlider = (freq) => {\n    const [minOct, maxOct] = [Math.log2(min), Math.log2(max)];\n    return (Math.log2(freq) - minOct) / (maxOct - minOct);\n  };\n\n  const freqSlider = freq2freqSlider(hz);\n  const pitchSlider = freq2pitchSlider(hz);\n\n  let startOsc = (hz) => {\n    if (oscRef.current) {\n      oscRef.current.stop();\n    }\n    oscRef.current = getAudioContext().createOscillator();\n    oscRef.current.frequency.value = hz;\n    oscRef.current.connect(getAudioContext().destination);\n    oscRef.current.start();\n    activeRef.current = true;\n    setHz(hz);\n  };\n\n  let startSweep = (exp = false) => {\n    let f = min;\n    startOsc(f);\n    const frame = () => {\n      if (f < max) {\n        if (!exp) {\n          f += 10;\n        } else {\n          f *= 1.01;\n        }\n        oscRef.current.frequency.value = f;\n        frameRef.current = requestAnimationFrame(frame);\n      } else {\n        oscRef.current.stop();\n        cancelAnimationFrame(frameRef.current);\n      }\n      setHz(f);\n    };\n    requestAnimationFrame(frame);\n  };\n\n  useFrame(() => {\n    historyRef.current.push(freqRef.current);\n    historyRef.current = historyRef.current.slice(-1000);\n    if (canvasRef.current) {\n      let ctx = canvasRef.current.getContext('2d');\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      if (showFrequencySlider) {\n        plotValues(ctx, historyRef.current, min, max, frequencyColor);\n      }\n      if (showPitchSlider) {\n        const [minOct, maxOct] = [Math.log2(min), Math.log2(max)];\n        let perceptual = historyRef.current.map((v) => Math.log2(v));\n        plotValues(ctx, perceptual, minOct, maxOct, pitchColor);\n      }\n    }\n  }, plot);\n\n  let handleChangeFrequency = (f) => {\n    setHz(f);\n    if (oscRef.current) {\n      oscRef.current.frequency.value = f;\n    }\n  };\n  let handleMouseDown = () => {\n    cancelAnimationFrame(frameRef.current);\n    startOsc(hz);\n  };\n\n  let exponent, activeNote, activeNoteLabel;\n  if (showPitchSlider) {\n    const expOffset = baseFrequency ? Math.log2(baseFrequency / min) : 0;\n    exponent = freq2pitchSlider(hz) * Math.log2(max / min) - expOffset;\n    let semitones = parseFloat((exponent * 12).toFixed(2));\n    if (zeroOffset) {\n      semitones = semitones + zeroOffset;\n      const isWhole = Math.round(semitones) === semitones;\n      activeNote = midi2note(Math.round(semitones));\n      activeNoteLabel = (!isWhole ? '~' : '') + activeNote;\n      semitones = !isWhole ? semitones.toFixed(2) : semitones;\n      exponent = (\n        <>\n          (<span className=\"text-yellow-500\">{semitones}</span> - {zeroOffset})/12\n        </>\n      );\n    } else if (semitones % 12 === 0) {\n      exponent = <span className=\"text-yellow-500\">{semitones / 12}</span>;\n    } else if (semitones % 1 === 0) {\n      exponent = (\n        <>\n          <span className=\"text-yellow-500\">{semitones}</span>/12\n        </>\n      );\n    } else {\n      exponent = <span className=\"text-yellow-500\">{exponent.toFixed(2)}</span>;\n    }\n  }\n  return (\n    <>\n      <span className=\"font-mono\">\n        {showFrequencySlider && <span className=\"text-blue-500\">{hz.toFixed(0)}Hz</span>}\n        {showFrequencySlider && showPitchSlider && <> = </>}\n        {showPitchSlider && (\n          <>\n            {baseFrequency || min}Hz * 2<sup>{exponent}</sup>\n          </>\n        )}\n      </span>\n      {claviature && (\n        <>\n          {' '}\n          = <span className=\"text-yellow-500\">{activeNoteLabel}</span>\n        </>\n      )}\n      <div>\n        {showFrequencySlider && (\n          <div className=\"flex space-x-1 items-center\">\n            <input\n              type=\"range\"\n              value={freqSlider}\n              min={0}\n              max={1}\n              step={0.001}\n              onMouseDown={handleMouseDown}\n              className={`block w-full max-w-[600px] accent-blue-500 `}\n              onChange={(e) => {\n                const f = freqSlider2freq(parseFloat(e.target.value));\n                handleChangeFrequency(f);\n              }}\n            />\n          </div>\n        )}\n        {showPitchSlider && (\n          <div>\n            <input\n              type=\"range\"\n              value={pitchSlider}\n              min={0}\n              max={1}\n              //step=\".001\"\n              step={pitchStep}\n              onMouseDown={handleMouseDown}\n              className={`block w-full max-w-[600px] accent-yellow-500`}\n              onChange={(e) => {\n                const f = pitchSlider2freq(parseFloat(e.target.value));\n                handleChangeFrequency(f);\n              }}\n            />\n          </div>\n        )}\n      </div>\n      <div className=\"px-2\">\n        {plot && <canvas ref={canvasRef} className=\"w-full max-w-[584px] h-[300px]\" height=\"600\" width={800} />}\n      </div>\n      <div className=\"space-x-2\">\n        {animatable && (\n          <Button onClick={() => startSweep()}>\n            <span style={{ color: '#3b82f6' }}>Frequency Sweep</span>\n          </Button>\n        )}\n        {animatable && (\n          <Button onClick={() => startSweep(true)}>\n            <span style={{ color: '#eab308' }}>Pitch Sweep</span>\n          </Button>\n        )}\n        {buttons.map((f, i) => (\n          <Button key={(f, i)} onMouseDown={() => startOsc(f)}>\n            {f}Hz\n          </Button>\n        ))}\n      </div>\n      {claviature && (\n        <Claviature\n          onMouseDown={(note) => {\n            const f = 440 * 2 ** ((note - 69) / 12);\n            handleChangeFrequency(f);\n            cancelAnimationFrame(frameRef.current);\n            startOsc(f);\n          }}\n          options={{\n            range: ['A1', 'A5'],\n            scaleY: 0.75,\n            scaleX: 0.86,\n            colorize: activeNote ? [{ keys: [activeNote], color: '#eab308' }] : [],\n            labels: activeNote ? { [activeNote]: activeNote } : {},\n          }}\n        />\n      )}\n    </>\n  );\n}\n","---\ntitle: Understanding Pitch\nlayout: ../../layouts/MainLayout.astro\n---\n\nimport { MiniRepl } from '../../docs/MiniRepl';\nimport { PitchSlider } from '../../components/PitchSlider';\nimport Box from '@components/Box.astro';\n\n# Understanding Pitch\n\nLet's learn how pitch works! The slider below controls the <span style=\"color:#3b82f6;\">frequency</span> of an oscillator, producing a pitch:\n\n{/* <PitchSlider client:load showFrequencySlider plot /> */}\n\n<PitchSlider client:load showFrequencySlider min={20} max={20000} />\n\n- Drag the slider to hear a pitch\n- Move the slider to change the pitch\n- Observe how the Hz number changes\n- <span className=\"text-red-300\">Caution</span>: The higher frequencies could be disturbing for children or animals!\n\nThe Hz number is the frequency of the pitch you're hearing.\nThe higher the frequency, the higher the pitch and vice versa.\nA pitch occurs whenever something is vibrating / oscillating at a frequency, in this case it's your speaker.\nThe unit **Hz** describes how many times that oscillation happens per second.\nOur eyes are too slow to actually see the oscillation on the speaker, but we can <a href=\"https://www.youtube.com/watch?v=CDMBWw7OuJQ\" target=\"_blank\">see it in slow motion</a>.\n\n<Box>\n\nThe hearing range of a newborn is said to be between 20Hz and 20000Hz.\nThe upper limit decreases with age. What's your upper limit?\n\n</Box>\n\nIn Strudel, we can play frequencies directly with the `freq` control:\n\n<MiniRepl client:visible tune={`freq(\"<200 [300,500] 400 [500,<600 670 712 670>]>*8\")`} />\n\n## Frequency vs Pitch Perception\n\nMaybe you have already noticed that the <span style=\"color:#3b82f6;\">frequency slider</span> is \"lopsided\",\nmeaning the pitch changes more in the left region and less in the right region.<br/>\nTo make that more obvious, let's add a <span style=\"color:#eab308\">pitch slider</span>\nthat controls the frequency on a different scale:\n\n<PitchSlider animatable plot showFrequencySlider showPitchSlider client:load />\n\nTry out the buttons above to sweep through the frequency range in 2 different ways:\n\n- Frequency Sweep: <span style=\"color:#3b82f6;\">frequency rises linear</span> , <span style=\"color:#eab308\">pitch rises logarithmic</span>\n- Pitch Sweep: <span style=\"color:#3b82f6;\">frequency rises exponential</span> , <span style=\"color:#eab308\">pitch rises linear</span>\n\n<Box>\n\nDon't be scared of these mathematical terms:\n\n- \"logarithmic\" is just a fancy way of saying \"it starts fast and slows down\"\n- \"exponential\" is just a fancy way of saying \"it starts slow and gets faster\"\n\n</Box>\n\nMost of the time, we might want to control pitch in a way that matches our perception,\nwhich is what the <span style=\"color:#eab308\">pitch slider</span> does.\n\n## From Hz to Semitones\n\nBecause Hz does not match our perception, let's try to find a unit for pitch that matches.\nTo approach that unit of pitch, let's look at how frequency behaves when it is doubled:\n\n<PitchSlider client:load showPitchSlider showFrequencySlider pitchStep={1 / 7} />\n\n- Use the now stepped pitch slider above\n- Can you hear how these pitches seem related to each other?\n\n<Box>\n\nIn musical terms, a pitch with double the frequency of another is an `octave` higher.\n\n</Box>\n\nBecause octaves are pretty far apart, octaves are typically divided into 12 smaller parts:\n\n<PitchSlider client:load showPitchSlider showFrequencySlider pitchStep={1 / 12} min={440} max={880} initial={440} />\n\nThis step is also called a semitone, which is the most common division of pitched music.\nFor example, the keys on a piano keyboard are also divided into semitones.\n\nIn Strudel, we could do that with `freq` like this:\n\n<MiniRepl\n  client:visible\n  tune={`freq(\n  \"0 4 7 12\"\n  .fmap(n => 440 * 2**(n/12))\n)`}\n/>\n\nOf course, this can be written shorter with note, as we will see below.\n\n## From Semitones to MIDI numbers\n\nNow we know what the distance of a semitone is.\nAbove, we used an arbitrary base frequency of 440Hz, which means the exponent 0 is equal to 440Hz.\nTypically, 440Hz is standardized to the number 69, which leads to this calculation:\n\n<PitchSlider\n  client:load\n  showPitchSlider\n  showFrequencySlider\n  baseFrequency={440}\n  zeroOffset={69}\n  pitchStep={1 / 12 / 7}\n  min={440 / 8}\n  max={7040}\n  initial={440}\n/>\n\nThe yellow number is now a MIDI number, covering more than the whole human hearing range with numbers from 0 to 127.\nIn Strudel, we can use MIDI numbers inside `note`:\n\n<MiniRepl client:visible tune={`note(\"69 73 76 81\")`} />\n\n## From MIDI numbers to notes\n\nIn western music theory, notes are used instead of numbers.\nFor each midi number, there is at least one note label:\n\n<PitchSlider\n  client:load\n  showPitchSlider\n  showFrequencySlider\n  baseFrequency={440}\n  zeroOffset={69}\n  pitchStep={1 / 48}\n  min={440 / 8}\n  max={880}\n  initial={440}\n  claviature\n/>\n\nA full note label consists of a letter (A-G), 0 or more accidentals (b | #) and an octave number.\nThis system is also known as [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\nIn Strudel, these note labels can also be used inside `note` as an alternative to midi numbers:\n\n<MiniRepl client:visible tune={`note(\"A4 C#5 E5 A5\").piano()`} />\n\n## Open Questions\n\nNow that we have learned about different representations of pitch, there are still open questions:\n\n- Why 12 notes? What about different divisions of the octave?\n- Why are notes labeled as they are? Why only 7 letters?\n- Are there other labeling systems?\n- What about Just Intonation Systems?\n- What about Timbre?\n\nAll those questions are important to ask and will be answered in another article.\n\n## Definition\n\nAt first, I wanted to start this article with a definition, but then thought it might be a good idea to focus on intuitive exploration.\nMaybe you now understand this definition much better:\n\n<Box>\n\nFrom [wikipedia](<https://en.wikipedia.org/wiki/Pitch_(music)>): \"Pitch is a perceptual property of sounds that allows their ordering on a frequency-related scale, or more commonly, pitch is the quality that makes it possible to judge sounds as \"higher\" and \"lower\" in the sense associated with musical melodies.\"\n\n</Box>\n"],"names":["hz","_jsxs","_Fragment","children","_components","h1","id","_jsx","a","tabindex","href","span","class","p","[object Object]","PitchSlider","showFrequencySlider","min","ul","li","className","strong","Box","code","h2","style","showPitchSlider","pitchStep","initial","MiniRepl","tune","baseFrequency","zeroOffset","max","claviature"],"mappings":"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"}