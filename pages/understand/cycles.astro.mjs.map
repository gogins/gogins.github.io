{"version":3,"file":"cycles.astro.mjs","sources":["../../../src/pages/understand/cycles.mdx"],"sourcesContent":["---\ntitle: Understanding Cycles\nlayout: ../../layouts/MainLayout.astro\n---\n\nimport { MiniRepl } from '../../docs/MiniRepl';\nimport { PitchSlider } from '../../components/PitchSlider';\nimport Box from '@components/Box.astro';\n\n# Understanding Cycles\n\nThe concept of cycles is very central to be able to understand how Strudel works.\nStrudel's mother language, TidalCycles, even has it in its name.\n\n## Cycles and BPM\n\nIn most music software, the unit BPM (beats per minute) is used to set the tempo.\nStrudel expresses tempo as CPS (cycles per second), with a default of 0.5 CPS:\n\n<MiniRepl client:visible tune={`s(\"bd\")`} />\n\nHere we can hear the 0.5CPS in action: The kick repeats once every two seconds.\nLet's make it 4 kicks:\n\n<MiniRepl client:visible tune={`s(\"bd bd bd bd\")`} />\n\nNow we have 4 kicks per cycle, but the whole pattern still plays at 0.5CPS.\nIn terms of BPM, most musicians would tell you this is playing at 120bpm.\nWhat about this one:\n\n<MiniRepl client:visible tune={`s(\"bd hh bd hh\")`} />\n\nBecause the second sound is now a hihat, the tempo feels slower again.\nThis brings us to an important realization:\n\n<Box>\n\nTempo is based on perception.\nThe choice of sounds also has an impact on the tempo feel.\nThis is why the same CPS can produce different perceived tempos.\n\n</Box>\n\n## Setting CPM\n\nIf you're familiar with BPM, you can use the `cpm` method to set the tempo in cycles per minute:\n\n<MiniRepl client:visible tune={`s(\"bd hh\").cpm(110)`} />\n\nIf you want to add more beats per cycle, you might want to divide the cpm:\n\n<MiniRepl client:visible tune={`s(\"bd sd bd rim, hh*8\").cpm(110/4)`} />\n\nOr using 2 beats per cycle:\n\n<MiniRepl client:visible tune={`s(\"bd sd, hh*4\").cpm(110/2)`} />\n\n<Box>\n\nTo set a specific bpm, use `.cpm(bpm/bpc)`\n\n- bpm: the target beats per minute\n- bpc: the number of perceived beats per cycle\n\n</Box>\n\n## Cycles and Bars\n\nAlso in most music software, multiple beats form a bar (or measure).\nThe so called time signature specifies how many beats are in each bar.\nIn many types of music, it is common to use 4 beats per bar, also known as 4/4 time.\nMany music programs use it as a default.\n\nStrudel does not a have concept of bars or measures, there are only cycles.\nHow you use them is up to you. Above, we've had this example:\n\n<MiniRepl client:visible tune={`s(\"bd sd bd rim, hh*8\").cpm(110/4)`} />\n\nThis could be interpreted as 4/4 time with a tempo of 110bpm.\nWe could write out multiple bars like this:\n\n<MiniRepl\n  client:visible\n  tune={`s(\\`<\n[bd sd bd rim, hh*8] \n[bd sd bd rim*2, hh*8]\n>\\`).cpm(110/4)`}\n/>\n\nInstead of writing out each bar separately, we could express this much shorter:\n\n<MiniRepl client:visible tune={`s(\"bd <sd rim*<1 2>>,hh*4\").cpm(110/2)`} />\n\nHere we can see that thinking in cycles rather than bars simplifies things a lot!\nThese types of simplifications work because of the repetitive nature of rhythm.\nIn computational terms, you could say the former notation has a lot of redundancy.\n\n## Time Signatures\n\nTo get a time signature, just change the number of elements per bar. Here is a rhythm with 7 beats:\n\n<MiniRepl client:visible tune={`s(\"bd ~ rim bd bd rim ~\")`} />\n\nor with 5:\n\n<MiniRepl client:visible tune={`s(\"bd hh hh bd hh hh bd rim bd hh\")`} />\n\nWe could also write multiple bars with different time signatures:\n\n<MiniRepl\n  client:visible\n  tune={`s(\\`<\n[bd hh rim]@3\n[bd hh rim sd]@4\n>\\`).cpm(110*2)`}\n/>\n\nHere we switch between 3/4 and 4/4, keeping the same tempo.\n\nIf we don't specify the length, we get what's called a metric modulation:\n\n<MiniRepl\n  client:visible\n  tune={`s(\\`<\n[bd hh rim]\n[bd hh rim sd]\n>\\`).cpm(110/2)`}\n/>\n\nNow the 3 elements get the same time as the 4 elements, which is why the tempo changes.\n"],"names":["_jsx","_components","a","tabindex","href","children","span","class","p","_jsxs","h2","id","MiniRepl","tune","Box","code","ul","li"],"mappings":"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"}