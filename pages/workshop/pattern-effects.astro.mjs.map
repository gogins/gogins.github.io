{"version":3,"file":"pattern-effects.astro.mjs","sources":["../../../src/pages/workshop/pattern-effects.mdx"],"sourcesContent":["---\ntitle: Pattern Effects\nlayout: ../../layouts/MainLayout.astro\n---\n\nimport { MiniRepl } from '@src/docs/MiniRepl';\nimport Box from '@components/Box.astro';\nimport QA from '@components/QA';\n\n# Pattern Effects\n\nUp until now, most of the functions we've seen are what other music programs are typically capable of: sequencing sounds, playing notes, controlling effects.\n\nIn this chapter, we are going to look at functions that are more unique to tidal.\n\n**reverse patterns with rev**\n\n<MiniRepl client:visible tune={`n(\"0 1 [4 3] 2 0 2 [~ 3] 4\").sound(\"jazz\").rev()`} />\n\n**play pattern left and modify it right with jux**\n\n<MiniRepl client:visible tune={`n(\"0 1 [4 3] 2 0 2 [~ 3] 4\").sound(\"jazz\").jux(rev)`} />\n\nThis is the same as:\n\n<MiniRepl\n  client:visible\n  tune={`$: n(\"0 1 [4 3] 2 0 2 [~ 3] 4\").sound(\"jazz\").pan(0)\n$: n(\"0 1 [4 3] 2 0 2 [~ 3] 4\").sound(\"jazz\").pan(1).rev()`}\n/>\n\nLet's visualize what happens here:\n\n<MiniRepl\n  client:visible\n  tune={`$: n(\"0 1 [4 3] 2 0 2 [~ 3] 4\").sound(\"jazz\").pan(0).color(\"cyan\")\n$: n(\"0 1 [4 3] 2 0 2 [~ 3] 4\").sound(\"jazz\").pan(1).color(\"magenta\").rev()`}\n  punchcard\n/>\n\n<Box>\n\nTry commenting out one of the two by adding `//` before a line\n\n</Box>\n\n**multiple tempos**\n\n<MiniRepl client:visible tune={`note(\"c2, eb3 g3 [bb3 c4]\").sound(\"piano\").slow(\"0.5,1,1.5\")`} />\n\nThis is like doing\n\n<MiniRepl\n  client:visible\n  tune={`$: note(\"c2, eb3 g3 [bb3 c4]\").s(\"piano\").slow(0.5).color('cyan')\n$: note(\"c2, eb3 g3 [bb3 c4]\").s(\"piano\").slow(1).color('magenta')\n$: note(\"c2, eb3 g3 [bb3 c4]\").s(\"piano\").slow(1.5).color('yellow')`}\n  punchcard\n/>\n\n<Box>\n\nTry commenting out one or more by adding `//` before a line\n\n</Box>\n\n**add**\n\n<MiniRepl\n  client:visible\n  tune={`note(\"c2 [eb3,g3] \".add(\"<0 <1 -1>>\"))\n.color(\"<cyan <magenta yellow>>\").adsr(\"[.1 0]:.2:[1 0]\")\n.sound(\"gm_acoustic_bass\").room(.5).cpm(60)`}\n  punchcard\n/>\n\n<Box>\n\nIf you add a number to a note, the note will be treated as if it was a number\n\n</Box>\n\nWe can add as often as we like:\n\n<MiniRepl\n  client:visible\n  tune={`note(\"c2 [eb3,g3]\".add(\"<0 <1 -1>>\").add(\"0,7\"))\n.color(\"<cyan <magenta yellow>>\").adsr(\"[.1 0]:.2:[1 0]\")\n.sound(\"gm_acoustic_bass\").room(.5).cpm(60)`}\n  punchcard\n/>\n\n**add with scale**\n\n<MiniRepl\n  client:visible\n  tune={`n(\"0 [2 4] <3 5> [~ <4 1>]\".add(\"<0 [0,2,4]>\"))\n.scale(\"C5:minor\").release(.5)\n.sound(\"gm_xylophone\").room(.5)`}\n  punchcard\n/>\n\n**time to stack**\n\n<MiniRepl\n  client:visible\n  tune={`$: n(\"0 [2 4] <3 5> [~ <4 1>]\".add(\"<0 [0,2,4]>\"))\n  .scale(\"C5:minor\")\n  .sound(\"gm_xylophone\")\n  .room(.4).delay(.125)\n$: note(\"c2 [eb3,g3]\".add(\"<0 <1 -1>>\"))\n  .adsr(\"[.1 0]:.2:[1 0]\")\n  .sound(\"gm_acoustic_bass\")\n  .room(.5)\n$: n(\"0 1 [2 3] 2\").sound(\"jazz\").jux(rev)`}\n/>\n\n**ply**\n\n<MiniRepl client:visible tune={`sound(\"hh hh, bd rim [~ cp] rim\").bank(\"RolandTR707\").ply(2)`} punchcard />\n\nthis is like writing:\n\n<MiniRepl client:visible tune={`sound(\"hh*2 hh*2, bd*2 rim*2 [~ cp*2] rim*2\").bank(\"RolandTR707\")`} punchcard />\n\n<Box>\n\nTry patterning the `ply` function, for example using `\"<1 2 1 3>\"`\n\n</Box>\n\n**off**\n\n<MiniRepl\n  client:visible\n  tune={`n(\"0 [4 <3 2>] <2 3> [~ 1]\"\n  .off(1/16, x=>x.add(4))\n  //.off(1/8, x=>x.add(7))\n).scale(\"<C5:minor Db5:mixolydian>/2\")\n.s(\"triangle\").room(.5).dec(.1)`}\n  punchcard\n/>\n\n<Box>\n\nIn the notation `.off(1/16, x=>x.add(4))`, says:\n\n- take the original pattern named as `x`\n- modify `x` with `.add(4)`, and\n- play it offset to the original pattern by `1/16` of a cycle.\n\n</Box>\n\noff is also useful for modifying other sounds, and can even be nested:\n\n<MiniRepl\n  client:visible\n  tune={`s(\"bd sd [rim bd] sd,[~ hh]*4\").bank(\"CasioRZ1\")\n  .off(2/16, x=>x.speed(1.5).gain(.25)\n  .off(3/16, y=>y.vowel(\"<a e i o>*8\")))`}\n/>\n\n| name | description                    | example                                                                                     |\n| ---- | ------------------------------ | ------------------------------------------------------------------------------------------- |\n| rev  | reverse                        | <MiniRepl client:visible tune={`n(\"0 2 4 6 ~ 7 9 5\").scale(\"C:minor\").rev()`} />            |\n| jux  | split left/right, modify right | <MiniRepl client:visible tune={`n(\"0 2 4 6 ~ 7 9 5\").scale(\"C:minor\").jux(rev)`} />         |\n| add  | add numbers / notes            | <MiniRepl client:visible tune={`n(\"0 2 4 6 ~ 7 9 5\".add(\"<0 1 2 1>\")).scale(\"C:minor\")`} /> |\n| ply  | speed up each event n times    | <MiniRepl client:visible tune={`s(\"bd sd [~ bd] sd\").ply(\"<1 2 3>\")`} />                    |\n| off  | copy, shift time & modify      | <MiniRepl client:visible tune={`s(\"bd sd [~ bd] sd, hh*8\").off(1/16, x=>x.speed(2))`} />    |\n"],"names":["_jsxs","_Fragment","children","_components","h1","id","_jsx","a","tabindex","href","span","class","p","strong","MiniRepl","tune","punchcard","Box","code","ul","li","table","thead","tr","th","tbody","td"],"mappings":"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"}