{"version":3,"file":"pattern-effects.astro.mjs","sources":["../../../../src/pages/de/workshop/pattern-effects.mdx"],"sourcesContent":["---\ntitle: Pattern-Effekte\nlayout: ../../../layouts/MainLayout.astro\n---\n\nimport { MiniRepl } from '@src/docs/MiniRepl';\nimport Box from '@components/Box.astro';\nimport QA from '@components/QA';\n\n# Pattern-Effekte\n\nBis jetzt sind die meisten Funktionen, die wir kennengelernt haben, ähnlich wie Funktionen in anderen Musik Programmen: Sequencing von Sounds, Noten und Effekten.\n\nIn diesem Kapitel beschäftigen wir uns mit Funktionen die weniger herkömmlich oder auch einzigartig sind.\n\n**rev = rückwärts abspielen**\n\n<MiniRepl client:visible tune={`n(\"0 1 [4 3] 2\").sound(\"jazz\").rev()`} />\n\n**jux = einen stereo kanal modifizieren**\n\n<MiniRepl client:visible tune={`n(\"0 1 [4 3] 2\").sound(\"jazz\").jux(rev)`} />\n\nSo würde man das ohne `jux` schreiben:\n\n<MiniRepl\n  client:visible\n  tune={`stack(\n  n(\"0 1 [4 3] 2\").sound(\"jazz\").pan(0),\n  n(\"0 1 [4 3] 2\").sound(\"jazz\").pan(1).rev()\n)`}\n/>\n\nLass uns visualisieren, was hier passiert:\n\n<MiniRepl\n  client:visible\n  tune={`stack(\n  n(\"0 1 [4 3] 2\").sound(\"jazz\").pan(0).color(\"cyan\"),\n  n(\"0 1 [4 3] 2\").sound(\"jazz\").pan(1).color(\"magenta\").rev()\n)`}\n  punchcard\n/>\n\n<Box>\n\nSchreibe `//` vor eine der beiden Zeilen im `stack`!\n\n</Box>\n\n**mehrere tempos**\n\n<MiniRepl client:visible tune={`note(\"c2, eb3 g3 [bb3 c4]\").sound(\"piano\").slow(\"1,2,3\")`} />\n\nDas hat den gleichen Effekt, wie:\n\n<MiniRepl\n  client:visible\n  tune={`stack(\n  note(\"c2, eb3 g3 [bb3 c4]\").s(\"piano\").slow(1).color('cyan'),\n  note(\"c2, eb3 g3 [bb3 c4]\").s(\"piano\").slow(2).color('magenta'),\n  note(\"c2, eb3 g3 [bb3 c4]\").s(\"piano\").slow(3).color('yellow')\n)`}\n  punchcard\n/>\n\n<Box>\n\nSchreibe wieder `//` vor eine oder mehrere Zeilen im `stack`.\n\n</Box>\n\n**add = addieren**\n\n<MiniRepl\n  client:visible\n  tune={`note(\"c2 [eb3,g3]\".add(\"<0 <1 -1>>\"))\n.color(\"<cyan <magenta yellow>>\").adsr(\"[.1 0]:.2:[1 0]\")\n.sound(\"gm_acoustic_bass\").room(.5)`}\n  punchcard\n/>\n\n<Box>\n\nAddiert man eine Zahl zu einer Note, verhält sich diese wie eine Zahl.\n\nz.B. c4 = 60, also ist c4 + 2 = 62\n\n</Box>\n\nMan kann auch mehrmals addieren:\n\n<MiniRepl\n  client:visible\n  tune={`note(\"c2 [eb3,g3]\".add(\"<0 <1 -1>>\").add(\"0,7\"))\n.color(\"<cyan <magenta yellow>>\").adsr(\"[.1 0]:.2:[1 0]\")\n.sound(\"gm_acoustic_bass\").room(.5)`}\n  punchcard\n/>\n\n**add + scale**\n\n<MiniRepl\n  client:visible\n  tune={`n(\"<0 [2 4] <3 5> [~ <4 1>]>*2\".add(\"<0 [0,2,4]>/4\"))\n.scale(\"C5:minor\").release(.5)\n.sound(\"gm_xylophone\").room(.5)`}\n  punchcard\n/>\n\n**Alles zusammen**\n\n<MiniRepl\n  client:visible\n  tune={`stack(\n  n(\"<0 [2 4] <3 5> [~ <4 1>]>*2\".add(\"<0 [0,2,4]>/4\"))\n  .scale(\"C5:minor\")\n  .sound(\"gm_xylophone\")\n  .room(.4).delay(.125),\n  note(\"c2 [eb3,g3]\".add(\"<0 <1 -1>>\"))\n  .adsr(\"[.1 0]:.2:[1 0]\")\n  .sound(\"gm_acoustic_bass\")\n  .room(.5),\n  n(\"0 1 [2 3] 2\").sound(\"jazz\").jux(rev).slow(2)\n)`}\n/>\n\n**ply**\n\n<MiniRepl client:visible tune={`sound(\"hh, bd rim\").bank(\"RolandTR707\").ply(2)`} punchcard />\n\ndas ist wie:\n\n<MiniRepl client:visible tune={`sound(\"hh*2, bd*2 rim*2\").bank(\"RolandTR707\")`} punchcard />\n\n<Box>\n\nProbier `ply` mit einem pattern zu automatisieren, z.b. `\"<1 2 1 3>\"`\n\n</Box>\n\n**off**\n\n<MiniRepl\n  client:visible\n  tune={`n(\"<0 [4 <3 2>] <2 3> [~ 1]>\"\n  .off(1/8, x=>x.add(4))\n  //.off(1/4, x=>x.add(7))\n).scale(\"<C5:minor Db5:mixolydian>/4\")\n.s(\"triangle\").room(.5).dec(.1).delay(.5)`}\n  punchcard\n/>\n\n<Box>\n\nIn der Notation `x=>x.`, ist `x` das Pattern, das wir bearbeiten.\n\n</Box>\n\n`off` ist auch nützlich für Sounds:\n\n<MiniRepl\n  client:visible\n  tune={`s(\"bd sd,[~ hh]*2\").bank(\"CasioRZ1\")\n  .off(1/8, x=>x.speed(1.5).gain(.25))`}\n/>\n\n| Name | Beschreibung                      | Beispiel                                                                            |\n| ---- | --------------------------------- | ----------------------------------------------------------------------------------- |\n| rev  | rückwärts                         | <MiniRepl client:visible tune={`n(\"0 2 4 6\").scale(\"C:minor\").rev()`} />            |\n| jux  | einen Stereo-Kanal modifizieren   | <MiniRepl client:visible tune={`n(\"0 2 4 6\").scale(\"C:minor\").jux(rev)`} />         |\n| add  | addiert Zahlen oder Noten         | <MiniRepl client:visible tune={`n(\"0 2 4 6\".add(\"<0 1 2 1>\")).scale(\"C:minor\")`} /> |\n| ply  | multipliziert jedes Element x mal | <MiniRepl client:visible tune={`s(\"bd sd\").ply(\"<1 2 3>\")`} />                      |\n| off  | verzögert eine modifizierte Kopie | <MiniRepl client:visible tune={`s(\"bd sd, hh*4\").off(1/8, x=>x.speed(2))`} />       |\n"],"names":["_jsx","_components","a","tabindex","href","children","span","class","p","MiniRepl","tune","strong","_jsxs","code","punchcard","Box","table","thead","tr","th","tbody","td"],"mappings":"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"}