{"version":3,"file":"intro.astro.mjs","sources":["../../../src/pages/functions/intro.mdx"],"sourcesContent":["---\ntitle: JavaScript API\nlayout: ../../layouts/MainLayout.astro\n---\n\nimport { MiniRepl } from '../../docs/MiniRepl';\nimport { JsDoc } from '../../docs/JsDoc';\n\n# Pattern Functions\n\nLet's learn all about functions to create and modify patterns.\nAt the core of Strudel, everything is made of functions.\n\nFor example, everything you can do with the Mini-Notation can also be done with a function.\nThis Pattern in Mini Notation:\n\n<MiniRepl client:only=\"react\" tune={`note(\"c3 eb3 g3\")`} />\n\nis equivalent to this Pattern without Mini Notation:\n\n<MiniRepl client:only=\"react\" tune={`note(seq(\"c3\", \"eb3\", \"g3\"))`} />\n\nSimilarly, there is an equivalent function for every aspect of the mini notation.\n\nWhich representation to use is a matter of context. As a rule of thumb, functions\nare better suited in a larger context, while mini notation is more practical for individiual rhythms.\n\n## Limits of Mini Notation\n\nWhile the Mini Notation is a powerful way to write rhythms concisely, it also has its limits. Take this example:\n\n<MiniRepl\n  client:idle\n  tune={`stack(\n  note(\"c2 eb2(3,8)\").s('sawtooth').cutoff(800),\n  s(\"bd(5,8), hh*8\")\n)`}\n/>\n\nHere, we are using mini notation for the individual rhythms, while using the function `stack` to mix them.\nWhile stack is also available as `,` in mini notation, we cannot use it here, because we have different types of sounds.\n\n## Combining Patterns\n\nYou can freely mix JS patterns, mini patterns and values! For example, this pattern:\n\n<MiniRepl\n  client:idle\n  tune={`cat(\n  stack(\"g3\",\"b3\",\"e4\"),\n  stack(\"a3\",\"c3\",\"e4\"),\n  stack(\"b3\",\"d3\",\"fs4\"),\n  stack(\"b3\",\"e4\",\"g4\")\n).note()`}\n/>\n\n...is equivalent to:\n\n<MiniRepl\n  client:idle\n  tune={`cat(\n  \"g3,b3,e4\",\n  \"a3,c3,e4\",\n  \"b3,d3,f#4\",\n  \"b3,e4,g4\"\n).note()`}\n/>\n\n... as well as:\n\n<MiniRepl client:only=\"react\" tune={`note(\"<[g3,b3,e4] [a3,c3,e4] [b3,d3,f#4] [b3,e4,g4]>\")`} />\n\nWhile mini notation is almost always shorter, it only has a handful of modifiers: \\* / ! @.\nWhen using JS patterns, there is a lot more you can do.\n\nNext, let's look at how you can [create patterns](/learn/factories)\n"],"names":["_jsx","_components","a","tabindex","href","children","span","class","p","[object Object]","_jsxs","h2","id","MiniRepl","tune","code"],"mappings":"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"}