{"version":3,"file":"list_40d71dfd.mjs","sources":["../../../../my-patterns/README.md?raw","../../../src/pages/swatch/list.json.js"],"sourcesContent":["export default \"# my-patterns\\n\\nThis directory can be used to save your own patterns, which then get\\nmade into a pattern swatch.\\n\\nExample: <https://felixroos.github.io/strudel/swatch/>\\n\\n## deploy\\n\\n### 1. fork the [strudel repo on github](https://github.com/tidalcycles/strudel.git)\\n\\n### 2. clone your fork to your machine `git clone https://github.com/<your-username>/strudel.git strudel && cd strudel`\\n\\n### 3. create a separate branch like `git branch patternuary && git checkout patternuary`\\n\\n### 4. save one or more .txt files in the my-patterns folder\\n\\n### 5. edit `website/public/CNAME` to contain `<your-username>.github.io/strudel`\\n\\n### 6. edit `website/astro.config.mjs` to use site: `https://<your-username>.github.io` and base `/strudel`, like this\\n\\n```js\\nconst site = 'https://<your-username>.github.io';\\nconst base = '/strudel';\\n```\\n\\n### 7. commit & push the changes\\n\\n```sh\\ngit add . && git commit -m \\\"site config\\\" && git push --set-upstream origin\\n```\\n\\n### 8. deploy to github pages\\n\\n- go to settings -> pages and select \\\"Github Actions\\\" as source\\n- go to settings -> environments -> github-pages and press the edit button next to `main` and type in `patternuary` (under \\\"Deployment branches\\\")\\n- go to Actions -> `Build and Deploy` and click `Run workflow` with branch `patternuary`\\n\\n### 9. view your patterns at `<your-username>.github.io/strudel/swatch/`\\n\\nAlternatively, github pages allows you to use a custom domain, like https://mycooldomain.org/swatch/. [See their documentation for details](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site).\\n\\n### 10. optional: automatic deployment\\n\\nIf you want to automatically deploy your site on push, go to `deploy.yml` and change `workflow_dispatch` to `push`.\\n\\n## running locally\\n\\n- install dependencies with `npm run setup`\\n- run dev server with `npm run repl` and open `http://localhost:4321/strudel/swatch/`\\n\\n## tests fail?\\n\\nYour tests might fail if the code does not follow prettiers format.\\nIn that case, run `npm run codeformat`. To disable that, remove `npm run format-check` from `test.yml`\\n\\n## updating your fork\\n\\nTo update your fork, you can pull the main branch and merge it into your `patternuary` branch.\\n\"","import { getMetadata } from '../metadata_parser';\n\nexport function getMyPatterns() {\n  const my = import.meta.glob('../../../../my-patterns/**', { as: 'raw', eager: true });\n  return Object.fromEntries(\n    Object.entries(my)\n      .filter(([name]) => name.endsWith('.txt'))\n      .map(([name, raw]) => [getMetadata(raw)['title'] || name.split('/').slice(-1), raw]),\n  );\n}\n\nexport async function get() {\n  const all = await getMyPatterns();\n  return {\n    body: JSON.stringify(all),\n  };\n}\n"],"names":[],"mappings":";;AAAA,wBAAe;;ACER,SAAS,aAAa,GAAG;AAChC,EAAE,MAAM,EAAE,wFAA6E,CAAC;AACxF,EAAE,OAAO,MAAM,CAAC,WAAW;AAC3B,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;AACtB,OAAO,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAChD,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC1F,GAAG,CAAC;AACJ,CAAC;AACD;AACO,eAAe,GAAG,GAAG;AAC5B,EAAE,MAAM,GAAG,GAAG,MAAM,aAAa,EAAE,CAAC;AACpC,EAAE,OAAO;AACT,IAAI,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;AAC7B,GAAG,CAAC;AACJ;;;;"}