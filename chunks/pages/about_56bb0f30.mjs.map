{"version":3,"file":"about_56bb0f30.mjs","sources":["../../../../node_modules/.pnpm/astro@3.4.2_@types+node@18.16.3_typescript@4.9.4/node_modules/astro/components/Image.astro","../../../../node_modules/.pnpm/astro@3.4.2_@types+node@18.16.3_typescript@4.9.4/node_modules/astro/components/Picture.astro","../../../src/pages/technical-manual/about.mdx"],"sourcesContent":["---\nimport { getImage, type LocalImageProps, type RemoteImageProps } from 'astro:assets';\nimport { AstroError, AstroErrorData } from '../dist/core/errors/index.js';\n\n// The TypeScript diagnostic for JSX props uses the last member of the union to suggest props, so it would be better for\n// LocalImageProps to be last. Unfortunately, when we do this the error messages that remote images get are complete nonsense\n// Not 100% sure how to fix this, seems to be a TypeScript issue. Unfortunate.\ntype Props = LocalImageProps | RemoteImageProps;\n\nconst props = Astro.props;\n\nif (props.alt === undefined || props.alt === null) {\n\tthrow new AstroError(AstroErrorData.ImageMissingAlt);\n}\n\n// As a convenience, allow width and height to be string with a number in them, to match HTML's native `img`.\nif (typeof props.width === 'string') {\n\tprops.width = parseInt(props.width);\n}\n\nif (typeof props.height === 'string') {\n\tprops.height = parseInt(props.height);\n}\n\nconst image = await getImage(props);\n\nconst additionalAttributes: Record<string, any> = {};\n\nif (image.srcSet.values.length > 0) {\n\tadditionalAttributes.srcset = image.srcSet.attribute;\n}\n---\n\n<img src={image.src} {...additionalAttributes} {...image.attributes} />\n","---\nimport { getImage, type LocalImageProps, type RemoteImageProps } from 'astro:assets';\nimport type { GetImageResult, ImageOutputFormat } from '../dist/@types/astro';\nimport { isESMImportedImage } from '../dist/assets/internal';\nimport { AstroError, AstroErrorData } from '../dist/core/errors/index.js';\nimport type { HTMLAttributes } from '../types';\n\ntype Props = (LocalImageProps | RemoteImageProps) & {\n\tformats?: ImageOutputFormat[];\n\tfallbackFormat?: ImageOutputFormat;\n\tpictureAttributes?: HTMLAttributes<'picture'>;\n};\n\nconst defaultFormats = ['webp'] as const;\nconst defaultFallbackFormat = 'png' as const;\n\n// Certain formats don't want PNG fallbacks:\n// - GIF will typically want to stay as a gif, either for animation or for the lower amount of colors\n// - SVGs can't be converted to raster formats in most cases\n// For those, we'll use the original format as the fallback instead.\nconst specialFormatsFallback = ['gif', 'svg'] as const;\n\nconst { formats = defaultFormats, pictureAttributes = {}, fallbackFormat, ...props } = Astro.props;\n\nif (props.alt === undefined || props.alt === null) {\n\tthrow new AstroError(AstroErrorData.ImageMissingAlt);\n}\n\nconst optimizedImages: GetImageResult[] = await Promise.all(\n\tformats.map(\n\t\tasync (format) =>\n\t\t\tawait getImage({ ...props, format: format, widths: props.widths, densities: props.densities })\n\t)\n);\n\nlet resultFallbackFormat = fallbackFormat ?? defaultFallbackFormat;\nif (\n\t!fallbackFormat &&\n\tisESMImportedImage(props.src) &&\n\tspecialFormatsFallback.includes(props.src.format)\n) {\n\tresultFallbackFormat = props.src.format;\n}\n\nconst fallbackImage = await getImage({\n\t...props,\n\tformat: resultFallbackFormat,\n\twidths: props.widths,\n\tdensities: props.densities,\n});\n\nconst additionalAttributes: Record<string, any> = {};\nif (fallbackImage.srcSet.values.length > 0) {\n\tadditionalAttributes.srcset = fallbackImage.srcSet.attribute;\n}\n---\n\n<picture {...pictureAttributes}>\n\t{\n\t\tObject.entries(optimizedImages).map(([_, image]) => {\n\t\t\tconst srcsetAttribute =\n\t\t\t\tprops.densities || (!props.densities && !props.widths)\n\t\t\t\t\t? `${image.src}${image.srcSet.values.length > 0 ? ', ' + image.srcSet.attribute : ''}`\n\t\t\t\t\t: image.srcSet.attribute;\n\t\t\treturn <source srcset={srcsetAttribute} type={'image/' + image.options.format} />;\n\t\t})\n\t}\n\t<img src={fallbackImage.src} {...additionalAttributes} {...fallbackImage.attributes} />\n</picture>\n","This section introduces you to Strudel in a technical sense. If you just want to _use_ Strudel, have a look at the [Tutorial](/workshop/getting-started).\n\nTODO\n"],"names":["$$Astro","$$createAstro","$$createComponent","Astro","AstroErrorData.ImageMissingAlt","$$render","$$maybeRenderHead","$$addAttribute","$$spreadAttributes","_jsx","_components","em","children","a","href","p"],"mappings":"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","x_google_ignoreList":[0,1]}