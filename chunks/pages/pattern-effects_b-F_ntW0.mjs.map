{"version":3,"file":"pattern-effects_b-F_ntW0.mjs","sources":["../../../src/pages/workshop/pattern-effects.mdx","../../../src/pages/de/workshop/pattern-effects.mdx"],"sourcesContent":["---\ntitle: Pattern Effects\nlayout: ../../layouts/MainLayout.astro\n---\n\nimport { MiniRepl } from '@src/docs/MiniRepl';\nimport Box from '@components/Box.astro';\nimport QA from '@components/QA';\n\n# Pattern Effects\n\nUp until now, most of the functions we've seen are what other music programs are typically capable of: sequencing sounds, playing notes, controlling effects.\n\nIn this chapter, we are going to look at functions that are more unique to tidal.\n\n**reverse patterns with rev**\n\n<MiniRepl client:visible tune={`n(\"0 1 [4 3] 2 0 2 [~ 3] 4\").sound(\"jazz\").rev()`} />\n\n**play pattern left and modify it right with jux**\n\n<MiniRepl client:visible tune={`n(\"0 1 [4 3] 2 0 2 [~ 3] 4\").sound(\"jazz\").jux(rev)`} />\n\nThis is the same as:\n\n<MiniRepl\n  client:visible\n  tune={`stack(\n  n(\"0 1 [4 3] 2 0 2 [~ 3] 4\").sound(\"jazz\").pan(0),\n  n(\"0 1 [4 3] 2 0 2 [~ 3] 4\").sound(\"jazz\").pan(1).rev()\n)`}\n/>\n\nLet's visualize what happens here:\n\n<MiniRepl\n  client:visible\n  tune={`stack(\n  n(\"0 1 [4 3] 2 0 2 [~ 3] 4\").sound(\"jazz\").pan(0).color(\"cyan\"),\n  n(\"0 1 [4 3] 2 0 2 [~ 3] 4\").sound(\"jazz\").pan(1).color(\"magenta\").rev()\n)`}\n  punchcard\n/>\n\n<Box>\n\nTry commenting out one of the two by adding `//` before a line\n\n</Box>\n\n**multiple tempos**\n\n<MiniRepl client:visible tune={`note(\"c2, eb3 g3 [bb3 c4]\").sound(\"piano\").slow(\"0.5,1,1.5\")`} />\n\nThis is like doing\n\n<MiniRepl\n  client:visible\n  tune={`stack(\n  note(\"c2, eb3 g3 [bb3 c4]\").s(\"piano\").slow(0.5).color('cyan'),\n  note(\"c2, eb3 g3 [bb3 c4]\").s(\"piano\").slow(1).color('magenta'),\n  note(\"c2, eb3 g3 [bb3 c4]\").s(\"piano\").slow(1.5).color('yellow')\n)`}\n  punchcard\n/>\n\n<Box>\n\nTry commenting out one or more by adding `//` before a line\n\n</Box>\n\n**add**\n\n<MiniRepl\n  client:visible\n  tune={`note(\"c2 [eb3,g3] \".add(\"<0 <1 -1>>\"))\n.color(\"<cyan <magenta yellow>>\").adsr(\"[.1 0]:.2:[1 0]\")\n.sound(\"gm_acoustic_bass\").room(.5).cpm(60)`}\n  punchcard\n/>\n\n<Box>\n\nIf you add a number to a note, the note will be treated as if it was a number\n\n</Box>\n\nWe can add as often as we like:\n\n<MiniRepl\n  client:visible\n  tune={`note(\"c2 [eb3,g3]\".add(\"<0 <1 -1>>\").add(\"0,7\"))\n.color(\"<cyan <magenta yellow>>\").adsr(\"[.1 0]:.2:[1 0]\")\n.sound(\"gm_acoustic_bass\").room(.5).cpm(60)`}\n  punchcard\n/>\n\n**add with scale**\n\n<MiniRepl\n  client:visible\n  tune={`n(\"0 [2 4] <3 5> [~ <4 1>]\".add(\"<0 [0,2,4]>\"))\n.scale(\"C5:minor\").release(.5)\n.sound(\"gm_xylophone\").room(.5)`}\n  punchcard\n/>\n\n**time to stack**\n\n<MiniRepl\n  client:visible\n  tune={`stack(\n  n(\"0 [2 4] <3 5> [~ <4 1>]\".add(\"<0 [0,2,4]>\"))\n  .scale(\"C5:minor\")\n  .sound(\"gm_xylophone\")\n  .room(.4).delay(.125),\n  note(\"c2 [eb3,g3]\".add(\"<0 <1 -1>>\"))\n  .adsr(\"[.1 0]:.2:[1 0]\")\n  .sound(\"gm_acoustic_bass\")\n  .room(.5),\n  n(\"0 1 [2 3] 2\").sound(\"jazz\").jux(rev)\n)`}\n/>\n\n**ply**\n\n<MiniRepl client:visible tune={`sound(\"hh hh, bd rim [~ cp] rim\").bank(\"RolandTR707\").ply(2)`} punchcard />\n\nthis is like writing:\n\n<MiniRepl client:visible tune={`sound(\"hh*2 hh*2, bd*2 rim*2 [~ cp*2] rim*2\").bank(\"RolandTR707\")`} punchcard />\n\n<Box>\n\nTry patterning the `ply` function, for example using `\"<1 2 1 3>\"`\n\n</Box>\n\n**off**\n\n<MiniRepl\n  client:visible\n  tune={`n(\"0 [4 <3 2>] <2 3> [~ 1]\"\n  .off(1/16, x=>x.add(4))\n  //.off(1/8, x=>x.add(7))\n).scale(\"<C5:minor Db5:mixolydian>/2\")\n.s(\"triangle\").room(.5).ds(\".1:0\").delay(.5)`}\n  punchcard\n/>\n\n<Box>\n\nIn the notation `x=>x.`, the `x` is the shifted pattern, which where modifying.\n\n</Box>\n\noff is also useful for sounds:\n\n<MiniRepl\n  client:visible\n  tune={`s(\"bd sd [rim bd] sd,[~ hh]*4\").bank(\"CasioRZ1\")\n  .off(1/16, x=>x.speed(1.5).gain(.25))`}\n/>\n\n| name | description                    | example                                                                                     |\n| ---- | ------------------------------ | ------------------------------------------------------------------------------------------- |\n| rev  | reverse                        | <MiniRepl client:visible tune={`n(\"0 2 4 6 ~ 7 9 5\").scale(\"C:minor\").rev()`} />            |\n| jux  | split left/right, modify right | <MiniRepl client:visible tune={`n(\"0 2 4 6 ~ 7 9 5\").scale(\"C:minor\").jux(rev)`} />         |\n| add  | add numbers / notes            | <MiniRepl client:visible tune={`n(\"0 2 4 6 ~ 7 9 5\".add(\"<0 1 2 1>\")).scale(\"C:minor\")`} /> |\n| ply  | speed up each event n times    | <MiniRepl client:visible tune={`s(\"bd sd [~ bd] sd\").ply(\"<1 2 3>\")`} />                    |\n| off  | copy, shift time & modify      | <MiniRepl client:visible tune={`s(\"bd sd [~ bd] sd, hh*8\").off(1/16, x=>x.speed(2))`} />    |\n","---\ntitle: Pattern-Effekte\nlayout: ../../../layouts/MainLayout.astro\n---\n\nimport { MiniRepl } from '@src/docs/MiniRepl';\nimport Box from '@components/Box.astro';\nimport QA from '@components/QA';\n\n# Pattern-Effekte\n\nBis jetzt sind die meisten Funktionen, die wir kennengelernt haben, ähnlich wie Funktionen in anderen Musik Programmen: Sequencing von Sounds, Noten und Effekten.\n\nIn diesem Kapitel beschäftigen wir uns mit Funktionen die weniger herkömmlich oder auch einzigartig sind.\n\n**rev = rückwärts abspielen**\n\n<MiniRepl client:visible tune={`n(\"0 1 [4 3] 2\").sound(\"jazz\").rev()`} />\n\n**jux = einen stereo kanal modifizieren**\n\n<MiniRepl client:visible tune={`n(\"0 1 [4 3] 2\").sound(\"jazz\").jux(rev)`} />\n\nSo würde man das ohne `jux` schreiben:\n\n<MiniRepl\n  client:visible\n  tune={`stack(\n  n(\"0 1 [4 3] 2\").sound(\"jazz\").pan(0),\n  n(\"0 1 [4 3] 2\").sound(\"jazz\").pan(1).rev()\n)`}\n/>\n\nLass uns visualisieren, was hier passiert:\n\n<MiniRepl\n  client:visible\n  tune={`stack(\n  n(\"0 1 [4 3] 2\").sound(\"jazz\").pan(0).color(\"cyan\"),\n  n(\"0 1 [4 3] 2\").sound(\"jazz\").pan(1).color(\"magenta\").rev()\n)`}\n  punchcard\n/>\n\n<Box>\n\nSchreibe `//` vor eine der beiden Zeilen im `stack`!\n\n</Box>\n\n**mehrere tempos**\n\n<MiniRepl client:visible tune={`note(\"c2, eb3 g3 [bb3 c4]\").sound(\"piano\").slow(\"1,2,3\")`} />\n\nDas hat den gleichen Effekt, wie:\n\n<MiniRepl\n  client:visible\n  tune={`stack(\n  note(\"c2, eb3 g3 [bb3 c4]\").s(\"piano\").slow(1).color('cyan'),\n  note(\"c2, eb3 g3 [bb3 c4]\").s(\"piano\").slow(2).color('magenta'),\n  note(\"c2, eb3 g3 [bb3 c4]\").s(\"piano\").slow(3).color('yellow')\n)`}\n  punchcard\n/>\n\n<Box>\n\nSchreibe wieder `//` vor eine oder mehrere Zeilen im `stack`.\n\n</Box>\n\n**add = addieren**\n\n<MiniRepl\n  client:visible\n  tune={`note(\"c2 [eb3,g3]\".add(\"<0 <1 -1>>\"))\n.color(\"<cyan <magenta yellow>>\").adsr(\"[.1 0]:.2:[1 0]\")\n.sound(\"gm_acoustic_bass\").room(.5)`}\n  punchcard\n/>\n\n<Box>\n\nAddiert man eine Zahl zu einer Note, verhält sich diese wie eine Zahl.\n\nz.B. c4 = 60, also ist c4 + 2 = 62\n\n</Box>\n\nMan kann auch mehrmals addieren:\n\n<MiniRepl\n  client:visible\n  tune={`note(\"c2 [eb3,g3]\".add(\"<0 <1 -1>>\").add(\"0,7\"))\n.color(\"<cyan <magenta yellow>>\").adsr(\"[.1 0]:.2:[1 0]\")\n.sound(\"gm_acoustic_bass\").room(.5)`}\n  punchcard\n/>\n\n**add + scale**\n\n<MiniRepl\n  client:visible\n  tune={`n(\"<0 [2 4] <3 5> [~ <4 1>]>*2\".add(\"<0 [0,2,4]>/4\"))\n.scale(\"C5:minor\").release(.5)\n.sound(\"gm_xylophone\").room(.5)`}\n  punchcard\n/>\n\n**Alles zusammen**\n\n<MiniRepl\n  client:visible\n  tune={`stack(\n  n(\"<0 [2 4] <3 5> [~ <4 1>]>*2\".add(\"<0 [0,2,4]>/4\"))\n  .scale(\"C5:minor\")\n  .sound(\"gm_xylophone\")\n  .room(.4).delay(.125),\n  note(\"c2 [eb3,g3]\".add(\"<0 <1 -1>>\"))\n  .adsr(\"[.1 0]:.2:[1 0]\")\n  .sound(\"gm_acoustic_bass\")\n  .room(.5),\n  n(\"0 1 [2 3] 2\").sound(\"jazz\").jux(rev).slow(2)\n)`}\n/>\n\n**ply**\n\n<MiniRepl client:visible tune={`sound(\"hh, bd rim\").bank(\"RolandTR707\").ply(2)`} punchcard />\n\ndas ist wie:\n\n<MiniRepl client:visible tune={`sound(\"hh*2, bd*2 rim*2\").bank(\"RolandTR707\")`} punchcard />\n\n<Box>\n\nProbier `ply` mit einem pattern zu automatisieren, z.b. `\"<1 2 1 3>\"`\n\n</Box>\n\n**off**\n\n<MiniRepl\n  client:visible\n  tune={`n(\"<0 [4 <3 2>] <2 3> [~ 1]>\"\n  .off(1/8, x=>x.add(4))\n  //.off(1/4, x=>x.add(7))\n).scale(\"<C5:minor Db5:mixolydian>/4\")\n.s(\"triangle\").room(.5).ds(\".1:0\").delay(.5)`}\n  punchcard\n/>\n\n<Box>\n\nIn der Notation `x=>x.`, ist `x` das Pattern, das wir bearbeiten.\n\n</Box>\n\n`off` ist auch nützlich für Sounds:\n\n<MiniRepl\n  client:visible\n  tune={`s(\"bd sd,[~ hh]*2\").bank(\"CasioRZ1\")\n  .off(1/8, x=>x.speed(1.5).gain(.25))`}\n/>\n\n| Name | Beschreibung                      | Beispiel                                                                            |\n| ---- | --------------------------------- | ----------------------------------------------------------------------------------- |\n| rev  | rückwärts                         | <MiniRepl client:visible tune={`n(\"0 2 4 6\").scale(\"C:minor\").rev()`} />            |\n| jux  | einen Stereo-Kanal modifizieren   | <MiniRepl client:visible tune={`n(\"0 2 4 6\").scale(\"C:minor\").jux(rev)`} />         |\n| add  | addiert Zahlen oder Noten         | <MiniRepl client:visible tune={`n(\"0 2 4 6\".add(\"<0 1 2 1>\")).scale(\"C:minor\")`} /> |\n| ply  | multipliziert jedes Element x mal | <MiniRepl client:visible tune={`s(\"bd sd\").ply(\"<1 2 3>\")`} />                      |\n| off  | verzögert eine modifizierte Kopie | <MiniRepl client:visible tune={`s(\"bd sd, hh*4\").off(1/8, x=>x.speed(2))`} />       |\n"],"names":["_jsxs","_Fragment","children","_components","h1","id","_jsx","a","tabindex","href","span","class","p","strong","MiniRepl","tune","punchcard","Box","code","table","thead","tr","th","tbody","td"],"mappings":"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"}