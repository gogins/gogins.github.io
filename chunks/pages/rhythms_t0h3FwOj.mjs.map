{"version":3,"file":"rhythms_t0h3FwOj.mjs","sources":["../../../src/pages/recipes/rhythms.mdx"],"sourcesContent":["---\ntitle: Build Rhythms\nlayout: ../../layouts/MainLayout.astro\n---\n\nimport { MiniRepl } from '../../docs/MiniRepl';\n\nNote:\n\n- this has been (partly) translated from https://tidalcycles.org/docs/patternlib/howtos/buildrhythms\n- this only sounds good with `samples('github:tidalcycles/dirt-samples')` in prebake\n\n# Build Rhythms\n\nThis page will teach you how to get started writing rhythms using different techniques. It is a good way to learn Strudel in a more intuitive way.\n\n## From a simple to a complex rhythm\n\nSimple bass drum - snare:\n\n<MiniRepl client:idle tune={`s(\"bd sd\").slow(2)`} />\n\nLet's pick a different snare sample:\n\n<MiniRepl client:idle tune={`s(\"bd sd:3\").slow(2)`} />\n\nNow, we are going to change the rhythm:\n\n<MiniRepl client:idle tune={`s(\"bd*2 [~ sd:3]\").slow(2)`} />\n\nAnd add some toms:\n\n<MiniRepl client:idle tune={`s(\"bd*2 [[~ lt] sd:3] lt:1 [ht mt*2]\").slow(2)`} />\n\nStart to transform, shift a quarter cycle every other cycle:\n\n<MiniRepl\n  client:idle\n  tune={`s(\"bd*2 [[~ lt] sd:3] lt:1 [ht mt*2]\")\n.every(2, early(.25)).slow(2)`}\n/>\n\nPattern the shift amount:\n\n<MiniRepl\n  client:idle\n  tune={`s(\"bd*2 [[~ lt] sd:3] lt:1 [ht mt*2]\")\n.every(2, early(\"<.25 .125 .5>\")).slow(2)`}\n/>\n\nAdd some patterned effects:\n\n<MiniRepl\n  client:idle\n  tune={`s(\"bd*2 [[~ lt] sd:3] lt:1 [ht mt*2]\")\n.every(2, early(\"<.25 .125 .5>\"))\n.shape(\"<0 .5 .3>\")\n.room(saw.range(0,.2).slow(4))\n.slow(2)`}\n/>\n\nMore transformation:\n\n<MiniRepl\n  client:idle\n  tune={`s(\"bd*2 [[~ lt] sd:3] lt:1 [ht mt*2]\")\n.every(2, early(\"<.25 .125 .5>\"))\n.shape(\"<0 .5 .3>\")\n.room(saw.range(0,.2).slow(4))\n.jux(id, rev, x=>x.speed(2))\n.slow(2)`}\n/>\n\n## Another rhythmic construction\n\nLet's start with a sequence:\n\n<MiniRepl client:idle tune={`n(\"0 0 [2 0] [2 3]\").s(\"feel\").speed(1.5).slow(2)`} />\n\nWe add a bit of flavour:\n\n<MiniRepl client:idle tune={`n(\"0 <0 4> [2 0] [2 3]\").s(\"feel\").speed(1.5).slow(2)`} />\n\nSwap the samples round every other cycle:\n\nTODO: implement `rot`\n"],"names":["_jsxs","_Fragment","children","_jsx","_components","p","ul","li","code","h1","id","h2","a","tabindex","href","span","class","MiniRepl","tune"],"mappings":"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"}