{"version":3,"file":"about_BCYldCth.mjs","sources":["../../../../node_modules/.pnpm/astro@4.0.8_@types+node@20.10.6_typescript@5.3.3/node_modules/astro/dist/assets/internal.js","../../../../node_modules/.pnpm/astro@4.0.8_@types+node@20.10.6_typescript@5.3.3/node_modules/astro/components/Image.astro","../../../../node_modules/.pnpm/astro@4.0.8_@types+node@20.10.6_typescript@5.3.3/node_modules/astro/components/Picture.astro","../../../src/pages/technical-manual/about.mdx"],"sourcesContent":["import { AstroError, AstroErrorData } from \"../core/errors/index.js\";\nimport { DEFAULT_HASH_PROPS } from \"./consts.js\";\nimport { isLocalService } from \"./services/service.js\";\nimport { isESMImportedImage, isRemoteImage } from \"./utils/imageKind.js\";\nasync function getConfiguredImageService() {\n  if (!globalThis?.astroAsset?.imageService) {\n    const { default: service } = await import(\n      // @ts-expect-error\n      \"virtual:image-service\"\n    ).catch((e) => {\n      const error = new AstroError(AstroErrorData.InvalidImageService);\n      error.cause = e;\n      throw error;\n    });\n    if (!globalThis.astroAsset)\n      globalThis.astroAsset = {};\n    globalThis.astroAsset.imageService = service;\n    return service;\n  }\n  return globalThis.astroAsset.imageService;\n}\nasync function getImage(options, imageConfig) {\n  if (!options || typeof options !== \"object\") {\n    throw new AstroError({\n      ...AstroErrorData.ExpectedImageOptions,\n      message: AstroErrorData.ExpectedImageOptions.message(JSON.stringify(options))\n    });\n  }\n  if (typeof options.src === \"undefined\") {\n    throw new AstroError({\n      ...AstroErrorData.ExpectedImage,\n      message: AstroErrorData.ExpectedImage.message(\n        options.src,\n        \"undefined\",\n        JSON.stringify(options)\n      )\n    });\n  }\n  const service = await getConfiguredImageService();\n  const resolvedOptions = {\n    ...options,\n    src: typeof options.src === \"object\" && \"then\" in options.src ? (await options.src).default ?? await options.src : options.src\n  };\n  const clonedSrc = isESMImportedImage(resolvedOptions.src) ? (\n    // @ts-expect-error - clone is a private, hidden prop\n    resolvedOptions.src.clone ?? resolvedOptions.src\n  ) : resolvedOptions.src;\n  resolvedOptions.src = clonedSrc;\n  const validatedOptions = service.validateOptions ? await service.validateOptions(resolvedOptions, imageConfig) : resolvedOptions;\n  const srcSetTransforms = service.getSrcSet ? await service.getSrcSet(validatedOptions, imageConfig) : [];\n  let imageURL = await service.getURL(validatedOptions, imageConfig);\n  let srcSets = await Promise.all(\n    srcSetTransforms.map(async (srcSet) => ({\n      transform: srcSet.transform,\n      url: await service.getURL(srcSet.transform, imageConfig),\n      descriptor: srcSet.descriptor,\n      attributes: srcSet.attributes\n    }))\n  );\n  if (isLocalService(service) && globalThis.astroAsset.addStaticImage && !(isRemoteImage(validatedOptions.src) && imageURL === validatedOptions.src)) {\n    const propsToHash = service.propertiesToHash ?? DEFAULT_HASH_PROPS;\n    imageURL = globalThis.astroAsset.addStaticImage(validatedOptions, propsToHash);\n    srcSets = srcSetTransforms.map((srcSet) => ({\n      transform: srcSet.transform,\n      url: globalThis.astroAsset.addStaticImage(srcSet.transform, propsToHash),\n      descriptor: srcSet.descriptor,\n      attributes: srcSet.attributes\n    }));\n  }\n  return {\n    rawOptions: resolvedOptions,\n    options: validatedOptions,\n    src: imageURL,\n    srcSet: {\n      values: srcSets,\n      attribute: srcSets.map((srcSet) => `${srcSet.url} ${srcSet.descriptor}`).join(\", \")\n    },\n    attributes: service.getHTMLAttributes !== void 0 ? await service.getHTMLAttributes(validatedOptions, imageConfig) : {}\n  };\n}\nexport {\n  getConfiguredImageService,\n  getImage\n};\n","---\nimport { getImage, type LocalImageProps, type RemoteImageProps } from 'astro:assets';\nimport { AstroError, AstroErrorData } from '../dist/core/errors/index.js';\nimport type { HTMLAttributes } from '../types';\n\n// The TypeScript diagnostic for JSX props uses the last member of the union to suggest props, so it would be better for\n// LocalImageProps to be last. Unfortunately, when we do this the error messages that remote images get are complete nonsense\n// Not 100% sure how to fix this, seems to be a TypeScript issue. Unfortunate.\ntype Props = LocalImageProps | RemoteImageProps;\n\nconst props = Astro.props;\n\nif (props.alt === undefined || props.alt === null) {\n\tthrow new AstroError(AstroErrorData.ImageMissingAlt);\n}\n\n// As a convenience, allow width and height to be string with a number in them, to match HTML's native `img`.\nif (typeof props.width === 'string') {\n\tprops.width = parseInt(props.width);\n}\n\nif (typeof props.height === 'string') {\n\tprops.height = parseInt(props.height);\n}\n\nconst image = await getImage(props);\n\nconst additionalAttributes: HTMLAttributes<'img'> = {};\nif (image.srcSet.values.length > 0) {\n\tadditionalAttributes.srcset = image.srcSet.attribute;\n}\n---\n\n<img src={image.src} {...additionalAttributes} {...image.attributes} />\n","---\nimport { getImage, type LocalImageProps, type RemoteImageProps } from 'astro:assets';\nimport type { GetImageResult, ImageOutputFormat } from '../dist/@types/astro';\nimport { isESMImportedImage } from '../dist/assets/utils/imageKind';\nimport { AstroError, AstroErrorData } from '../dist/core/errors/index.js';\nimport type { HTMLAttributes } from '../types';\n\ntype Props = (LocalImageProps | RemoteImageProps) & {\n\tformats?: ImageOutputFormat[];\n\tfallbackFormat?: ImageOutputFormat;\n\tpictureAttributes?: HTMLAttributes<'picture'>;\n};\n\nconst defaultFormats = ['webp'] as const;\nconst defaultFallbackFormat = 'png' as const;\n\n// Certain formats don't want PNG fallbacks:\n// - GIF will typically want to stay as a gif, either for animation or for the lower amount of colors\n// - SVGs can't be converted to raster formats in most cases\n// - JPEGs compress photographs and high-noise images better than PNG in most cases\n// For those, we'll use the original format as the fallback instead.\nconst specialFormatsFallback = ['gif', 'svg', 'jpg', 'jpeg'] as const;\n\nconst { formats = defaultFormats, pictureAttributes = {}, fallbackFormat, ...props } = Astro.props;\n\nif (props.alt === undefined || props.alt === null) {\n\tthrow new AstroError(AstroErrorData.ImageMissingAlt);\n}\n\nconst optimizedImages: GetImageResult[] = await Promise.all(\n\tformats.map(\n\t\tasync (format) =>\n\t\t\tawait getImage({ ...props, format: format, widths: props.widths, densities: props.densities })\n\t)\n);\n\nlet resultFallbackFormat = fallbackFormat ?? defaultFallbackFormat;\nif (\n\t!fallbackFormat &&\n\tisESMImportedImage(props.src) &&\n\tspecialFormatsFallback.includes(props.src.format)\n) {\n\tresultFallbackFormat = props.src.format;\n}\n\nconst fallbackImage = await getImage({\n\t...props,\n\tformat: resultFallbackFormat,\n\twidths: props.widths,\n\tdensities: props.densities,\n});\n\nconst imgAdditionalAttributes: HTMLAttributes<'img'> = {};\nconst sourceAdditionaAttributes: HTMLAttributes<'source'> = {};\n\n// Propagate the `sizes` attribute to the `source` elements\nif (props.sizes) {\n\tsourceAdditionaAttributes.sizes = props.sizes;\n}\n\nif (fallbackImage.srcSet.values.length > 0) {\n\timgAdditionalAttributes.srcset = fallbackImage.srcSet.attribute;\n}\n---\n\n<picture {...pictureAttributes}>\n\t{\n\t\tObject.entries(optimizedImages).map(([_, image]) => {\n\t\t\tconst srcsetAttribute =\n\t\t\t\tprops.densities || (!props.densities && !props.widths)\n\t\t\t\t\t? `${image.src}${image.srcSet.values.length > 0 ? ', ' + image.srcSet.attribute : ''}`\n\t\t\t\t\t: image.srcSet.attribute;\n\t\t\treturn (\n\t\t\t\t<source\n\t\t\t\t\tsrcset={srcsetAttribute}\n\t\t\t\t\ttype={'image/' + image.options.format}\n\t\t\t\t\t{...sourceAdditionaAttributes}\n\t\t\t\t/>\n\t\t\t);\n\t\t})\n\t}\n\t<img src={fallbackImage.src} {...imgAdditionalAttributes} {...fallbackImage.attributes} />\n</picture>\n","This section introduces you to Strudel in a technical sense. If you just want to _use_ Strudel, have a look at the [Tutorial](/workshop/getting-started).\n\nTODO\n"],"names":["AstroErrorData.InvalidImageService","getImage","AstroErrorData.ExpectedImageOptions","AstroErrorData.ExpectedImage","$$Astro","$$createAstro","$$createComponent","Astro","AstroErrorData.ImageMissingAlt","$$render","$$maybeRenderHead","$$addAttribute","$$spreadAttributes","_jsx","_components","em","children","a","href","p"],"mappings":"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","x_google_ignoreList":[0,1,2]}