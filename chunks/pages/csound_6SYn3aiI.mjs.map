{"version":3,"file":"csound_6SYn3aiI.mjs","sources":["../../../src/pages/learn/csound.mdx"],"sourcesContent":["---\ntitle: Csound\nlayout: ../../layouts/MainLayout.astro\n---\n\nimport { MiniRepl } from '../../docs/MiniRepl';\nimport { JsDoc } from '../../docs/JsDoc';\nimport Colors from '../../docs/Colors.jsx';\n\n# Using CSound with Strudel\n\nðŸ§ª Strudel has experimental support for csound, using [@csound/browser](https://www.npmjs.com/package/@csound/browser).\n\n## Importing .orc files\n\nTo use existing csound instruments, you can load and use an orc file from an URL like this:\n\n<MiniRepl\n  client:only=\"react\"\n  tune={`// livecode.orc by Steven Yi\nawait loadOrc('github:kunstmusik/csound-live-code/master/livecode.orc')\nnote(\"c a f e\").csound('FM1')\n`}\n/>\n\nNote that the above url uses the `github:` shortcut, which resolves to the raw file on github, but you can use any URL you like.\n\nThe awesome [`livecode.orc by Steven Yi`](https://github.com/kunstmusik/csound-live-code) comes packed with many sounds ready for use:\n\n<MiniRepl\n  client:only=\"react\"\n  tune={`// livecode.orc by Steven Yi\nawait loadOrc('github:kunstmusik/csound-live-code/master/livecode.orc')\nnote(\"c a f e\").csound(cat(\n\"Sub1\", // \tSubstractive Synth, 3osc\n\"Sub2\", // \tSubtractive Synth, two saws, fifth freq apart\n\"Sub3\", // \tSubtractive Synth, three detuned saws, swells in\n\"Sub4\", // \tSubtractive Synth, detuned square/saw, stabby. Nice as a lead in octave 2, nicely grungy in octave -2, -1\n\"Sub5\", // \tSubtractive Synth, detuned square/triangle\n\"Sub6\", // \tSubtractive Synth, saw, K35 filters\n\"Sub7\", // \tSubtractive Synth, saw + tri, K35 filters\n\"Sub8\", // \tSubtractive Synth, square + saw + tri, diode ladder filter\n\"SynBrass\", // \tSynthBrass subtractive synth\n\"SynHarp\", // \tSynth Harp subtracitve Synth\n\"SSaw\", // \tSuperSaw sound using 9 bandlimited saws (3 sets of detuned saws at octaves)\n\"Mode1\", // \tModal Synthesis Instrument: Percussive/organ-y sound\n\"Plk\", // \tPluck sound using impulses, noise, and waveguides\n\"Organ1\", // \tWavetable Organ sound using additive synthesis\n\"Organ2\", // \tOrgan sound based on M1 Organ 2 patch\n\"Organ3\", // \tWavetable Organ using Flute 8' and Flute 4', wavetable based on Claribel Flute http://www.pykett.org.uk/the\\_tonal\\_structure\\_of\\_organ\\_flutes.htm\n\"Bass\", // \tSubtractive Bass sound\n\"ms20_bass\", // \tMS20-style Bass Sound\n\"VoxHumana\", // \tVoxHumana Patch\n\"FM1\", // \tFM 3:1 C:M ratio, 2->0.025 index, nice for bass\n\"Noi\", // \tFiltered noise, exponential envelope\n\"Wobble\", // \tWobble patched based on Jacob Joaquin's \"Tempo-Synced Wobble Bass\"\n\"Sine\", // \tSimple Sine-wave instrument with exponential envelope\n\"Square\", // \tSimple Square-wave instrument with exponential envelope\n\"Saw\", // \tSimple Sawtooth-wave instrument with exponential envelope\n\"Squine1\", // \tSquinewave Synth, 2 osc\n\"Form1\", // \tFormant Synth, buzz source, soprano ah formants\n\"Mono\", // \tMonophone synth using sawtooth wave and 4pole lpf. Use \"start(\"Mono\") to run the monosynth, then use MonoNote instrument to play the instrument.\n\"MonoNote\", // \tNote playing instrument for Mono synth. Be careful to use this and not try to create multiple Mono instruments!\n\"Click\", // \tBandpass-filtered impulse glitchy click sound. p4 = center frequency (e.g., 3000, 6000)\n\"NoiSaw\", // \tHighpass-filtered noise+saw sound. Use NoiSaw.cut channel to adjust cutoff.\n\"Clap\", // \tModified clap instrument by Istvan Varga (clap1.orc)\n\"BD\", // \tBass Drum - From Iain McCurdy's TR-808.csd\n\"SD\", // \tSnare Drum - From Iain McCurdy's TR-808.csd\n\"OHH\", // \tOpen High Hat - From Iain McCurdy's TR-808.csd\n\"CHH\", // \tClosed High Hat - From Iain McCurdy's TR-808.csd\n\"HiTom\", // \tHigh Tom - From Iain McCurdy's TR-808.csd\n\"MidTom\", // \tMid Tom - From Iain McCurdy's TR-808.csd\n\"LowTom\", // \tLow Tom - From Iain McCurdy's TR-808.csd\n\"Cymbal\", // \tCymbal - From Iain McCurdy's TR-808.csd\n\"Rimshot\", // \tRimshot - From Iain McCurdy's TR-808.csd\n\"Claves\", // \tClaves - From Iain McCurdy's TR-808.csd\n\"Cowbell\", // \tCowbell - From Iain McCurdy's TR-808.csd\n\"Maraca\", // \tMaraca - from Iain McCurdy's TR-808.csd\n\"HiConga\", // \tHigh Conga - From Iain McCurdy's TR-808.csd\n\"MidConga\", // \tMid Conga - From Iain McCurdy's TR-808.csd\n\"LowConga\", // \tLow Conga - From Iain McCurdy's TR-808.csd\n))`}\n/>\n\n## Writing your own instruments\n\nYou can define your own instrument(s) with `loadCsound` like this:\n\n<MiniRepl\n  client:only=\"react\"\ntune={`await loadCsound\\`\ninstr CoolSynth\n    iduration = p3\n    ifreq = p4\n    igain = p5\n    ioct = octcps(ifreq)\n\n    kpwm = oscili(.05, 8)\n    asig = vco2(igain, ifreq, 4, .5 + kpwm)\n    asig += vco2(igain, ifreq * 2)\n\n    idepth = 2\n    acut = transegr:a(0, .005, 0, idepth, .06, -4.2, 0.001, .01, -4.2, 0) ; filter envelope\n    asig = zdf_2pole(asig, cpsoct(ioct + acut + 2), 0.5)\n\n    iattack = .01\n    isustain = .5\n    idecay = .1\n    irelease = .1\n    asig *= linsegr:a(0, iattack, 1, idecay, isustain, iduration, isustain, irelease, 0)\n\n    out(asig, asig)\n\nendin\\`\n\n\"<0 2 [4 6](3,4,2) 3\\*2>\"\n.off(1/4, add(2))\n.off(1/2, add(6))\n.scale('D minor')\n.note()\n.csound('CoolSynth')`}\n/>\n\n## Parameters\n\nThe `.csound` function sends the following p values:\n\n|     |                                  |\n| --- | -------------------------------- |\n| p1  | instrument name e.g. `CoolSynth` |\n| p2  | time offset, when it should play |\n| p3  | the duration of the event / hap  |\n| p4  | frequency in Hertz               |\n| p5  | normalized `gain`, 0-1           |\n\nThere is an alternative `.csoundm` function with a different flavor:\n\n|     |                                   |\n| --- | --------------------------------- |\n| p4  | midi key number, unrounded, 0-127 |\n| p5  | midi velocity, 0-127              |\n\nIn both cases, p4 is derived from the value of `freq` or `note`.\n\n## Limitations / Future Plans\n\nApart from the above listed p values, no other parameter can be patterned so far.\nThis also means that [audio effects](/learn/effects/) will not work.\nIn the future, the integration could be improved by passing all patterned control parameters to the csound instrument.\nThis could work by a unique [channel](https://kunstmusik.github.io/icsc2022-csound-web/tutorial2-interacting-with-csound/#step-4---writing-continuous-data-channels)\nfor each value. Channels could be read [like this](https://github.com/csound/csound/blob/master/Android/CsoundForAndroid/CsoundAndroidExamples/src/main/res/raw/multitouch_xy.csd).\nAlso, it might make sense to have a standard library of csound instruments for strudel's effects.\n\nNow, let's dive into the [Functional JavaScript API](/functions/intro)\n"],"names":["_jsxs","_Fragment","children","_components","h1","id","_jsx","a","tabindex","href","span","class","p","h2","tune","code","table","thead","tr","th","tbody","td"],"mappings":"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"}