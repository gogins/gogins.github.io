{"version":3,"file":"cycles_xFh_KAXG.mjs","sources":["../../../src/useEvent.mjs","../../../src/useFrame.mjs","../../../src/components/PitchSlider.jsx","../../../src/components/Box.astro","../../../src/pages/understand/cycles.mdx"],"sourcesContent":["import { useEffect } from 'react';\n\nfunction useEvent(name, onTrigger, useCapture = false) {\n  useEffect(() => {\n    document.addEventListener(name, onTrigger, useCapture);\n    return () => {\n      document.removeEventListener(name, onTrigger, useCapture);\n    };\n  }, [onTrigger]);\n}\n\nexport default useEvent;\n","import { useEffect, useRef } from 'react';\n\nfunction useFrame(callback, autostart = false) {\n  const requestRef = useRef();\n  const previousTimeRef = useRef();\n\n  const animate = (time) => {\n    if (previousTimeRef.current !== undefined) {\n      const deltaTime = time - previousTimeRef.current;\n      callback(time, deltaTime);\n    }\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  const start = () => {\n    requestRef.current = requestAnimationFrame(animate);\n  };\n  const stop = () => {\n    requestRef.current && cancelAnimationFrame(requestRef.current);\n    delete requestRef.current;\n  };\n  useEffect(() => {\n    if (requestRef.current) {\n      stop();\n      start();\n    }\n  }, [callback]);\n\n  useEffect(() => {\n    if (autostart) {\n      start();\n    }\n    return stop;\n  }, []); // Make sure the effect only runs once\n\n  return {\n    start,\n    stop,\n  };\n}\n\nexport default useFrame;\n","import useEvent from '@src/useEvent.mjs';\nimport useFrame from '@src/useFrame.mjs';\nimport { getAudioContext } from '@strudel/webaudio';\nimport { midi2note } from '@strudel/core';\nimport { useState, useRef, useEffect } from 'react';\nimport Claviature from '@components/Claviature';\n\nlet Button = (props) => <button {...props} className=\"bg-lineHighlight p-2 rounded-md color-foreground\" />;\n\nfunction plotValues(ctx, values, min, max, color) {\n  let { width, height } = ctx.canvas;\n  ctx.strokeStyle = color;\n  const thickness = 8;\n  ctx.lineWidth = thickness;\n  ctx.beginPath();\n\n  let x = (f) => ((f - min) / (max - min)) * width;\n  let y = (i) => (1 - i / values.length) * height;\n  values.forEach((f, i, a) => {\n    ctx.lineTo(x(f), y(i));\n  });\n  ctx.stroke();\n}\n\nfunction getColor(cssVariable) {\n  if (typeof document === 'undefined') {\n    return 'white';\n  }\n  const dummyElement = document.createElement('div');\n  dummyElement.style.color = cssVariable;\n  // Append the dummy element to the document body\n  document.body.appendChild(dummyElement);\n  // Get the computed style of the dummy element\n  const styles = getComputedStyle(dummyElement);\n  // Get the value of the CSS variable\n  const color = styles.getPropertyValue(cssVariable);\n  document.body.removeChild(dummyElement);\n  return color;\n}\n\nlet pitchColor = '#eab308';\nlet frequencyColor = '#3b82f6';\n\nexport function PitchSlider({\n  buttons = [],\n  animatable = false,\n  plot = false,\n  showPitchSlider = false,\n  showFrequencySlider = false,\n  pitchStep = '0.001',\n  min = 55,\n  max = 7040,\n  initial = 220,\n  baseFrequency = min,\n  zeroOffset = 0,\n  claviature,\n}) {\n  const oscRef = useRef();\n  const activeRef = useRef();\n  const freqRef = useRef(initial);\n  const historyRef = useRef([freqRef.current]);\n  const frameRef = useRef();\n  const canvasRef = useRef();\n  const [hz, setHz] = useState(freqRef.current);\n\n  useEffect(() => {\n    freqRef.current = hz;\n  }, [hz]);\n\n  useEvent('mouseup', () => {\n    oscRef.current?.stop();\n    activeRef.current = false;\n  });\n\n  let freqSlider2freq = (progress) => min + progress * (max - min);\n  let pitchSlider2freq = (progress) => min * 2 ** (progress * Math.log2(max / min));\n  let freq2freqSlider = (freq) => (freq - min) / (max - min);\n  let freq2pitchSlider = (freq) => {\n    const [minOct, maxOct] = [Math.log2(min), Math.log2(max)];\n    return (Math.log2(freq) - minOct) / (maxOct - minOct);\n  };\n\n  const freqSlider = freq2freqSlider(hz);\n  const pitchSlider = freq2pitchSlider(hz);\n\n  let startOsc = (hz) => {\n    if (oscRef.current) {\n      oscRef.current.stop();\n    }\n    oscRef.current = getAudioContext().createOscillator();\n    oscRef.current.frequency.value = hz;\n    oscRef.current.connect(getAudioContext().destination);\n    oscRef.current.start();\n    activeRef.current = true;\n    setHz(hz);\n  };\n\n  let startSweep = (exp = false) => {\n    let f = min;\n    startOsc(f);\n    const frame = () => {\n      if (f < max) {\n        if (!exp) {\n          f += 10;\n        } else {\n          f *= 1.01;\n        }\n        oscRef.current.frequency.value = f;\n        frameRef.current = requestAnimationFrame(frame);\n      } else {\n        oscRef.current.stop();\n        cancelAnimationFrame(frameRef.current);\n      }\n      setHz(f);\n    };\n    requestAnimationFrame(frame);\n  };\n\n  useFrame(() => {\n    historyRef.current.push(freqRef.current);\n    historyRef.current = historyRef.current.slice(-1000);\n    if (canvasRef.current) {\n      let ctx = canvasRef.current.getContext('2d');\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      if (showFrequencySlider) {\n        plotValues(ctx, historyRef.current, min, max, frequencyColor);\n      }\n      if (showPitchSlider) {\n        const [minOct, maxOct] = [Math.log2(min), Math.log2(max)];\n        let perceptual = historyRef.current.map((v) => Math.log2(v));\n        plotValues(ctx, perceptual, minOct, maxOct, pitchColor);\n      }\n    }\n  }, plot);\n\n  let handleChangeFrequency = (f) => {\n    setHz(f);\n    if (oscRef.current) {\n      oscRef.current.frequency.value = f;\n    }\n  };\n  let handleMouseDown = () => {\n    cancelAnimationFrame(frameRef.current);\n    startOsc(hz);\n  };\n\n  let exponent, activeNote, activeNoteLabel;\n  if (showPitchSlider) {\n    const expOffset = baseFrequency ? Math.log2(baseFrequency / min) : 0;\n    exponent = freq2pitchSlider(hz) * Math.log2(max / min) - expOffset;\n    let semitones = parseFloat((exponent * 12).toFixed(2));\n    if (zeroOffset) {\n      semitones = semitones + zeroOffset;\n      const isWhole = Math.round(semitones) === semitones;\n      activeNote = midi2note(Math.round(semitones));\n      activeNoteLabel = (!isWhole ? '~' : '') + activeNote;\n      semitones = !isWhole ? semitones.toFixed(2) : semitones;\n      exponent = (\n        <>\n          (<span className=\"text-yellow-500\">{semitones}</span> - {zeroOffset})/12\n        </>\n      );\n    } else if (semitones % 12 === 0) {\n      exponent = <span className=\"text-yellow-500\">{semitones / 12}</span>;\n    } else if (semitones % 1 === 0) {\n      exponent = (\n        <>\n          <span className=\"text-yellow-500\">{semitones}</span>/12\n        </>\n      );\n    } else {\n      exponent = <span className=\"text-yellow-500\">{exponent.toFixed(2)}</span>;\n    }\n  }\n  return (\n    <>\n      <span className=\"font-mono\">\n        {showFrequencySlider && <span className=\"text-blue-500\">{hz.toFixed(0)}Hz</span>}\n        {showFrequencySlider && showPitchSlider && <> = </>}\n        {showPitchSlider && (\n          <>\n            {baseFrequency || min}Hz * 2<sup>{exponent}</sup>\n          </>\n        )}\n      </span>\n      {claviature && (\n        <>\n          {' '}\n          = <span className=\"text-yellow-500\">{activeNoteLabel}</span>\n        </>\n      )}\n      <div>\n        {showFrequencySlider && (\n          <div className=\"flex space-x-1 items-center\">\n            <input\n              type=\"range\"\n              value={freqSlider}\n              min={0}\n              max={1}\n              step={0.001}\n              onMouseDown={handleMouseDown}\n              className={`block w-full max-w-[600px] accent-blue-500 `}\n              onChange={(e) => {\n                const f = freqSlider2freq(parseFloat(e.target.value));\n                handleChangeFrequency(f);\n              }}\n            />\n          </div>\n        )}\n        {showPitchSlider && (\n          <div>\n            <input\n              type=\"range\"\n              value={pitchSlider}\n              min={0}\n              max={1}\n              //step=\".001\"\n              step={pitchStep}\n              onMouseDown={handleMouseDown}\n              className={`block w-full max-w-[600px] accent-yellow-500`}\n              onChange={(e) => {\n                const f = pitchSlider2freq(parseFloat(e.target.value));\n                handleChangeFrequency(f);\n              }}\n            />\n          </div>\n        )}\n      </div>\n      <div className=\"px-2\">\n        {plot && <canvas ref={canvasRef} className=\"w-full max-w-[584px] h-[300px]\" height=\"600\" width={800} />}\n      </div>\n      <div className=\"space-x-2\">\n        {animatable && (\n          <Button onClick={() => startSweep()}>\n            <span style={{ color: '#3b82f6' }}>Frequency Sweep</span>\n          </Button>\n        )}\n        {animatable && (\n          <Button onClick={() => startSweep(true)}>\n            <span style={{ color: '#eab308' }}>Pitch Sweep</span>\n          </Button>\n        )}\n        {buttons.map((f, i) => (\n          <Button key={(f, i)} onMouseDown={() => startOsc(f)}>\n            {f}Hz\n          </Button>\n        ))}\n      </div>\n      {claviature && (\n        <Claviature\n          onMouseDown={(note) => {\n            const f = 440 * 2 ** ((note - 69) / 12);\n            handleChangeFrequency(f);\n            cancelAnimationFrame(frameRef.current);\n            startOsc(f);\n          }}\n          options={{\n            range: ['A1', 'A5'],\n            scaleY: 0.75,\n            scaleX: 0.86,\n            colorize: activeNote ? [{ keys: [activeNote], color: '#eab308' }] : [],\n            labels: activeNote ? { [activeNote]: activeNote } : {},\n          }}\n        />\n      )}\n    </>\n  );\n}\n","---\nimport LightBulbIcon from '@heroicons/react/20/solid/LightBulbIcon';\n//import MusicalNoteIcon from '@heroicons/react/20/solid/MusicalNoteIcon';\n---\n\n<div class=\"py-1 px-6 pr-10 bg-lineHighlight relative mb-4\">\n  <div><slot /></div>\n  <LightBulbIcon className=\"w-5 h-5 absolute top-4 right-4\" />\n  <!-- <MusicalNoteIcon className=\"w-5 h-5 absolute top-4 right-4\" /> -->\n</div>\n","---\ntitle: Understanding Cycles\nlayout: ../../layouts/MainLayout.astro\n---\n\nimport { MiniRepl } from '../../docs/MiniRepl';\nimport { PitchSlider } from '../../components/PitchSlider';\nimport Box from '@components/Box.astro';\n\n# Understanding Cycles\n\nThe concept of cycles is very central to be able to understand how Strudel works.\nStrudel's mother language, TidalCycles, even has it in its name.\n\n## Cycles and BPM\n\nIn most music software, the unit BPM (beats per minute) is used to set the tempo.\nStrudel expresses tempo as CPS (cycles per second), with a default of 0.5 CPS:\n\n<MiniRepl client:visible tune={`s(\"bd\")`} />\n\nHere we can hear the 0.5CPS in action: The kick repeats once every two seconds.\nLet's make it 4 kicks:\n\n<MiniRepl client:visible tune={`s(\"bd bd bd bd\")`} />\n\nNow we have 4 kicks per cycle, but the whole pattern still plays at 0.5CPS.\nIn terms of BPM, most musicians would tell you this is playing at 120bpm.\nWhat about this one:\n\n<MiniRepl client:visible tune={`s(\"bd hh bd hh\")`} />\n\nBecause the second sound is now a hihat, the tempo feels slower again.\nThis brings us to an important realization:\n\n<Box>\n\nTempo is based on perception.\nThe choice of sounds also has an impact on the tempo feel.\nThis is why the same CPS can produce different perceived tempos.\n\n</Box>\n\n## Setting CPM\n\nIf you're familiar with BPM, you can use the `cpm` method to set the tempo in cycles per minute:\n\n<MiniRepl client:visible tune={`s(\"bd hh\").cpm(110)`} />\n\nIf you want to add more beats per cycle, you might want to divide the cpm:\n\n<MiniRepl client:visible tune={`s(\"bd sd bd rim, hh*8\").cpm(110/4)`} />\n\nOr using 2 beats per cycle:\n\n<MiniRepl client:visible tune={`s(\"bd sd, hh*4\").cpm(110/2)`} />\n\n<Box>\n\nTo set a specific bpm, use `.cpm(bpm/bpc)`\n\n- bpm: the target beats per minute\n- bpc: the number of perceived beats per cycle\n\n</Box>\n\n## Cycles and Bars\n\nAlso in most music software, multiple beats form a bar (or measure).\nThe so called time signature specifies how many beats are in each bar.\nIn many types of music, it is common to use 4 beats per bar, also known as 4/4 time.\nMany music programs use it as a default.\n\nStrudel does not a have concept of bars or measures, there are only cycles.\nHow you use them is up to you. Above, we've had this example:\n\n<MiniRepl client:visible tune={`s(\"bd sd bd rim, hh*8\").cpm(110/4)`} />\n\nThis could be interpreted as 4/4 time with a tempo of 110bpm.\nWe could write out multiple bars like this:\n\n<MiniRepl\n  client:visible\n  tune={`s(\\`<\n[bd sd bd rim, hh*8] \n[bd sd bd rim*2, hh*8]\n>\\`).cpm(110/4)`}\n/>\n\nInstead of writing out each bar separately, we could express this much shorter:\n\n<MiniRepl client:visible tune={`s(\"bd <sd rim*<1 2>>,hh*4\").cpm(110/2)`} />\n\nHere we can see that thinking in cycles rather than bars simplifies things a lot!\nThese types of simplifications work because of the repetitive nature of rhythm.\nIn computational terms, you could say the former notation has a lot of redundancy.\n\n## Time Signatures\n\nTo get a time signature, just change the number of elements per bar. Here is a rhythm with 7 beats:\n\n<MiniRepl client:visible tune={`s(\"bd ~ rim bd bd rim ~\")`} />\n\nor with 5:\n\n<MiniRepl client:visible tune={`s(\"bd hh hh bd hh hh bd rim bd hh\")`} />\n\nWe could also write multiple bars with different time signatures:\n\n<MiniRepl\n  client:visible\n  tune={`s(\\`<\n[bd hh rim]@3\n[bd hh rim sd]@4\n>\\`).cpm(110*2)`}\n/>\n\nHere we switch between 3/4 and 4/4, keeping the same tempo.\n\nIf we don't specify the length, we get what's called a metric modulation:\n\n<MiniRepl\n  client:visible\n  tune={`s(\\`<\n[bd hh rim]\n[bd hh rim sd]\n>\\`).cpm(110/2)`}\n/>\n\nNow the 3 elements get the same time as the 4 elements, which is why the tempo changes.\n"],"names":["hz","$$createAstro","$$createComponent","Astro","$$render","$$maybeRenderHead","$$renderSlot","$$renderComponent","_jsx","_components","a","tabindex","href","children","span","class","p","_jsxs","h2","id","MiniRepl","tune","Box","code","ul","li"],"mappings":"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"}