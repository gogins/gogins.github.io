{"version":3,"file":"bakery_LbgTsgV4.mjs","sources":["../../../src/components/HeadCommon.astro","../../../../node_modules/.pnpm/astro@4.0.8_@types+node@20.10.6_typescript@5.3.3/node_modules/astro/dist/content/runtime.js","../../../src/config.ts","../../../src/components/Header/Search.tsx","../../../src/docs/MobileNav.jsx","../../../src/components/Header/Header.astro","../../../src/languages.ts","../../../src/components/LeftSidebar/LeftSidebar.astro","../../../src/components/RightSidebar/MoreMenu.astro","../../../src/components/PageContent/PageContent.astro","../../../src/components/RightSidebar/TableOfContents.tsx","../../../src/components/RightSidebar/RightSidebar.astro","../../../src/pages/bakery.astro"],"sourcesContent":["---\nimport { pwaInfo } from 'virtual:pwa-info';\nimport '../styles/index.css';\n\nconst { BASE_URL } = import.meta.env;\nconst baseNoTrailing = BASE_URL.endsWith('/') ? BASE_URL.slice(0, -1) : BASE_URL;\n---\n\n<!-- Global Metadata -->\n<meta charset=\"utf-8\" />\n<meta name=\"viewport\" content=\"width=device-width\" />\n<meta name=\"generator\" content={Astro.generator} />\n<link rel=\"alternate\" type=\"application/rss+xml\" title={`RSS Feed for strudel.cc`} href=\"/rss.xml\" />\n<link rel=\"icon\" type=\"image/svg+xml\" href={`${baseNoTrailing}/favicon.ico`} />\n\n<meta\n  name=\"description\"\n  content=\"Strudel is a music live coding environment for the browser, porting the TidalCycles pattern language to JavaScript.\"\n/>\n<link rel=\"icon\" href={`${baseNoTrailing}/favicon.ico`} />\n<link rel=\"apple-touch-icon\" href={`${baseNoTrailing}/icons/apple-icon-180.png`} sizes=\"180x180\" />\n<meta name=\"theme-color\" content=\"#222222\" />\n\n<base href={BASE_URL} />\n\n<!-- Scrollable a11y code helper -->\n<script {`${baseNoTrailing}/make-scrollable-code-focusable.js`} is:inline></script>\n\n<script src=\"/src/pwa.ts\"></script>\n<!-- this does not work for some reason: -->\n<!-- <style is:global define:vars={strudelTheme}></style> -->\n<!-- the following variables are just a fallback to make sure everything is readable without JS -->\n<style is:global>\n  :root {\n    --background: #222;\n    --lineBackground: #22222299;\n    --foreground: #fff;\n    --caret: #ffcc00;\n    --selection: rgba(128, 203, 196, 0.5);\n    --selectionMatch: #036dd626;\n    --lineHighlight: #00000050;\n    --gutterBackground: transparent;\n    --gutterForeground: #8a919966;\n  }\n</style>\n{pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}\n\n<script>\n  import { initTheme, codemirrorSettings } from '@strudel/codemirror';\n\n  initTheme(codemirrorSettings.get().theme);\n\n  // https://medium.com/quick-code/100vh-problem-with-ios-safari-92ab23c852a8\n  const appHeight = () => {\n    const doc = document.documentElement;\n    doc.style.setProperty('--app-height', `${window.innerHeight - 1}px`);\n  };\n  if (typeof window !== 'undefined') {\n    window.addEventListener('resize', appHeight);\n    appHeight();\n  }\n</script>\n","import { ZodIssueCode, string as zodString } from \"zod\";\nimport { AstroError, AstroErrorData } from \"../core/errors/index.js\";\nimport { prependForwardSlash } from \"../core/path.js\";\nimport {\n  createComponent,\n  createHeadAndContent,\n  renderComponent,\n  renderScriptElement,\n  renderTemplate,\n  renderUniqueStylesheet,\n  unescapeHTML\n} from \"../runtime/server/index.js\";\nfunction defineCollection(config) {\n  if (!config.type)\n    config.type = \"content\";\n  return config;\n}\nfunction createCollectionToGlobResultMap({\n  globResult,\n  contentDir\n}) {\n  const collectionToGlobResultMap = {};\n  for (const key in globResult) {\n    const keyRelativeToContentDir = key.replace(new RegExp(`^${contentDir}`), \"\");\n    const segments = keyRelativeToContentDir.split(\"/\");\n    if (segments.length <= 1)\n      continue;\n    const collection = segments[0];\n    collectionToGlobResultMap[collection] ??= {};\n    collectionToGlobResultMap[collection][key] = globResult[key];\n  }\n  return collectionToGlobResultMap;\n}\nconst cacheEntriesByCollection = /* @__PURE__ */ new Map();\nfunction createGetCollection({\n  contentCollectionToEntryMap,\n  dataCollectionToEntryMap,\n  getRenderEntryImport\n}) {\n  return async function getCollection(collection, filter) {\n    let type;\n    if (collection in contentCollectionToEntryMap) {\n      type = \"content\";\n    } else if (collection in dataCollectionToEntryMap) {\n      type = \"data\";\n    } else {\n      console.warn(\n        `The collection **${collection}** does not exist or is empty. Ensure a collection directory with this name exists.`\n      );\n      return;\n    }\n    const lazyImports = Object.values(\n      type === \"content\" ? contentCollectionToEntryMap[collection] : dataCollectionToEntryMap[collection]\n    );\n    let entries = [];\n    if (!import.meta.env?.DEV && cacheEntriesByCollection.has(collection)) {\n      entries = [...cacheEntriesByCollection.get(collection)];\n    } else {\n      entries = await Promise.all(\n        lazyImports.map(async (lazyImport) => {\n          const entry = await lazyImport();\n          return type === \"content\" ? {\n            id: entry.id,\n            slug: entry.slug,\n            body: entry.body,\n            collection: entry.collection,\n            data: entry.data,\n            async render() {\n              return render({\n                collection: entry.collection,\n                id: entry.id,\n                renderEntryImport: await getRenderEntryImport(collection, entry.slug)\n              });\n            }\n          } : {\n            id: entry.id,\n            collection: entry.collection,\n            data: entry.data\n          };\n        })\n      );\n      cacheEntriesByCollection.set(collection, entries);\n    }\n    if (typeof filter === \"function\") {\n      return entries.filter(filter);\n    } else {\n      return entries;\n    }\n  };\n}\nfunction createGetEntryBySlug({\n  getEntryImport,\n  getRenderEntryImport\n}) {\n  return async function getEntryBySlug(collection, slug) {\n    const entryImport = await getEntryImport(collection, slug);\n    if (typeof entryImport !== \"function\")\n      return void 0;\n    const entry = await entryImport();\n    return {\n      id: entry.id,\n      slug: entry.slug,\n      body: entry.body,\n      collection: entry.collection,\n      data: entry.data,\n      async render() {\n        return render({\n          collection: entry.collection,\n          id: entry.id,\n          renderEntryImport: await getRenderEntryImport(collection, slug)\n        });\n      }\n    };\n  };\n}\nfunction createGetDataEntryById({ getEntryImport }) {\n  return async function getDataEntryById(collection, id) {\n    const lazyImport = await getEntryImport(collection, id);\n    if (!lazyImport)\n      throw new Error(`Entry ${collection} \\u2192 ${id} was not found.`);\n    const entry = await lazyImport();\n    return {\n      id: entry.id,\n      collection: entry.collection,\n      data: entry.data\n    };\n  };\n}\nfunction createGetEntry({\n  getEntryImport,\n  getRenderEntryImport\n}) {\n  return async function getEntry(collectionOrLookupObject, _lookupId) {\n    let collection, lookupId;\n    if (typeof collectionOrLookupObject === \"string\") {\n      collection = collectionOrLookupObject;\n      if (!_lookupId)\n        throw new AstroError({\n          ...AstroErrorData.UnknownContentCollectionError,\n          message: \"`getEntry()` requires an entry identifier as the second argument.\"\n        });\n      lookupId = _lookupId;\n    } else {\n      collection = collectionOrLookupObject.collection;\n      lookupId = \"id\" in collectionOrLookupObject ? collectionOrLookupObject.id : collectionOrLookupObject.slug;\n    }\n    const entryImport = await getEntryImport(collection, lookupId);\n    if (typeof entryImport !== \"function\")\n      return void 0;\n    const entry = await entryImport();\n    if (entry._internal.type === \"content\") {\n      return {\n        id: entry.id,\n        slug: entry.slug,\n        body: entry.body,\n        collection: entry.collection,\n        data: entry.data,\n        async render() {\n          return render({\n            collection: entry.collection,\n            id: entry.id,\n            renderEntryImport: await getRenderEntryImport(collection, lookupId)\n          });\n        }\n      };\n    } else if (entry._internal.type === \"data\") {\n      return {\n        id: entry.id,\n        collection: entry.collection,\n        data: entry.data\n      };\n    }\n    return void 0;\n  };\n}\nfunction createGetEntries(getEntry) {\n  return async function getEntries(entries) {\n    return Promise.all(entries.map((e) => getEntry(e)));\n  };\n}\nasync function render({\n  collection,\n  id,\n  renderEntryImport\n}) {\n  const UnexpectedRenderError = new AstroError({\n    ...AstroErrorData.UnknownContentCollectionError,\n    message: `Unexpected error while rendering ${String(collection)} \\u2192 ${String(id)}.`\n  });\n  if (typeof renderEntryImport !== \"function\")\n    throw UnexpectedRenderError;\n  const baseMod = await renderEntryImport();\n  if (baseMod == null || typeof baseMod !== \"object\")\n    throw UnexpectedRenderError;\n  const { default: defaultMod } = baseMod;\n  if (isPropagatedAssetsModule(defaultMod)) {\n    const { collectedStyles, collectedLinks, collectedScripts, getMod } = defaultMod;\n    if (typeof getMod !== \"function\")\n      throw UnexpectedRenderError;\n    const propagationMod = await getMod();\n    if (propagationMod == null || typeof propagationMod !== \"object\")\n      throw UnexpectedRenderError;\n    const Content = createComponent({\n      factory(result, baseProps, slots) {\n        let styles = \"\", links = \"\", scripts = \"\";\n        if (Array.isArray(collectedStyles)) {\n          styles = collectedStyles.map((style) => {\n            return renderUniqueStylesheet(result, {\n              type: \"inline\",\n              content: style\n            });\n          }).join(\"\");\n        }\n        if (Array.isArray(collectedLinks)) {\n          links = collectedLinks.map((link) => {\n            return renderUniqueStylesheet(result, {\n              type: \"external\",\n              src: prependForwardSlash(link)\n            });\n          }).join(\"\");\n        }\n        if (Array.isArray(collectedScripts)) {\n          scripts = collectedScripts.map((script) => renderScriptElement(script)).join(\"\");\n        }\n        let props = baseProps;\n        if (id.endsWith(\"mdx\")) {\n          props = {\n            components: propagationMod.components ?? {},\n            ...baseProps\n          };\n        }\n        return createHeadAndContent(\n          unescapeHTML(styles + links + scripts),\n          renderTemplate`${renderComponent(\n            result,\n            \"Content\",\n            propagationMod.Content,\n            props,\n            slots\n          )}`\n        );\n      },\n      propagation: \"self\"\n    });\n    return {\n      Content,\n      headings: propagationMod.getHeadings?.() ?? [],\n      remarkPluginFrontmatter: propagationMod.frontmatter ?? {}\n    };\n  } else if (baseMod.Content && typeof baseMod.Content === \"function\") {\n    return {\n      Content: baseMod.Content,\n      headings: baseMod.getHeadings?.() ?? [],\n      remarkPluginFrontmatter: baseMod.frontmatter ?? {}\n    };\n  } else {\n    throw UnexpectedRenderError;\n  }\n}\nfunction createReference({ lookupMap }) {\n  return function reference(collection) {\n    return zodString().transform((lookupId, ctx) => {\n      const flattenedErrorPath = ctx.path.join(\".\");\n      if (!lookupMap[collection]) {\n        ctx.addIssue({\n          code: ZodIssueCode.custom,\n          message: `**${flattenedErrorPath}:** Reference to ${collection} invalid. Collection does not exist or is empty.`\n        });\n        return;\n      }\n      const { type, entries } = lookupMap[collection];\n      const entry = entries[lookupId];\n      if (!entry) {\n        ctx.addIssue({\n          code: ZodIssueCode.custom,\n          message: `**${flattenedErrorPath}**: Reference to ${collection} invalid. Expected ${Object.keys(\n            entries\n          ).map((c) => JSON.stringify(c)).join(\" | \")}. Received ${JSON.stringify(lookupId)}.`\n        });\n        return;\n      }\n      if (type === \"content\") {\n        return { slug: lookupId, collection };\n      }\n      return { id: lookupId, collection };\n    });\n  };\n}\nfunction isPropagatedAssetsModule(module) {\n  return typeof module === \"object\" && module != null && \"__astroPropagation\" in module;\n}\nexport {\n  createCollectionToGlobResultMap,\n  createGetCollection,\n  createGetDataEntryById,\n  createGetEntries,\n  createGetEntry,\n  createGetEntryBySlug,\n  createReference,\n  defineCollection\n};\n","export const SITE = {\n  title: 'Strudel',\n  description: 'Strudel is a music live coding editor that brings TidalCycles to the browser.',\n  defaultLanguage: 'en',\n};\n\nexport const OPEN_GRAPH = {\n  image: {\n    src: 'https://strudel.cc/icon.png',\n    alt: 'Strudel Logo',\n  },\n};\n\n// This is the type of the frontmatter you put in the docs markdown files.\nexport type Frontmatter = {\n  title: string;\n  description: string;\n  layout: string;\n  image?: { src: string; alt: string };\n  dir?: 'ltr' | 'rtl';\n  ogLocale?: string;\n  lang?: string;\n};\n\nexport const KNOWN_LANGUAGES = {\n  English: 'en',\n  German: 'de',\n} as const;\nexport const KNOWN_LANGUAGE_CODES = Object.values(KNOWN_LANGUAGES);\n\nexport const GITHUB_EDIT_URL = `https://github.com/tidalcycles/strudel/tree/main/website`;\n\nexport const COMMUNITY_INVITE_URL = `https://discord.com/invite/HGEdXmRkzT`;\n\n// See \"Algolia\" section of the README for more information.\nexport const ALGOLIA = {\n  indexName: 'strudel-tidalcycles',\n  appId: 'SAZ71S8CLS',\n  apiKey: 'd5044f9d21b80e7721e5b0067a8730b1',\n};\n\nexport type SidebarLang = Record<string, { text: string; link: string }[]>;\nexport type Sidebar = Record<(typeof KNOWN_LANGUAGE_CODES)[number], SidebarLang>;\nexport const SIDEBAR: Sidebar = {\n  de: {\n    Workshop: [\n      { text: 'Intro', link: 'de/workshop/getting-started' },\n      { text: 'Erste Sounds', link: 'de/workshop/first-sounds' },\n      { text: 'Erste Töne', link: 'de/workshop/first-notes' },\n      { text: 'Erste Effekte', link: 'de/workshop/first-effects' },\n      { text: 'Pattern Effekte', link: 'de/workshop/pattern-effects' },\n      { text: 'Rückblick', link: 'de/workshop/recap' },\n      { text: 'Mehr Seiten auf Englisch', link: 'workshop/getting-started' },\n    ],\n  },\n  en: {\n    Presentation: [\n      { text: 'What is Strudel?', link: 'workshop/getting-started' },\n      { text: 'Showcase', link: 'intro/showcase' },\n      { text: 'Blog', link: 'blog' },\n      { text: 'Community Bakery', link: 'bakery' },\n    ],\n    Workshop: [\n      // { text: 'Getting Started', link: 'workshop/getting-started' },\n      { text: 'First Sounds', link: 'workshop/first-sounds' },\n      { text: 'First Notes', link: 'workshop/first-notes' },\n      { text: 'First Effects', link: 'workshop/first-effects' },\n      { text: 'Pattern Effects', link: 'workshop/pattern-effects' },\n      { text: 'Recap', link: 'workshop/recap' },\n      { text: 'Workshop in German', link: 'de/workshop/getting-started' },\n    ],\n    'Making Sound': [\n      { text: 'Samples', link: 'learn/samples' },\n      { text: 'Synths', link: 'learn/synths' },\n      { text: 'Audio Effects', link: 'learn/effects' },\n      { text: 'MIDI & OSC', link: 'learn/input-output' },\n    ],\n    More: [\n      { text: 'Recipes', link: 'recipes/recipes' },\n      { text: 'Mini-Notation', link: 'learn/mini-notation' },\n      { text: 'Offline', link: 'learn/pwa' },\n      { text: 'Patterns', link: 'technical-manual/patterns' },\n      { text: 'Music metadata', link: 'learn/metadata' },\n      { text: 'CSound', link: 'learn/csound' },\n      { text: 'Hydra', link: 'learn/hydra' },\n    ],\n    'Pattern Functions': [\n      { text: 'Introduction', link: 'functions/intro' },\n      { text: 'Creating Patterns', link: 'learn/factories' },\n      { text: 'Time Modifiers', link: 'learn/time-modifiers' },\n      { text: 'Control Parameters', link: 'functions/value-modifiers' },\n      { text: 'Signals', link: 'learn/signals' },\n      { text: 'Conditional Modifiers', link: 'learn/conditional-modifiers' },\n      { text: 'Accumulation', link: 'learn/accumulation' },\n      { text: 'Tonal Functions', link: 'learn/tonal' },\n    ],\n    Understand: [\n      { text: 'Coding syntax', link: 'learn/code' },\n      { text: 'Pitch', link: 'understand/pitch' },\n      { text: 'Cycles', link: 'understand/cycles' },\n      { text: 'Pattern Alignment', link: 'technical-manual/alignment' },\n      { text: 'Strudel vs Tidal', link: 'learn/strudel-vs-tidal' },\n    ],\n    Development: [\n      { text: 'REPL', link: 'technical-manual/repl' },\n      { text: 'Sounds', link: 'technical-manual/sounds' },\n      { text: 'Packages', link: 'technical-manual/packages' },\n      { text: 'Docs', link: 'technical-manual/docs' },\n      { text: 'Testing', link: 'technical-manual/testing' },\n      // { text: 'Internals', link: 'technical-manual/internals' },\n    ],\n  },\n};\n","/** @jsxImportSource react */\nimport { useState, useCallback, useRef } from 'react';\nimport { ALGOLIA } from '../../config';\nimport '@docsearch/css';\nimport './Search.css';\n\nimport { createPortal } from 'react-dom';\nimport * as docSearchReact from '@docsearch/react';\nconst { BASE_URL } = import.meta.env;\nconst baseNoTrailing = BASE_URL.endsWith('/') ? BASE_URL.slice(0, -1) : BASE_URL;\n\n/** FIXME: This is still kinda nasty, but DocSearch is not ESM ready. */\nconst DocSearchModal = docSearchReact.DocSearchModal || (docSearchReact as any).default.DocSearchModal;\nconst useDocSearchKeyboardEvents =\n  docSearchReact.useDocSearchKeyboardEvents || (docSearchReact as any).default.useDocSearchKeyboardEvents;\n\nexport default function Search() {\n  const [isOpen, setIsOpen] = useState(false);\n  const searchButtonRef = useRef<HTMLButtonElement>(null);\n  const [initialQuery, setInitialQuery] = useState('');\n\n  const onOpen = useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  const onClose = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const onInput = useCallback(\n    (e: any) => {\n      setIsOpen(true);\n      setInitialQuery(e.key);\n    },\n    [setIsOpen, setInitialQuery],\n  );\n\n  useDocSearchKeyboardEvents({\n    isOpen,\n    onOpen,\n    onClose,\n    onInput,\n    searchButtonRef,\n  });\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        ref={searchButtonRef}\n        onClick={onOpen}\n        className=\"rounded-md bg-slate-900 w-full px-2 search-button\"\n      >\n        <svg width=\"24\" height=\"24\" fill=\"none\">\n          <path\n            d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n\n        {/* \t\t\t\t<span>Search</span> */}\n\n        <span className=\"search-hint\">\n          <span className=\"sr-only\">Press </span>\n\n          <kbd>/</kbd>\n\n          <span className=\"sr-only\"> to search</span>\n        </span>\n      </button>\n\n      {isOpen &&\n        createPortal(\n          <DocSearchModal\n            initialQuery={initialQuery}\n            initialScrollY={window.scrollY}\n            onClose={onClose}\n            indexName={ALGOLIA.indexName}\n            appId={ALGOLIA.appId}\n            apiKey={ALGOLIA.apiKey}\n            getMissingResultsUrl={({ query }) => {\n              return `https://github.com/tidalcycles/strudel/issues/new?title=Missing doc for ${query}`;\n            }}\n            transformItems={(items) => {\n              return items.map((item) => {\n                // We transform the absolute URL into a relative URL to\n                // work better on localhost, preview URLS.\n                const a = document.createElement('a');\n                a.href = item.url;\n                const hash = a.hash === '#overview' ? '' : a.hash;\n                let pathname = a.pathname;\n                pathname = pathname.startsWith('/') ? pathname.slice(1) : pathname;\n                pathname = pathname.endsWith('/') ? pathname.slice(0, -1) : pathname;\n                const url = `${baseNoTrailing}/${pathname}/${hash}`;\n                return {\n                  ...item,\n                  url,\n                };\n              });\n            }}\n          />,\n          document.body,\n        )}\n    </>\n  );\n}\n","import { Disclosure } from '@headlessui/react';\nimport Bars3Icon from '@heroicons/react/24/outline/Bars3Icon';\nimport XMarkIcon from '@heroicons/react/24/outline/XMarkIcon';\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport default function MobileNav({ sidebar }) {\n  return (\n    <Disclosure as=\"nav\">\n      {({ open }) => (\n        <>\n          <Disclosure.Button className=\"inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n            <span className=\"sr-only\">Open main menu</span>\n            {open ? (\n              <XMarkIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n            ) : (\n              <Bars3Icon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n            )}\n          </Disclosure.Button>\n          <Disclosure.Panel className=\"md:hidden absolute top-14 right-0 max-h-screen pb-14 overflow-auto z-[100] w-full\">\n            <div className=\"space-y-1 px-4 py-4 bg-[#161616]\">\n              <a\n                href=\"..\"\n                className=\"py-2 flex cursor-pointer items-center space-x-1 hover:bg-background hover:px-2 rounded-md\"\n              >\n                <span>go to REPL</span>\n              </a>\n              {Object.entries(sidebar).map(([group, items], i) => (\n                <div key={i} className=\"space-y-2\">\n                  <div>{group}</div>\n                  {items.map((item, j) => (\n                    <Disclosure.Button\n                      key={j}\n                      as=\"a\"\n                      href={`/${item.link}`}\n                      className={classNames(\n                        item.current\n                          ? 'bg-background text-white'\n                          : 'text-gray-300 hover:bg-lineHighlight hover:text-white',\n                        'block px-3 py-2 rounded-md text-base font-medium',\n                      )}\n                      aria-current={item.current ? 'page' : undefined}\n                    >\n                      {item.text}\n                    </Disclosure.Button>\n                  ))}\n                </div>\n              ))}\n            </div>\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n  );\n}\n","---\n// import { getLanguageFromURL, KNOWN_LANGUAGE_CODES } from '../../languages';\nimport * as CONFIG from '../../config';\n// import AstroLogo from './AstroLogo.astro';\n// import LanguageSelect from './LanguageSelect';\nimport Search from './Search';\nimport CommandLineIcon from '@heroicons/react/20/solid/CommandLineIcon';\nimport MobileNav from '../../docs/MobileNav';\nimport { SIDEBAR } from '../../config';\n\ntype Props = {\n  currentPage?: string;\n};\n\nconst { currentPage } = Astro.props as Props;\n// const lang = getLanguageFromURL(currentPage);\nconst langCode = 'en'; // getLanguageFromURL(currentPage);\nconst sidebar = SIDEBAR[langCode];\n\nconst { BASE_URL } = import.meta.env;\nconst baseNoTrailing = BASE_URL.endsWith('/') ? BASE_URL.slice(0, -1) : BASE_URL;\n---\n\n<nav\n  class=\"flex justify-between py-2 px-4 items-center h-14 max-h-14 bg-lineHighlight text-foreground\"\n  title=\"Top Navigation\"\n>\n  <div class=\"flex overflow-visible items-center grow\" style=\"overflow:visible\">\n    <a href={`${baseNoTrailing}/`} class=\"flex items-center text-2xl space-x-2\">\n      <h1 class=\"font-bold flex space-x-2 items-baseline text-xl\">\n        <span>🌀</span>\n        <div class=\"flex space-x-1 items-baseline\">\n          <span class=\"\">strudel</span>\n          <span class=\"text-sm\">DOCS</span>\n        </div>\n      </h1>\n    </a>\n  </div>\n  {/* KNOWN_LANGUAGE_CODES.length > 1 && <LanguageSelect lang={lang} client:idle /> */}\n  <div class=\"search-item h-10\">\n    <Search client:idle />\n  </div>\n  <a href={`${baseNoTrailing}/`} class=\"hidden md:flex cursor-pointer items-center space-x-1\"\n    ><CommandLineIcon className=\"w-5 h-5\" /><span>go to REPL</span>\n  </a>\n  <div class=\"md:hidden\">\n    <MobileNav sidebar={sidebar} client:idle />\n  </div>\n</nav>\n\n<style>\n  /** Style Algolia */\n  :root {\n    --docsearch-primary-color: var(--lineHighlight);\n    --docsearch-logo-color: var(--foreground);\n  }\n\n  .search-item {\n    display: none;\n    position: relative;\n    z-index: 10;\n    flex-grow: 1;\n    padding-right: 0.7rem;\n    display: flex;\n    max-width: 200px;\n  }\n\n  @media (min-width: 50em) {\n    .search-item {\n      max-width: 400px;\n    }\n  }\n</style>\n\n<style is:global>\n  .search-item > * {\n    flex-grow: 1;\n  }\n</style>\n","import { KNOWN_LANGUAGES, KNOWN_LANGUAGE_CODES } from './config';\nexport { KNOWN_LANGUAGES, KNOWN_LANGUAGE_CODES };\n\nexport const langPathRegex = /\\/([a-z]{2}-?[A-Z]{0,2})\\//;\n\nexport function getLanguageFromURL(pathname: string) {\n  const langCodeMatch = pathname.match(langPathRegex);\n  const langCode = langCodeMatch ? langCodeMatch[1] : 'en';\n  return langCode as (typeof KNOWN_LANGUAGE_CODES)[number];\n}\n","---\nimport { getLanguageFromURL } from '../../languages';\nimport { SIDEBAR } from '../../config';\n\ntype Props = {\n  currentPage: string;\n};\n\nconst { currentPage } = Astro.props as Props;\nconst { BASE_URL } = import.meta.env;\nlet currentPageMatch = currentPage.slice(BASE_URL.length, currentPage.endsWith('/') ? -1 : undefined);\nconst baseNoTrailing = BASE_URL.endsWith('/') ? BASE_URL.slice(0, -1) : BASE_URL;\n\nconst langCode = getLanguageFromURL(currentPage) || 'en';\nconst sidebar = SIDEBAR[langCode];\n---\n\n<nav aria-labelledby=\"grid-left\" class=\"max-h-full overflow-auto pb-20 text-foreground\">\n  <ul>\n    {\n      Object.entries(sidebar).map(([header, children]) => (\n        <li>\n          <div class=\"nav-group pb-4\">\n            <h2>{header}</h2>\n            <ul>\n              {children.map((child) => {\n                const url = `${baseNoTrailing}/${child.link}${child.link.endsWith('/') ? '' : '/'}`;\n                return (\n                  <li class=\"\">\n                    <a\n                      class={`pl-4 py-0.5 w-full hover:bg-lineHighlight block${\n                        currentPageMatch === child.link ? ' bg-lineHighlight' : ''\n                      }`}\n                      href={url}\n                      aria-current={currentPageMatch === child.link ? 'page' : false}\n                    >\n                      {child.text}\n                    </a>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </li>\n      ))\n    }\n  </ul>\n</nav>\n\n<script is:inline>\nwindow.addEventListener('DOMContentLoaded', () => {\n  var target = document.querySelector('[aria-current=\"page\"]');\n  const nav = document.querySelector('.nav-groups');\n  if (nav && target && target.offsetTop > window.innerHeight - 100) {\n    nav.scrollTop = target.offsetTop;\n  }\n});\n</script>\n","---\nimport * as CONFIG from '../../config';\n\ntype Props = {\n  editHref?: string;\n};\n\nconst { editHref } = Astro.props as Props;\nconst showMoreSection = CONFIG.COMMUNITY_INVITE_URL;\n---\n\n<ul class=\"px-4 py-4\">\n  {\n    editHref && (\n      <li>\n        <a class=\"flex items-center space-x-2\" href={editHref} target=\"_blank\">\n          <svg\n            aria-hidden=\"true\"\n            focusable=\"false\"\n            data-prefix=\"fas\"\n            data-icon=\"pen\"\n            class=\"svg-inline--fa fa-pen fa-w-16\"\n            role=\"img\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 512 512\"\n            height=\"1em\"\n            width=\"1em\"\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n            />\n          </svg>\n          <span>Edit this page</span>\n        </a>\n      </li>\n    )\n  }\n  {\n    CONFIG.COMMUNITY_INVITE_URL && (\n      <li class={`header-link depth-2`}>\n        <a href={CONFIG.COMMUNITY_INVITE_URL} target=\"_blank\" class=\"flex items-center space-x-2\">\n          <svg\n            aria-hidden=\"true\"\n            focusable=\"false\"\n            data-prefix=\"fas\"\n            data-icon=\"comment-alt\"\n            class=\"svg-inline--fa fa-comment-alt fa-w-16\"\n            role=\"img\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 512 512\"\n            height=\"1em\"\n            width=\"1em\"\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M448 0H64C28.7 0 0 28.7 0 64v288c0 35.3 28.7 64 64 64h96v84c0 9.8 11.2 15.5 19.1 9.7L304 416h144c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z\"\n            />\n          </svg>\n          <span>Join our community</span>\n        </a>\n      </li>\n    )\n  }\n  <li class=\"header-link depth-2\">\n    <a rel=\"me\" href=\"https://social.toplap.org/@strudel\" target=\"_blank\" class=\"flex items-center space-x-2\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-4 h-4\" viewBox=\"0 0 216.4144 232.00976\">\n        <path\n          fill=\"currentColor\"\n          d=\"M211.80734 139.0875c-3.18125 16.36625-28.4925 34.2775-57.5625 37.74875-15.15875 1.80875-30.08375 3.47125-45.99875 2.74125-26.0275-1.1925-46.565-6.2125-46.565-6.2125 0 2.53375.15625 4.94625.46875 7.2025 3.38375 25.68625 25.47 27.225 46.39125 27.9425 21.11625.7225 39.91875-5.20625 39.91875-5.20625l.8675 19.09s-14.77 7.93125-41.08125 9.39c-14.50875.7975-32.52375-.365-53.50625-5.91875C9.23234 213.82 1.40609 165.31125.20859 116.09125c-.365-14.61375-.14-28.39375-.14-39.91875 0-50.33 32.97625-65.0825 32.97625-65.0825C49.67234 3.45375 78.20359.2425 107.86484 0h.72875c29.66125.2425 58.21125 3.45375 74.8375 11.09 0 0 32.975 14.7525 32.975 65.0825 0 0 .41375 37.13375-4.59875 62.915\"\n        ></path>\n        <path\n          fill=\"black\"\n          d=\"M177.50984 80.077v60.94125h-24.14375v-59.15c0-12.46875-5.24625-18.7975-15.74-18.7975-11.6025 0-17.4175 7.5075-17.4175 22.3525v32.37625H96.20734V85.42325c0-14.845-5.81625-22.3525-17.41875-22.3525-10.49375 0-15.74 6.32875-15.74 18.7975v59.15H38.90484V80.077c0-12.455 3.17125-22.3525 9.54125-29.675 6.56875-7.3225 15.17125-11.07625 25.85-11.07625 12.355 0 21.71125 4.74875 27.8975 14.2475l6.01375 10.08125 6.015-10.08125c6.185-9.49875 15.54125-14.2475 27.8975-14.2475 10.6775 0 19.28 3.75375 25.85 11.07625 6.36875 7.3225 9.54 17.22 9.54 29.675\"\n        ></path>\n      </svg>\n      <span>@strudel on Mastodon</span></a\n    >\n  </li>\n</ul>\n","---\nimport MoreMenu from '../RightSidebar/MoreMenu.astro';\n\ntype Props = {\n  githubEditUrl?: string;\n};\n\nconst { githubEditUrl } = Astro.props as Props;\n---\n\n<article id=\"article\" class=\"content\">\n  <section class=\"main-section\">\n    <!-- TODO: add dropdown toc on mobile -->\n    <div class=\"prose dark:prose-invert max-w-full pb-8\">\n      <slot />\n    </div>\n  </section>\n  <nav class=\"block sm:hidden\">\n    <MoreMenu editHref={githubEditUrl} />\n  </nav>\n</article>\n<style>\n  .content {\n    padding: 0;\n    max-width: 75ch;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n</style>\n","import { unescape } from 'html-escaper';\nimport type { MarkdownHeading } from 'astro';\nimport type { FC } from 'react';\nimport { useState, useEffect, useRef } from 'react';\n\ntype ItemOffsets = {\n  id: string;\n  topOffset: number;\n};\n\nconst TableOfContents: FC<{ headings: MarkdownHeading[]; currentPage: string }> = ({ headings = [], currentPage }) => {\n  const toc = useRef<any>();\n  const onThisPageID = 'on-this-page-heading';\n  const itemOffsets = useRef<ItemOffsets[]>([]);\n  const [currentID, setCurrentID] = useState('overview');\n  useEffect(() => {\n    const getItemOffsets = () => {\n      const titles = document.querySelectorAll('article :is(h1, h2, h3, h4)');\n      itemOffsets.current = Array.from(titles).map((title) => ({\n        id: title.id,\n        topOffset: title.getBoundingClientRect().top + window.scrollY,\n      }));\n    };\n\n    getItemOffsets();\n    window.addEventListener('resize', getItemOffsets);\n\n    return () => {\n      window.removeEventListener('resize', getItemOffsets);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!toc.current) return;\n\n    const setCurrent: IntersectionObserverCallback = (entries) => {\n      for (const entry of entries) {\n        if (entry.isIntersecting) {\n          const { id } = entry.target;\n          if (id === onThisPageID) continue;\n          setCurrentID(entry.target.id);\n          break;\n        }\n      }\n    };\n\n    const observerOptions: IntersectionObserverInit = {\n      // Negative top margin accounts for `scroll-margin`.\n      // Negative bottom margin means heading needs to be towards top of viewport to trigger intersection.\n      rootMargin: '-100px 0% -66%',\n      threshold: 1,\n    };\n\n    const headingsObserver = new IntersectionObserver(setCurrent, observerOptions);\n\n    // Observe all the headings in the main page content.\n    document.querySelectorAll('article :is(h1,h2,h3)').forEach((h) => headingsObserver.observe(h));\n\n    // Stop observing when the component is unmounted.\n    return () => headingsObserver.disconnect();\n  }, [toc.current]);\n\n  const onLinkClick = (e: any) => {\n    setCurrentID(e.target.getAttribute('href').replace('#', ''));\n  };\n  const minDepth = 1;\n\n  return (\n    <>\n      <ul ref={toc}>\n        {headings\n          .filter(({ depth }) => depth >= minDepth && depth < 4)\n          .map((heading, i) => (\n            <li className={`w-full`} key={i}>\n              <a\n                href={`${currentPage}/#${heading.slug}`}\n                onClick={onLinkClick}\n                className={`py-0.5 block cursor-pointer w-full border-l-4 border-lineHighlight hover:bg-lineHighlight ${\n                  ['pl-4', 'pl-9', 'pl-12'][heading.depth - minDepth]\n                } ${currentID === heading.slug ? 'bg-lineHighlight' : ''}`.trim()}\n              >\n                {unescape(heading.text)}\n              </a>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default TableOfContents;\n","---\nimport TableOfContents from './TableOfContents';\nimport MoreMenu from './MoreMenu.astro';\nimport type { MarkdownHeading } from 'astro';\nimport AvatarList from '../Footer/AvatarList.astro';\n\ntype Props = {\n  headings: MarkdownHeading[];\n  githubEditUrl?: string;\n};\n\nconst { headings, githubEditUrl } = Astro.props as Props;\nlet currentPage = Astro.url.pathname;\n// remove slash before #\ncurrentPage = currentPage.endsWith('/') ? currentPage.slice(0, -1) : currentPage;\n---\n\n<nav aria-labelledby=\"grid-right\" class=\"w-64 text-foreground\">\n  <TableOfContents client:media=\"(min-width: 50em)\" headings={headings} currentPage={currentPage} />\n  <MoreMenu editHref={githubEditUrl} />\n  <!-- <AvatarList path={currentPage} /> -->\n</nav>\n","---\nimport HeadCommon from '../components/HeadCommon.astro';\nimport Header from '../components/Header/Header.astro';\nimport LeftSidebar from '../components/LeftSidebar/LeftSidebar.astro';\nimport PageContent from '../components/PageContent/PageContent.astro';\nimport { getCollection } from 'astro:content';\nimport { compareDesc } from 'date-fns';\nimport { Oven as CommunityOven } from '../components/Oven/Oven.jsx';\nimport RightSidebar from '../components/RightSidebar/RightSidebar.astro';\n\nconst currentPage = Astro.url.pathname;\n\nconst posts = (await getCollection('blog')).sort((a, b) => compareDesc(a.data.date, b.data.date));\n---\n\n<html dir={'ltr'} lang={'en'} class=\"initial dark\">\n  <head>\n    <HeadCommon />\n    <title>🌀 Strudel Community Bakery</title>\n  </head>\n\n  <body class=\"h-app-height text-gray-50 bg-background\">\n    <div class=\"w-full h-full space-y-4 flex flex-col\">\n      <header class=\"max-w-full fixed top-0 w-full z-[100]\">\n        <Header currentPage={currentPage} />\n      </header>\n      <main class=\"relative pt-16\">\n        <div class=\"h-full top-0 overflow-auto min-w-[300px] flex xl:justify-center pr-4 pl-4 md:pl-[300px] xl:pl-0\">\n          <aside title=\"Site Navigation\" class=\"w-[300px] px-6 left-0 hidden md:block fixed h-full\">\n            <LeftSidebar currentPage={currentPage} />\n          </aside>\n          <PageContent>\n            <h1>Community Bakery</h1>\n            <p>\n              This page contains all the strudel patterns baked by the community. Add your own by clicking the \"Share\"\n              button in the REPL. Have fun, and please share some of what you create with the community.\n            </p>\n            <CommunityOven client:only />\n          </PageContent>\n          <aside class=\"fixed right-0 h-full overflow-auto pr-4 pl-0 pb-16 hidden xl:block\" title=\"Table of Contents\">\n            <RightSidebar\n              headings={[\n                {\n                  depth: 1,\n                  slug: 'featured',\n                  text: 'Featured',\n                },\n                {\n                  depth: 1,\n                  slug: 'latest',\n                  text: 'Last Creations',\n                },\n              ]}\n            />\n          </aside>\n        </div>\n      </main>\n    </div>\n  </body>\n</html>\n"],"names":["$$Astro","$$createAstro","$$createComponent","Astro","$$render","_a","__template","$$addAttribute","$$renderComponent","$$result","$$unescapeHTML","AstroErrorData.UnknownContentCollectionError","Fragment","$$maybeRenderHead","CONFIG.COMMUNITY_INVITE_URL","$$renderSlot","MoreMenu","HeadCommon","$$renderHead","Header","LeftSidebar","PageContent","RightSidebar"],"mappings":"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","x_google_ignoreList":[1]}