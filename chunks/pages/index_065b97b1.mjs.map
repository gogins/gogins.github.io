{"version":3,"file":"index_065b97b1.mjs","sources":["../../../src/cx.mjs","../../../src/repl/Header.jsx","../../../src/repl/Loader.jsx","../../../src/repl/panel/ConsoleTab.jsx","../../../src/repl/panel/FilesTab.jsx","../../../src/repl/panel/Reference.jsx","../../../src/repl/panel/Forms.jsx","../../../src/repl/panel/SettingsTab.jsx","../../../src/repl/panel/ImportSoundsButton.jsx","../../../src/repl/panel/SoundsTab.jsx","../../../src/repl/panel/WelcomeTab.jsx","../../../src/repl/panel/PatternsTab.jsx","../../../src/repl/panel/Panel.jsx","../../../src/repl/Repl.jsx","../../../src/pages/index.astro","../../../src/pages/examples/index.astro","../../../src/pages/tutorial/index.astro","../../../src/pages/workshop/index.astro","../../../../my-patterns/README.md","../../../src/pages/swatch/index.astro","../../../src/pages/learn/index.astro","../../../src/pages/de/workshop/index.astro"],"sourcesContent":["/*\ncx.js - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/repl/src/cx.js>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nexport default function cx(...classes) {\n  // : Array<string | undefined>\n  return classes.filter(Boolean).join(' ');\n}\n","import AcademicCapIcon from '@heroicons/react/20/solid/AcademicCapIcon';\nimport ArrowPathIcon from '@heroicons/react/20/solid/ArrowPathIcon';\nimport LinkIcon from '@heroicons/react/20/solid/LinkIcon';\nimport PlayCircleIcon from '@heroicons/react/20/solid/PlayCircleIcon';\nimport SparklesIcon from '@heroicons/react/20/solid/SparklesIcon';\nimport StopCircleIcon from '@heroicons/react/20/solid/StopCircleIcon';\nimport cx from '@src/cx.mjs';\nimport { useSettings, setIsZen } from '../settings.mjs';\n// import { ReplContext } from './Repl';\nimport './Repl.css';\nconst { BASE_URL } = import.meta.env;\nconst baseNoTrailing = BASE_URL.endsWith('/') ? BASE_URL.slice(0, -1) : BASE_URL;\n\nexport function Header({ context }) {\n  const {\n    embedded,\n    started,\n    pending,\n    isDirty,\n    activeCode,\n    handleTogglePlay,\n    handleUpdate,\n    handleShuffle,\n    handleShare,\n  } = context;\n  const isEmbedded = typeof window !== 'undefined' && (embedded || window.location !== window.parent.location);\n  const { isZen } = useSettings();\n\n  return (\n    <header\n      id=\"header\"\n      className={cx(\n        'flex-none text-black  z-[100] text-lg select-none',\n        !isZen && !isEmbedded && 'bg-lineHighlight',\n        isZen ? 'h-12 w-8 fixed top-0 left-0' : 'sticky top-0 w-full py-1 justify-between',\n        isEmbedded ? 'flex' : 'md:flex',\n      )}\n    >\n      <div className=\"px-4 flex space-x-2 md:pt-0 select-none\">\n        {/*             <img\n    src={logo}\n    className={cx('Tidal-logo', isEmbedded ? 'w-8 h-8' : 'w-10 h-10', started && 'animate-pulse')} // 'bg-[#ffffff80] rounded-full'\n    alt=\"logo\"\n  /> */}\n        <h1\n          onClick={() => {\n            if (isEmbedded) window.open(window.location.href.replace('embed', ''));\n          }}\n          className={cx(\n            isEmbedded ? 'text-l cursor-pointer' : 'text-xl',\n            'text-foreground font-bold flex space-x-2 items-center',\n          )}\n        >\n          <div\n            className={cx('mt-[1px]', started && 'animate-spin', 'cursor-pointer')}\n            onClick={() => {\n              if (!isEmbedded) {\n                setIsZen(!isZen);\n              }\n            }}\n          >\n            🌀\n          </div>\n          {!isZen && (\n            <div className={cx(started && 'animate-pulse')}>\n              <span className=\"\">strudel</span> <span className=\"text-sm\">REPL</span>\n            </div>\n          )}\n        </h1>\n      </div>\n      {!isZen && (\n        <div className=\"flex max-w-full overflow-auto text-foreground\">\n          <button\n            onClick={handleTogglePlay}\n            title={started ? 'stop' : 'play'}\n            className={cx(!isEmbedded ? 'p-2' : 'px-2', 'hover:opacity-50', !started && 'animate-pulse')}\n          >\n            {!pending ? (\n              <span className={cx('flex items-center space-x-1', isEmbedded ? '' : 'w-16')}>\n                {started ? <StopCircleIcon className=\"w-6 h-6\" /> : <PlayCircleIcon className=\"w-6 h-6\" />}\n                {!isEmbedded && <span>{started ? 'stop' : 'play'}</span>}\n              </span>\n            ) : (\n              <>loading...</>\n            )}\n          </button>\n          <button\n            onClick={() => handleUpdate()}\n            title=\"update\"\n            className={cx(\n              'flex items-center space-x-1',\n              !isEmbedded ? 'p-2' : 'px-2',\n              !isDirty || !activeCode ? 'opacity-50' : 'hover:opacity-50',\n            )}\n          >\n            {/*             <CommandLineIcon className=\"w-6 h-6\" /> */}\n            <ArrowPathIcon className=\"w-6 h-6\" />\n            {!isEmbedded && <span>update</span>}\n          </button>\n          {!isEmbedded && (\n            <button\n              title=\"shuffle\"\n              className=\"hover:opacity-50 p-2 flex items-center space-x-1\"\n              onClick={handleShuffle}\n            >\n              <SparklesIcon className=\"w-6 h-6\" />\n              <span> shuffle</span>\n            </button>\n          )}\n          {!isEmbedded && (\n            <button\n              title=\"share\"\n              className={cx(\n                'cursor-pointer hover:opacity-50 flex items-center space-x-1',\n                !isEmbedded ? 'p-2' : 'px-2',\n              )}\n              onClick={handleShare}\n            >\n              <LinkIcon className=\"w-6 h-6\" />\n              <span>share</span>\n            </button>\n          )}\n          {!isEmbedded && (\n            <a\n              title=\"learn\"\n              href={`${baseNoTrailing}/workshop/getting-started/`}\n              className={cx('hover:opacity-50 flex items-center space-x-1', !isEmbedded ? 'p-2' : 'px-2')}\n            >\n              <AcademicCapIcon className=\"w-6 h-6\" />\n              <span>learn</span>\n            </a>\n          )}\n          {/* {isEmbedded && (\n            <button className={cx('hover:opacity-50 px-2')}>\n              <a href={window.location.href} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Open in REPL\">\n                🚀\n              </a>\n            </button>\n          )}\n          {isEmbedded && (\n            <button className={cx('hover:opacity-50 px-2')}>\n              <a\n                onClick={() => {\n                  window.location.href = initialUrl;\n                  window.location.reload();\n                }}\n                title=\"Reset\"\n              >\n                💔\n              </a>\n            </button>\n          )} */}\n        </div>\n      )}\n    </header>\n  );\n}\n","import cx from '@src/cx.mjs';\n\nfunction Loader({ active }) {\n  return (\n    <div className=\"overflow-hidden opacity-50 fixed top-0 left-0 w-full z-[1000]\">\n      <div className={cx('h-[2px] block w-full', active ? 'bg-foreground animate-train' : 'bg-transparent')}>\n        <div />\n      </div>\n    </div>\n  );\n}\nexport default Loader;\n","import cx from '@src/cx.mjs';\n\nexport function ConsoleTab({ log }) {\n  return (\n    <div id=\"console-tab\" className=\"break-all px-4 dark:text-white text-stone-900 text-sm\">\n      <pre>{`███████╗████████╗██████╗ ██╗   ██╗██████╗ ███████╗██╗     \n██╔════╝╚══██╔══╝██╔══██╗██║   ██║██╔══██╗██╔════╝██║     \n███████╗   ██║   ██████╔╝██║   ██║██║  ██║█████╗  ██║     \n╚════██║   ██║   ██╔══██╗██║   ██║██║  ██║██╔══╝  ██║     \n███████║   ██║   ██║  ██║╚██████╔╝██████╔╝███████╗███████╗\n╚══════╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝ ╚═════╝ ╚══════╝╚══════╝`}</pre>\n      {log.map((l, i) => {\n        const message = linkify(l.message);\n        return (\n          <div key={l.id} className={cx(l.type === 'error' && 'text-red-500', l.type === 'highlight' && 'underline')}>\n            <span dangerouslySetInnerHTML={{ __html: message }} />\n            {l.count ? ` (${l.count})` : ''}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction linkify(inputText) {\n  var replacedText, replacePattern1, replacePattern2, replacePattern3;\n\n  //URLs starting with http://, https://, or ftp://\n  replacePattern1 = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gim;\n  replacedText = inputText.replace(replacePattern1, '<a class=\"underline\" href=\"$1\" target=\"_blank\">$1</a>');\n\n  //URLs starting with \"www.\" (without // before it, or it'd re-link the ones done above).\n  replacePattern2 = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\n  replacedText = replacedText.replace(\n    replacePattern2,\n    '$1<a class=\"underline\" href=\"http://$2\" target=\"_blank\">$2</a>',\n  );\n\n  //Change email addresses to mailto:: links.\n  replacePattern3 = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\n  replacedText = replacedText.replace(replacePattern3, '<a class=\"underline\" href=\"mailto:$1\">$1</a>');\n\n  return replacedText;\n}\n","import { Fragment, useEffect } from 'react';\nimport React, { useMemo, useState } from 'react';\nimport { isAudioFile, readDir, dir, playFile } from '../files.mjs';\n\nexport function FilesTab() {\n  const [path, setPath] = useState([]);\n  useEffect(() => {\n    let init = false;\n    readDir('', { dir, recursive: true })\n      .then((children) => setPath([{ name: '~/music', children }]))\n      .catch((err) => {\n        console.log('error loadin files', err);\n      });\n    return () => {\n      init = true;\n    };\n  }, []);\n  const current = useMemo(() => path[path.length - 1], [path]);\n  const subpath = useMemo(\n    () =>\n      path\n        .slice(1)\n        .map((p) => p.name)\n        .join('/'),\n    [path],\n  );\n  const folders = useMemo(() => current?.children.filter((e) => !!e.children), [current]);\n  const files = useMemo(() => current?.children.filter((e) => !e.children && isAudioFile(e.name)), [current]);\n  const select = (e) => setPath((p) => p.concat([e]));\n  return (\n    <div className=\"px-4 flex flex-col h-full\">\n      <div className=\"flex justify-between font-mono pb-1\">\n        <div>\n          <span>{`samples('`}</span>\n          {path?.map((p, i) => {\n            if (i < path.length - 1) {\n              return (\n                <Fragment key={i}>\n                  <span className=\"cursor-pointer underline\" onClick={() => setPath((p) => p.slice(0, i + 1))}>\n                    {p.name}\n                  </span>\n                  <span>/</span>\n                </Fragment>\n              );\n            } else {\n              return (\n                <span className=\"cursor-pointer underline\" key={i}>\n                  {p.name}\n                </span>\n              );\n            }\n          })}\n          <span>{`')`}</span>\n        </div>\n      </div>\n      <div className=\"overflow-auto\">\n        {!folders?.length && !files?.length && <span className=\"text-gray-500\">Nothing here</span>}\n        {folders?.map((e, i) => (\n          <div className=\"cursor-pointer\" key={i} onClick={() => select(e)}>\n            {e.name}\n          </div>\n        ))}\n        {files?.map((e, i) => (\n          <div\n            className=\"text-gray-500 cursor-pointer select-none\"\n            key={i}\n            onClick={async () => playFile(`${subpath}/${e.name}`)}\n          >\n            {e.name}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import jsdocJson from '../../../../doc.json';\nconst visibleFunctions = jsdocJson.docs\n  .filter(({ name, description }) => name && !name.startsWith('_') && !!description)\n  .sort((a, b) => /* a.meta.filename.localeCompare(b.meta.filename) +  */ a.name.localeCompare(b.name));\n\nconst getInnerText = (html) => {\n  var div = document.createElement('div');\n  div.innerHTML = html;\n  return div.textContent || div.innerText || '';\n};\n\nexport function Reference() {\n  return (\n    <div className=\"flex h-full w-full pt-2 text-foreground overflow-hidden\">\n      <div className=\"w-42 flex-none h-full overflow-y-auto overflow-x-hidden pr-4\">\n        {visibleFunctions.map((entry, i) => (\n          <a\n            key={i}\n            className=\"cursor-pointer block hover:bg-lineHighlight py-1 px-4\"\n            onClick={() => {\n              const el = document.getElementById(`doc-${i}`);\n              const container = document.getElementById('reference-container');\n              container.scrollTo(0, el.offsetTop);\n            }}\n          >\n            {entry.name} {/* <span className=\"text-gray-600\">{entry.meta.filename}</span> */}\n          </a>\n        ))}\n      </div>\n      <div className=\"break-normal w-full h-full overflow-auto pl-4 flex relative\" id=\"reference-container\">\n        <div className=\"prose dark:prose-invert max-w-full pr-4\">\n          <h2>API Reference</h2>\n          <p>\n            This is the long list functions you can use! Remember that you don't need to remember all of those and that\n            you can already make music with a small set of functions!\n          </p>\n          {visibleFunctions.map((entry, i) => (\n            <section key={i}>\n              <h3 id={`doc-${i}`}>{entry.name}</h3>\n              {!!entry.synonyms_text && (\n                <p>\n                  Synonyms: <code>{entry.synonyms_text}</code>\n                </p>\n              )}\n              {/* <small>{entry.meta.filename}</small> */}\n              <p dangerouslySetInnerHTML={{ __html: entry.description }}></p>\n              <ul>\n                {entry.params?.map(({ name, type, description }, i) => (\n                  <li key={i}>\n                    {name} : {type.names?.join(' | ')} {description ? <> - {getInnerText(description)}</> : ''}\n                  </li>\n                ))}\n              </ul>\n              {entry.examples?.map((example, j) => (\n                <pre key={j}>{example}</pre>\n              ))}\n            </section>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import cx from '@src/cx.mjs';\n\nexport function ButtonGroup({ value, onChange, items }) {\n  return (\n    <div className=\"flex max-w-lg\">\n      {Object.entries(items).map(([key, label], i, arr) => (\n        <button\n          key={key}\n          onClick={() => onChange(key)}\n          className={cx(\n            'px-2 border-b h-8 whitespace-nowrap',\n            // i === 0 && 'rounded-l-md',\n            // i === arr.length - 1 && 'rounded-r-md',\n            // value === key ? 'bg-background' : 'bg-lineHighlight',\n            value === key ? 'border-foreground' : 'border-transparent',\n          )}\n        >\n          {label.toLowerCase()}\n        </button>\n      ))}\n    </div>\n  );\n}\n","import { defaultSettings, settingsMap, useSettings } from '../../settings.mjs';\nimport { themes } from '@strudel/codemirror';\nimport { ButtonGroup } from './Forms.jsx';\n\nfunction Checkbox({ label, value, onChange }) {\n  return (\n    <label>\n      <input type=\"checkbox\" checked={value} onChange={onChange} />\n      {' ' + label}\n    </label>\n  );\n}\n\nfunction SelectInput({ value, options, onChange }) {\n  return (\n    <select\n      className=\"p-2 bg-background rounded-md text-foreground\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n    >\n      {Object.entries(options).map(([k, label]) => (\n        <option key={k} className=\"bg-background\" value={k}>\n          {label}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nfunction NumberSlider({ value, onChange, step = 1, ...rest }) {\n  return (\n    <div className=\"flex space-x-2 gap-1\">\n      <input\n        className=\"p-2 grow\"\n        type=\"range\"\n        value={value}\n        step={step}\n        onChange={(e) => onChange(Number(e.target.value))}\n        {...rest}\n      />\n      <input\n        type=\"number\"\n        value={value}\n        step={step}\n        className=\"w-16 bg-background rounded-md\"\n        onChange={(e) => onChange(Number(e.target.value))}\n      />\n    </div>\n  );\n}\n\nfunction FormItem({ label, children }) {\n  return (\n    <div className=\"grid gap-2\">\n      <label>{label}</label>\n      {children}\n    </div>\n  );\n}\n\nconst themeOptions = Object.fromEntries(Object.keys(themes).map((k) => [k, k]));\nconst fontFamilyOptions = {\n  monospace: 'monospace',\n  BigBlueTerminal: 'BigBlueTerminal',\n  x3270: 'x3270',\n  PressStart: 'PressStart2P',\n  galactico: 'galactico',\n  'we-come-in-peace': 'we-come-in-peace',\n  FiraCode: 'FiraCode',\n  'FiraCode-SemiBold': 'FiraCode SemiBold',\n  teletext: 'teletext',\n  mode7: 'mode7',\n};\n\nexport function SettingsTab() {\n  const {\n    theme,\n    keybindings,\n    isLineNumbersDisplayed,\n    isPatternHighlightingEnabled,\n    isActiveLineHighlighted,\n    isAutoCompletionEnabled,\n    isTooltipEnabled,\n    isFlashEnabled,\n    isLineWrappingEnabled,\n    fontSize,\n    fontFamily,\n    panelPosition,\n  } = useSettings();\n\n  return (\n    <div className=\"text-foreground p-4 space-y-4\">\n      <FormItem label=\"Theme\">\n        <SelectInput options={themeOptions} value={theme} onChange={(theme) => settingsMap.setKey('theme', theme)} />\n      </FormItem>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <FormItem label=\"Font Family\">\n          <SelectInput\n            options={fontFamilyOptions}\n            value={fontFamily}\n            onChange={(fontFamily) => settingsMap.setKey('fontFamily', fontFamily)}\n          />\n        </FormItem>\n        <FormItem label=\"Font Size\">\n          <NumberSlider\n            value={fontSize}\n            onChange={(fontSize) => settingsMap.setKey('fontSize', fontSize)}\n            min={10}\n            max={40}\n            step={2}\n          />\n        </FormItem>\n      </div>\n      <FormItem label=\"Keybindings\">\n        <ButtonGroup\n          value={keybindings}\n          onChange={(keybindings) => settingsMap.setKey('keybindings', keybindings)}\n          items={{ codemirror: 'Codemirror', vim: 'Vim', emacs: 'Emacs', vscode: 'VSCode' }}\n        ></ButtonGroup>\n      </FormItem>\n      <FormItem label=\"Panel Position\">\n        <ButtonGroup\n          value={panelPosition}\n          onChange={(value) => settingsMap.setKey('panelPosition', value)}\n          items={{ bottom: 'Bottom', right: 'Right' }}\n        ></ButtonGroup>\n      </FormItem>\n      <FormItem label=\"Code Settings\">\n        <Checkbox\n          label=\"Display line numbers\"\n          onChange={(cbEvent) => settingsMap.setKey('isLineNumbersDisplayed', cbEvent.target.checked)}\n          value={isLineNumbersDisplayed}\n        />\n        <Checkbox\n          label=\"Highlight active line\"\n          onChange={(cbEvent) => settingsMap.setKey('isActiveLineHighlighted', cbEvent.target.checked)}\n          value={isActiveLineHighlighted}\n        />\n        <Checkbox\n          label=\"Highlight events in code\"\n          onChange={(cbEvent) => settingsMap.setKey('isPatternHighlightingEnabled', cbEvent.target.checked)}\n          value={isPatternHighlightingEnabled}\n        />\n        <Checkbox\n          label=\"Enable auto-completion\"\n          onChange={(cbEvent) => settingsMap.setKey('isAutoCompletionEnabled', cbEvent.target.checked)}\n          value={isAutoCompletionEnabled}\n        />\n        <Checkbox\n          label=\"Enable tooltips on Ctrl and hover\"\n          onChange={(cbEvent) => settingsMap.setKey('isTooltipEnabled', cbEvent.target.checked)}\n          value={isTooltipEnabled}\n        />\n        <Checkbox\n          label=\"Enable line wrapping\"\n          onChange={(cbEvent) => settingsMap.setKey('isLineWrappingEnabled', cbEvent.target.checked)}\n          value={isLineWrappingEnabled}\n        />\n        <Checkbox\n          label=\"Enable flashing on evaluation\"\n          onChange={(cbEvent) => settingsMap.setKey('isFlashEnabled', cbEvent.target.checked)}\n          value={isFlashEnabled}\n        />\n      </FormItem>\n      <FormItem label=\"Zen Mode\">Try clicking the logo in the top left!</FormItem>\n      <FormItem label=\"Reset Settings\">\n        <button\n          className=\"bg-background p-2 max-w-[300px] rounded-md hover:opacity-50\"\n          onClick={() => {\n            if (confirm('Sure?')) {\n              settingsMap.set(defaultSettings);\n            }\n          }}\n        >\n          restore default settings\n        </button>\n      </FormItem>\n    </div>\n  );\n}\n","import React, { useCallback, useState } from 'react';\nimport { registerSamplesFromDB, uploadSamplesToDB, userSamplesDBConfig } from '../idbutils.mjs';\n\n//choose a directory to locally import samples\nexport default function ImportSoundsButton({ onComplete }) {\n  let fileUploadRef = React.createRef();\n  const [isUploading, setIsUploading] = useState(false);\n  const onChange = useCallback(async () => {\n    if (!fileUploadRef.current.files?.length) {\n      return;\n    }\n    setIsUploading(true);\n    await uploadSamplesToDB(userSamplesDBConfig, fileUploadRef.current.files).then(() => {\n      registerSamplesFromDB(userSamplesDBConfig, () => {\n        onComplete();\n        setIsUploading(false);\n      });\n    });\n  });\n\n  return (\n    <label\n      style={{ alignItems: 'center' }}\n      className=\"flex bg-background ml-2 pl-2 pr-2 max-w-[300px] rounded-md hover:opacity-50 whitespace-nowrap cursor-pointer\"\n    >\n      <input\n        disabled={isUploading}\n        ref={fileUploadRef}\n        id=\"audio_file\"\n        style={{ display: 'none' }}\n        type=\"file\"\n        directory=\"\"\n        webkitdirectory=\"\"\n        multiple\n        accept=\"audio/*\"\n        onChange={() => {\n          onChange();\n        }}\n      />\n      {isUploading ? 'importing...' : 'import sounds'}\n    </label>\n  );\n}\n","import useEvent from '@src/useEvent.mjs';\nimport { useStore } from '@nanostores/react';\nimport { getAudioContext, soundMap, connectToDestination } from '@strudel.cycles/webaudio';\nimport React, { useMemo, useRef } from 'react';\nimport { settingsMap, useSettings } from '../../settings.mjs';\nimport { ButtonGroup } from './Forms.jsx';\nimport ImportSoundsButton from './ImportSoundsButton.jsx';\n\nconst getSamples = (samples) =>\n  Array.isArray(samples) ? samples.length : typeof samples === 'object' ? Object.values(samples).length : 1;\n\nexport function SoundsTab() {\n  const sounds = useStore(soundMap);\n  const { soundsFilter } = useSettings();\n  const soundEntries = useMemo(() => {\n    let filtered = Object.entries(sounds).filter(([key]) => !key.startsWith('_'));\n    if (!sounds) {\n      return [];\n    }\n    if (soundsFilter === 'user') {\n      return filtered.filter(([key, { data }]) => !data.prebake);\n    }\n    if (soundsFilter === 'drums') {\n      return filtered.filter(([_, { data }]) => data.type === 'sample' && data.tag === 'drum-machines');\n    }\n    if (soundsFilter === 'samples') {\n      return filtered.filter(([_, { data }]) => data.type === 'sample' && data.tag !== 'drum-machines');\n    }\n    if (soundsFilter === 'synths') {\n      return filtered.filter(([_, { data }]) => ['synth', 'soundfont'].includes(data.type));\n    }\n    return filtered;\n  }, [sounds, soundsFilter]);\n  // holds mutable ref to current triggered sound\n  const trigRef = useRef();\n  // stop current sound on mouseup\n  useEvent('mouseup', () => {\n    const t = trigRef.current;\n    trigRef.current = undefined;\n    t?.then((ref) => {\n      ref?.stop(getAudioContext().currentTime + 0.01);\n    });\n  });\n  return (\n    <div id=\"sounds-tab\" className=\"px-4 flex flex-col w-full h-full dark:text-white text-stone-900\">\n      <div className=\"pb-2 flex shrink-0 overflow-auto\">\n        <ButtonGroup\n          value={soundsFilter}\n          onChange={(value) => settingsMap.setKey('soundsFilter', value)}\n          items={{\n            samples: 'samples',\n            drums: 'drum-machines',\n            synths: 'Synths',\n            user: 'User',\n          }}\n        ></ButtonGroup>\n        <ImportSoundsButton onComplete={() => settingsMap.setKey('soundsFilter', 'user')} />\n      </div>\n      <div className=\"min-h-0 max-h-full grow overflow-auto font-mono text-sm break-normal\">\n        {soundEntries.map(([name, { data, onTrigger }]) => (\n          <span\n            key={name}\n            className=\"cursor-pointer hover:opacity-50\"\n            onMouseDown={async () => {\n              const ctx = getAudioContext();\n              const params = {\n                note: ['synth', 'soundfont'].includes(data.type) ? 'a3' : undefined,\n                s: name,\n                clip: 1,\n                release: 0.5,\n              };\n              const time = ctx.currentTime + 0.05;\n              const onended = () => trigRef.current?.node?.disconnect();\n              trigRef.current = Promise.resolve(onTrigger(time, params, onended));\n              trigRef.current.then((ref) => {\n                connectToDestination(ref?.node);\n              });\n            }}\n          >\n            {' '}\n            {name}\n            {data?.type === 'sample' ? `(${getSamples(data.samples)})` : ''}\n            {data?.type === 'soundfont' ? `(${data.fonts.length})` : ''}\n          </span>\n        ))}\n        {!soundEntries.length ? 'No custom sounds loaded in this pattern (yet).' : ''}\n      </div>\n    </div>\n  );\n}\n","import cx from '@src/cx.mjs';\n\nconst { BASE_URL } = import.meta.env;\nconst baseNoTrailing = BASE_URL.endsWith('/') ? BASE_URL.slice(0, -1) : BASE_URL;\n\nexport function WelcomeTab({ context }) {\n  return (\n    <div className=\"prose dark:prose-invert max-w-[600px] pt-2 font-sans pb-8 px-4\">\n      <h3>\n        <span className={cx('animate-spin inline-block select-none')}>🌀</span> welcome\n      </h3>\n      <p>\n        You have found <span className=\"underline\">strudel</span>, a new live coding platform to write dynamic music\n        pieces in the browser! It is free and open-source and made for beginners and experts alike. To get started:\n        <br />\n        <br />\n        <span className=\"underline\">1. hit play</span> - <span className=\"underline\">2. change something</span> -{' '}\n        <span className=\"underline\">3. hit update</span>\n        <br />\n        If you don't like what you hear, try <span className=\"underline\">shuffle</span>!\n      </p>\n      <p>\n        To learn more about what this all means, check out the{' '}\n        <a href={`${baseNoTrailing}/workshop/getting-started/`} target=\"_blank\">\n          interactive tutorial\n        </a>\n        . Also feel free to join the{' '}\n        <a href=\"https://discord.com/invite/HGEdXmRkzT\" target=\"_blank\">\n          tidalcycles discord channel\n        </a>{' '}\n        to ask any questions, give feedback or just say hello.\n      </p>\n      <h3>about</h3>\n      <p>\n        strudel is a JavaScript version of{' '}\n        <a href=\"https://tidalcycles.org/\" target=\"_blank\">\n          tidalcycles\n        </a>\n        , which is a popular live coding language for music, written in Haskell. You can find the source code at{' '}\n        <a href=\"https://github.com/tidalcycles/strudel\" target=\"_blank\">\n          github\n        </a>\n        . Please consider to{' '}\n        <a href=\"https://opencollective.com/tidalcycles\" target=\"_blank\">\n          support this project\n        </a>{' '}\n        to ensure ongoing development 💖\n      </p>\n    </div>\n  );\n}\n","import { DocumentDuplicateIcon, PencilSquareIcon, TrashIcon } from '@heroicons/react/20/solid';\nimport { useMemo } from 'react';\nimport {\n  clearUserPatterns,\n  deleteActivePattern,\n  duplicateActivePattern,\n  exportPatterns,\n  getUserPattern,\n  importPatterns,\n  newUserPattern,\n  renameActivePattern,\n  setActivePattern,\n  useActivePattern,\n  useSettings,\n} from '../../settings.mjs';\nimport * as tunes from '../tunes.mjs';\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ');\n}\n\nexport function PatternsTab({ context }) {\n  const { userPatterns } = useSettings();\n  const activePattern = useActivePattern();\n  const isExample = useMemo(() => activePattern && !!tunes[activePattern], [activePattern]);\n  return (\n    <div className=\"px-4 w-full dark:text-white text-stone-900 space-y-4 pb-4\">\n      <section>\n        {activePattern && (\n          <div className=\"flex items-center mb-2 space-x-2 overflow-auto\">\n            <h1 className=\"text-xl\">{activePattern}</h1>\n            <div className=\"space-x-4 flex w-min\">\n              {!isExample && (\n                <button className=\"hover:opacity-50\" onClick={() => renameActivePattern()} title=\"Rename\">\n                  <PencilSquareIcon className=\"w-5 h-5\" />\n                  {/* <PencilIcon className=\"w-5 h-5\" /> */}\n                </button>\n              )}\n              <button className=\"hover:opacity-50\" onClick={() => duplicateActivePattern()} title=\"Duplicate\">\n                <DocumentDuplicateIcon className=\"w-5 h-5\" />\n              </button>\n              {!isExample && (\n                <button className=\"hover:opacity-50\" onClick={() => deleteActivePattern()} title=\"Delete\">\n                  <TrashIcon className=\"w-5 h-5\" />\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n        <div className=\"font-mono text-sm\">\n          {Object.entries(userPatterns).map(([key, up]) => (\n            <a\n              key={key}\n              className={classNames(\n                'mr-4 hover:opacity-50 cursor-pointer inline-block',\n                key === activePattern ? 'outline outline-1' : '',\n              )}\n              onClick={() => {\n                const { code } = up;\n                setActivePattern(key);\n                context.handleUpdate(code, true);\n              }}\n            >\n              {key}\n            </a>\n          ))}\n        </div>\n        <div className=\"pr-4 space-x-4 border-b border-foreground mb-2 h-8 flex overflow-auto max-w-full items-center\">\n          <button\n            className=\"hover:opacity-50\"\n            onClick={() => {\n              const name = newUserPattern();\n              const { code } = getUserPattern(name);\n              context.handleUpdate(code, true);\n            }}\n          >\n            new\n          </button>\n          <button className=\"hover:opacity-50\" onClick={() => clearUserPatterns()}>\n            clear\n          </button>\n          <label className=\"hover:opacity-50 cursor-pointer\">\n            <input\n              style={{ display: 'none' }}\n              type=\"file\"\n              multiple\n              accept=\"text/plain,application/json\"\n              onChange={(e) => importPatterns(e.target.files)}\n            />\n            import\n          </label>\n          <button className=\"hover:opacity-50\" onClick={() => exportPatterns()}>\n            export\n          </button>\n        </div>\n      </section>\n      <section>\n        <h2 className=\"text-xl mb-2\">Examples</h2>\n        <div className=\"font-mono text-sm\">\n          {Object.entries(tunes).map(([key, tune]) => (\n            <a\n              key={key}\n              className={classNames(\n                'mr-4 hover:opacity-50 cursor-pointer inline-block',\n                key === activePattern ? 'outline outline-1' : '',\n              )}\n              onClick={() => {\n                setActivePattern(key);\n                context.handleUpdate(tune, true);\n              }}\n            >\n              {key}\n            </a>\n          ))}\n        </div>\n      </section>\n    </div>\n  );\n}\n","import XMarkIcon from '@heroicons/react/20/solid/XMarkIcon';\nimport { logger } from '@strudel.cycles/core';\nimport useEvent from '@src/useEvent.mjs';\nimport cx from '@src/cx.mjs';\nimport { nanoid } from 'nanoid';\nimport { useCallback, useLayoutEffect, useEffect, useRef, useState } from 'react';\nimport { setActiveFooter, useSettings } from '../../settings.mjs';\nimport { ConsoleTab } from './ConsoleTab';\nimport { FilesTab } from './FilesTab';\nimport { Reference } from './Reference';\nimport { SettingsTab } from './SettingsTab';\nimport { SoundsTab } from './SoundsTab';\nimport { WelcomeTab } from './WelcomeTab';\nimport { PatternsTab } from './PatternsTab';\nimport useClient from '@src/useClient.mjs';\n\n// https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nexport const useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nconst TAURI = typeof window !== 'undefined' && window.__TAURI__;\n\nexport function Panel({ context }) {\n  const footerContent = useRef();\n  const [log, setLog] = useState([]);\n  const { activeFooter, isZen, panelPosition } = useSettings();\n\n  useIsomorphicLayoutEffect(() => {\n    if (footerContent.current && activeFooter === 'console') {\n      // scroll log box to bottom when log changes\n      footerContent.current.scrollTop = footerContent.current?.scrollHeight;\n    }\n  }, [log, activeFooter]);\n  useIsomorphicLayoutEffect(() => {\n    if (!footerContent.current) {\n    } else if (activeFooter === 'console') {\n      footerContent.current.scrollTop = footerContent.current?.scrollHeight;\n    } else {\n      footerContent.current.scrollTop = 0;\n    }\n  }, [activeFooter]);\n\n  useLogger(\n    useCallback((e) => {\n      const { message, type, data } = e.detail;\n      setLog((l) => {\n        const lastLog = l.length ? l[l.length - 1] : undefined;\n        const id = nanoid(12);\n        // if (type === 'loaded-sample' && lastLog.type === 'load-sample' && lastLog.url === data.url) {\n        if (type === 'loaded-sample') {\n          // const loadIndex = l.length - 1;\n          const loadIndex = l.findIndex(({ data: { url }, type }) => type === 'load-sample' && url === data.url);\n          l[loadIndex] = { message, type, id, data };\n        } else if (lastLog && lastLog.message === message) {\n          l = l.slice(0, -1).concat([{ message, type, count: (lastLog.count ?? 1) + 1, id, data }]);\n        } else {\n          l = l.concat([{ message, type, id, data }]);\n        }\n        return l.slice(-20);\n      });\n    }, []),\n  );\n\n  const PanelTab = ({ children, name, label }) => (\n    <>\n      <div\n        onClick={() => setActiveFooter(name)}\n        className={cx(\n          'h-8 px-2 text-foreground cursor-pointer hover:opacity-50 flex items-center space-x-1 border-b',\n          activeFooter === name ? 'border-foreground' : 'border-transparent',\n        )}\n      >\n        {label || name}\n      </div>\n      {activeFooter === name && <>{children}</>}\n    </>\n  );\n  if (isZen) {\n    return null;\n  }\n\n  const isActive = activeFooter !== '';\n\n  let positions = {\n    right: cx('max-w-full flex-grow-0 flex-none overflow-hidden', isActive ? 'w-[600px] h-full' : 'absolute right-0'),\n    bottom: cx('relative', isActive ? 'h-[360px] min-h-[360px]' : ''),\n  };\n  const client = useClient();\n  if (!client) {\n    return null;\n  }\n  return (\n    <nav className={cx('bg-lineHighlight z-[10] flex flex-col', positions[panelPosition])}>\n      <div className=\"flex justify-between px-2\">\n        <div className={cx('flex select-none max-w-full overflow-auto', activeFooter && 'pb-2')}>\n          <PanelTab name=\"intro\" label=\"welcome\" />\n          <PanelTab name=\"patterns\" />\n          <PanelTab name=\"sounds\" />\n          <PanelTab name=\"console\" />\n          <PanelTab name=\"reference\" />\n          <PanelTab name=\"settings\" />\n          {TAURI && <PanelTab name=\"files\" />}\n        </div>\n        {activeFooter !== '' && (\n          <button onClick={() => setActiveFooter('')} className=\"text-foreground px-2\" aria-label=\"Close Panel\">\n            <XMarkIcon className=\"w-5 h-5\" />\n          </button>\n        )}\n      </div>\n      {activeFooter !== '' && (\n        <div className=\"relative overflow-hidden\">\n          <div className=\"text-white overflow-auto h-full max-w-full\" ref={footerContent}>\n            {activeFooter === 'intro' && <WelcomeTab context={context} />}\n            {activeFooter === 'patterns' && <PatternsTab context={context} />}\n            {activeFooter === 'console' && <ConsoleTab log={log} />}\n            {activeFooter === 'sounds' && <SoundsTab />}\n            {activeFooter === 'reference' && <Reference />}\n            {activeFooter === 'settings' && <SettingsTab />}\n            {activeFooter === 'files' && <FilesTab />}\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n}\n\nfunction useLogger(onTrigger) {\n  useEvent(logger.key, onTrigger);\n}\n","/*\nRepl.jsx - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/repl/src/App.js>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { code2hash, getDrawContext, logger, silence } from '@strudel.cycles/core';\nimport cx from '@src/cx.mjs';\nimport { transpiler } from '@strudel.cycles/transpiler';\nimport { getAudioContext, initAudioOnFirstClick, webaudioOutput } from '@strudel.cycles/webaudio';\nimport { StrudelMirror, defaultSettings } from '@strudel/codemirror';\nimport { createContext, useCallback, useEffect, useRef, useState } from 'react';\nimport {\n  initUserCode,\n  setActivePattern,\n  setLatestCode,\n  settingsMap,\n  updateUserCode,\n  useSettings,\n} from '../settings.mjs';\nimport { Header } from './Header';\nimport Loader from './Loader';\nimport './Repl.css';\nimport { Panel } from './panel/Panel';\nimport { useStore } from '@nanostores/react';\nimport { prebake } from './prebake.mjs';\nimport { getRandomTune, initCode, loadModules, shareCode } from './util.mjs';\nimport PlayCircleIcon from '@heroicons/react/20/solid/PlayCircleIcon';\nimport './Repl.css';\n\nconst { code: randomTune, name } = getRandomTune();\nexport const ReplContext = createContext(null);\n\nconst { latestCode } = settingsMap.get();\n\nlet modulesLoading, presets, drawContext, clearCanvas, isIframe;\nif (typeof window !== 'undefined') {\n  initAudioOnFirstClick();\n  modulesLoading = loadModules();\n  presets = prebake();\n  drawContext = getDrawContext();\n  clearCanvas = () => drawContext.clearRect(0, 0, drawContext.canvas.height, drawContext.canvas.width);\n  isIframe = window.location !== window.parent.location;\n}\n\nexport function Repl({ embedded = false }) {\n  const isEmbedded = embedded || isIframe;\n  const { panelPosition, isZen } = useSettings();\n\n  const init = useCallback(() => {\n    const drawTime = [-2, 2];\n    const drawContext = getDrawContext();\n    const onDraw = (haps, time, frame, painters) => {\n      painters.length && drawContext.clearRect(0, 0, drawContext.canvas.width * 2, drawContext.canvas.height * 2);\n      painters?.forEach((painter) => {\n        // ctx time haps drawTime paintOptions\n        painter(drawContext, time, haps, drawTime, { clear: false });\n      });\n    };\n    const editor = new StrudelMirror({\n      defaultOutput: webaudioOutput,\n      getTime: () => getAudioContext().currentTime,\n      transpiler,\n      autodraw: false,\n      root: containerRef.current,\n      initialCode: '// LOADING',\n      pattern: silence,\n      drawTime,\n      onDraw,\n      prebake: async () => Promise.all([modulesLoading, presets]),\n      onUpdateState: (state) => {\n        setReplState({ ...state });\n      },\n      afterEval: ({ code }) => {\n        updateUserCode(code);\n        // setPending(false);\n        setLatestCode(code);\n        window.location.hash = '#' + code2hash(code);\n      },\n      bgFill: false,\n    });\n    // init settings\n    initCode().then((decoded) => {\n      let msg;\n      if (decoded) {\n        editor.setCode(decoded);\n        initUserCode(decoded);\n        msg = `I have loaded the code from the URL.`;\n      } else if (latestCode) {\n        editor.setCode(latestCode);\n        msg = `Your last session has been loaded!`;\n      } else {\n        editor.setCode(randomTune);\n        msg = `A random code snippet named \"${name}\" has been loaded!`;\n      }\n      logger(`Welcome to Strudel! ${msg} Press play or hit ctrl+enter to run it!`, 'highlight');\n      // setPending(false);\n    });\n\n    editorRef.current = editor;\n  }, []);\n\n  const [replState, setReplState] = useState({});\n  const { started, isDirty, error, activeCode, pending } = replState;\n  const editorRef = useRef();\n  const containerRef = useRef();\n\n  // this can be simplified once SettingsTab has been refactored to change codemirrorSettings directly!\n  // this will be the case when the main repl is being replaced\n  const _settings = useStore(settingsMap, { keys: Object.keys(defaultSettings) });\n  useEffect(() => {\n    let editorSettings = {};\n    Object.keys(defaultSettings).forEach((key) => {\n      if (_settings.hasOwnProperty(key)) {\n        editorSettings[key] = _settings[key];\n      }\n    });\n    editorRef.current?.updateSettings(editorSettings);\n  }, [_settings]);\n\n  //\n  // UI Actions\n  //\n\n  const handleTogglePlay = async () => editorRef.current?.toggle();\n  const handleUpdate = async (newCode, reset = false) => {\n    if (reset) {\n      clearCanvas();\n      resetLoadedSounds();\n      editorRef.current.repl.setCps(1);\n      await prebake(); // declare default samples\n    }\n    if (newCode || isDirty) {\n      editorRef.current.setCode(newCode);\n      editorRef.current.repl.evaluate(newCode);\n    }\n    logger('[repl] code updated!');\n  };\n  const handleShuffle = async () => {\n    // window.postMessage('strudel-shuffle');\n    const { code, name } = getRandomTune();\n    logger(`[repl] ✨ loading random tune \"${name}\"`);\n    setActivePattern(name);\n    clearCanvas();\n    resetLoadedSounds();\n    editorRef.current.repl.setCps(1);\n    await prebake(); // declare default samples\n    editorRef.current.setCode(code);\n    editorRef.current.repl.evaluate(code);\n  };\n\n  const handleShare = async () => shareCode(activeCode);\n  const context = {\n    embedded,\n    started,\n    pending,\n    isDirty,\n    activeCode,\n    handleTogglePlay,\n    handleUpdate,\n    handleShuffle,\n    handleShare,\n  };\n\n  return (\n    <ReplContext.Provider value={context}>\n      <div className={cx('h-full flex flex-col relative')}>\n        <Loader active={pending} />\n        <Header context={context} />\n        {isEmbedded && !started && (\n          <button\n            onClick={() => handleTogglePlay()}\n            className=\"text-white text-2xl fixed left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%] z-[1000] m-auto p-4 bg-black rounded-md flex items-center space-x-2\"\n          >\n            <PlayCircleIcon className=\"w-6 h-6\" />\n            <span>play</span>\n          </button>\n        )}\n        <div className=\"grow flex relative overflow-hidden\">\n          <section\n            className={'text-gray-100 cursor-text pb-0 overflow-auto grow' + (isZen ? ' px-10' : '')}\n            id=\"code\"\n            ref={(el) => {\n              containerRef.current = el;\n              if (!editorRef.current) {\n                init();\n              }\n            }}\n          ></section>\n          {panelPosition === 'right' && !isEmbedded && <Panel context={context} />}\n        </div>\n        {error && (\n          <div className=\"text-red-500 p-4 bg-lineHighlight animate-pulse\">{error.message || 'Unknown Error :-/'}</div>\n        )}\n        {panelPosition === 'bottom' && !isEmbedded && <Panel context={context} />}\n      </div>\n    </ReplContext.Provider>\n  );\n}\n","---\nimport HeadCommon from '../components/HeadCommon.astro';\nimport { Repl } from '../repl/Repl';\n---\n\n<html lang=\"en\" class=\"dark\">\n  <head>\n    <HeadCommon />\n    <title>Strudel REPL</title>\n  </head>\n  <body class=\"h-app-height bg-background\">\n    <Repl client:load />\n  </body>\n</html>\n","---\nimport * as tunes from '../../../src/repl/tunes.mjs';\nimport HeadCommon from '../../components/HeadCommon.astro';\n\nimport { getMetadata } from '../metadata_parser';\n\nconst { BASE_URL } = import.meta.env;\nconst baseNoTrailing = BASE_URL.endsWith('/') ? BASE_URL.slice(0, -1) : BASE_URL;\n---\n\n<head>\n  <HeadCommon />\n</head>\n<body class=\"bg-slate-800\">\n  <div class=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-2 p-2 select-none\">\n    {\n      Object.entries(tunes).map(([name, tune]) => (\n        <a class=\"rounded-md bg-slate-900 hover:bg-slate-700 cursor-pointer relative\" href={`${baseNoTrailing}/#${btoa(tune)}`}>\n          <div class=\"absolute w-full h-full flex justify-center items-center\">\n            <span class=\"bg-slate-800 p-2 rounded-md text-white\">{getMetadata(tune)['title'] || name}</span>\n          </div>\n          <img src={`${baseNoTrailing}/img/example-${name}.png`} />\n        </a>\n      ))\n    }\n  </div>\n</body>\n","<script is:inline>\n  window.location.pathname = `/workshop/getting-started`;\n</script>\n","<script is:inline>\n  window.location.pathname = `/workshop/intro`;\n</script>\n","\n\t\t\t\timport { unescapeHTML, spreadAttributes, createComponent, render, renderComponent, maybeRenderHead } from \"/Users/michaelgogins/cloud-5/strudel/node_modules/.pnpm/astro@3.4.2_@types+node@18.16.3_typescript@4.9.4/node_modules/astro/dist/runtime/server/index.js\";\n\t\t\t\timport { AstroError, AstroErrorData } from \"/Users/michaelgogins/cloud-5/strudel/node_modules/.pnpm/astro@3.4.2_@types+node@18.16.3_typescript@4.9.4/node_modules/astro/dist/core/errors/index.js\";\n\t\t\t\t\n\n\t\t\t\tconst html = \"<h1 id=\\\"my-patterns\\\">my-patterns</h1>\\n<p>This directory can be used to save your own patterns, which then get\\nmade into a pattern swatch.</p>\\n<p>Example: <a href=\\\"https://felixroos.github.io/strudel/swatch/\\\">https://felixroos.github.io/strudel/swatch/</a></p>\\n<h2 id=\\\"deploy\\\">deploy</h2>\\n<h3 id=\\\"1-fork-the-strudel-repo-on-github\\\">1. fork the <a href=\\\"https://github.com/tidalcycles/strudel.git\\\">strudel repo on github</a></h3>\\n<h3 id=\\\"2-clone-your-fork-to-your-machine-git-clone-httpsgithubcomyour-usernamestrudelgit-strudel--cd-strudel\\\">2. clone your fork to your machine <code>git clone https://github.com/&#x3C;your-username>/strudel.git strudel &#x26;&#x26; cd strudel</code></h3>\\n<h3 id=\\\"3-create-a-separate-branch-like-git-branch-patternuary--git-checkout-patternuary\\\">3. create a separate branch like <code>git branch patternuary &#x26;&#x26; git checkout patternuary</code></h3>\\n<h3 id=\\\"4-save-one-or-more-txt-files-in-the-my-patterns-folder\\\">4. save one or more .txt files in the my-patterns folder</h3>\\n<h3 id=\\\"5-edit-websitepubliccname-to-contain-your-usernamegithubiostrudel\\\">5. edit <code>website/public/CNAME</code> to contain <code>&#x3C;your-username>.github.io/strudel</code></h3>\\n<h3 id=\\\"6-edit-websiteastroconfigmjs-to-use-site-httpsyour-usernamegithubio-and-base-strudel-like-this\\\">6. edit <code>website/astro.config.mjs</code> to use site: <code>https://&#x3C;your-username>.github.io</code> and base <code>/strudel</code>, like this</h3>\\n<pre class=\\\"astro-code github-dark\\\" style=\\\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#F97583\\\">const</span><span style=\\\"color:#79B8FF\\\"> site</span><span style=\\\"color:#F97583\\\"> =</span><span style=\\\"color:#9ECBFF\\\"> 'https://&#x3C;your-username>.github.io'</span><span style=\\\"color:#E1E4E8\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#F97583\\\">const</span><span style=\\\"color:#79B8FF\\\"> base</span><span style=\\\"color:#F97583\\\"> =</span><span style=\\\"color:#9ECBFF\\\"> '/strudel'</span><span style=\\\"color:#E1E4E8\\\">;</span></span></code></pre>\\n<h3 id=\\\"7-commit--push-the-changes\\\">7. commit &#x26; push the changes</h3>\\n<pre class=\\\"astro-code github-dark\\\" style=\\\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#B392F0\\\">git</span><span style=\\\"color:#9ECBFF\\\"> add</span><span style=\\\"color:#9ECBFF\\\"> .</span><span style=\\\"color:#E1E4E8\\\"> &#x26;&#x26; </span><span style=\\\"color:#B392F0\\\">git</span><span style=\\\"color:#9ECBFF\\\"> commit</span><span style=\\\"color:#79B8FF\\\"> -m</span><span style=\\\"color:#9ECBFF\\\"> \\\"site config\\\"</span><span style=\\\"color:#E1E4E8\\\"> &#x26;&#x26; </span><span style=\\\"color:#B392F0\\\">git</span><span style=\\\"color:#9ECBFF\\\"> push</span><span style=\\\"color:#79B8FF\\\"> --set-upstream</span><span style=\\\"color:#9ECBFF\\\"> origin</span></span></code></pre>\\n<h3 id=\\\"8-deploy-to-github-pages\\\">8. deploy to github pages</h3>\\n<ul>\\n<li>go to settings -> pages and select “Github Actions” as source</li>\\n<li>go to settings -> environments -> github-pages and press the edit button next to <code>main</code> and type in <code>patternuary</code> (under “Deployment branches”)</li>\\n<li>go to Actions -> <code>Build and Deploy</code> and click <code>Run workflow</code> with branch <code>patternuary</code></li>\\n</ul>\\n<h3 id=\\\"9-view-your-patterns-at-your-usernamegithubiostrudelswatch\\\">9. view your patterns at <code>&#x3C;your-username>.github.io/strudel/swatch/</code></h3>\\n<p>Alternatively, github pages allows you to use a custom domain, like <a href=\\\"https://mycooldomain.org/swatch/\\\">https://mycooldomain.org/swatch/</a>. <a href=\\\"https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site\\\">See their documentation for details</a>.</p>\\n<h3 id=\\\"10-optional-automatic-deployment\\\">10. optional: automatic deployment</h3>\\n<p>If you want to automatically deploy your site on push, go to <code>deploy.yml</code> and change <code>workflow_dispatch</code> to <code>push</code>.</p>\\n<h2 id=\\\"running-locally\\\">running locally</h2>\\n<ul>\\n<li>install dependencies with <code>npm run setup</code></li>\\n<li>run dev server with <code>npm run repl</code> and open <code>http://localhost:4321/strudel/swatch/</code></li>\\n</ul>\\n<h2 id=\\\"tests-fail\\\">tests fail?</h2>\\n<p>Your tests might fail if the code does not follow prettiers format.\\nIn that case, run <code>npm run codeformat</code>. To disable that, remove <code>npm run format-check</code> from <code>test.yml</code></p>\\n<h2 id=\\\"updating-your-fork\\\">updating your fork</h2>\\n<p>To update your fork, you can pull the main branch and merge it into your <code>patternuary</code> branch.</p>\";\n\n\t\t\t\texport const frontmatter = {};\n\t\t\t\texport const file = \"/Users/michaelgogins/cloud-5/strudel/my-patterns/README.md\";\n\t\t\t\texport const url = undefined;\n\t\t\t\texport function rawContent() {\n\t\t\t\t\treturn \"# my-patterns\\n\\nThis directory can be used to save your own patterns, which then get\\nmade into a pattern swatch.\\n\\nExample: <https://felixroos.github.io/strudel/swatch/>\\n\\n## deploy\\n\\n### 1. fork the [strudel repo on github](https://github.com/tidalcycles/strudel.git)\\n\\n### 2. clone your fork to your machine `git clone https://github.com/<your-username>/strudel.git strudel && cd strudel`\\n\\n### 3. create a separate branch like `git branch patternuary && git checkout patternuary`\\n\\n### 4. save one or more .txt files in the my-patterns folder\\n\\n### 5. edit `website/public/CNAME` to contain `<your-username>.github.io/strudel`\\n\\n### 6. edit `website/astro.config.mjs` to use site: `https://<your-username>.github.io` and base `/strudel`, like this\\n\\n```js\\nconst site = 'https://<your-username>.github.io';\\nconst base = '/strudel';\\n```\\n\\n### 7. commit & push the changes\\n\\n```sh\\ngit add . && git commit -m \\\"site config\\\" && git push --set-upstream origin\\n```\\n\\n### 8. deploy to github pages\\n\\n- go to settings -> pages and select \\\"Github Actions\\\" as source\\n- go to settings -> environments -> github-pages and press the edit button next to `main` and type in `patternuary` (under \\\"Deployment branches\\\")\\n- go to Actions -> `Build and Deploy` and click `Run workflow` with branch `patternuary`\\n\\n### 9. view your patterns at `<your-username>.github.io/strudel/swatch/`\\n\\nAlternatively, github pages allows you to use a custom domain, like https://mycooldomain.org/swatch/. [See their documentation for details](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site).\\n\\n### 10. optional: automatic deployment\\n\\nIf you want to automatically deploy your site on push, go to `deploy.yml` and change `workflow_dispatch` to `push`.\\n\\n## running locally\\n\\n- install dependencies with `npm run setup`\\n- run dev server with `npm run repl` and open `http://localhost:4321/strudel/swatch/`\\n\\n## tests fail?\\n\\nYour tests might fail if the code does not follow prettiers format.\\nIn that case, run `npm run codeformat`. To disable that, remove `npm run format-check` from `test.yml`\\n\\n## updating your fork\\n\\nTo update your fork, you can pull the main branch and merge it into your `patternuary` branch.\\n\";\n\t\t\t\t}\n\t\t\t\texport function compiledContent() {\n\t\t\t\t\treturn html;\n\t\t\t\t}\n\t\t\t\texport function getHeadings() {\n\t\t\t\t\treturn [{\"depth\":1,\"slug\":\"my-patterns\",\"text\":\"my-patterns\"},{\"depth\":2,\"slug\":\"deploy\",\"text\":\"deploy\"},{\"depth\":3,\"slug\":\"1-fork-the-strudel-repo-on-github\",\"text\":\"1. fork the strudel repo on github\"},{\"depth\":3,\"slug\":\"2-clone-your-fork-to-your-machine-git-clone-httpsgithubcomyour-usernamestrudelgit-strudel--cd-strudel\",\"text\":\"2. clone your fork to your machine git clone https://github.com/<your-username>/strudel.git strudel && cd strudel\"},{\"depth\":3,\"slug\":\"3-create-a-separate-branch-like-git-branch-patternuary--git-checkout-patternuary\",\"text\":\"3. create a separate branch like git branch patternuary && git checkout patternuary\"},{\"depth\":3,\"slug\":\"4-save-one-or-more-txt-files-in-the-my-patterns-folder\",\"text\":\"4. save one or more .txt files in the my-patterns folder\"},{\"depth\":3,\"slug\":\"5-edit-websitepubliccname-to-contain-your-usernamegithubiostrudel\",\"text\":\"5. edit website/public/CNAME to contain <your-username>.github.io/strudel\"},{\"depth\":3,\"slug\":\"6-edit-websiteastroconfigmjs-to-use-site-httpsyour-usernamegithubio-and-base-strudel-like-this\",\"text\":\"6. edit website/astro.config.mjs to use site: https://<your-username>.github.io and base /strudel, like this\"},{\"depth\":3,\"slug\":\"7-commit--push-the-changes\",\"text\":\"7. commit & push the changes\"},{\"depth\":3,\"slug\":\"8-deploy-to-github-pages\",\"text\":\"8. deploy to github pages\"},{\"depth\":3,\"slug\":\"9-view-your-patterns-at-your-usernamegithubiostrudelswatch\",\"text\":\"9. view your patterns at <your-username>.github.io/strudel/swatch/\"},{\"depth\":3,\"slug\":\"10-optional-automatic-deployment\",\"text\":\"10. optional: automatic deployment\"},{\"depth\":2,\"slug\":\"running-locally\",\"text\":\"running locally\"},{\"depth\":2,\"slug\":\"tests-fail\",\"text\":\"tests fail?\"},{\"depth\":2,\"slug\":\"updating-your-fork\",\"text\":\"updating your fork\"}];\n\t\t\t\t}\n\n\t\t\t\texport const Content = createComponent((result, _props, slots) => {\n\t\t\t\t\tconst { layout, ...content } = frontmatter;\n\t\t\t\t\tcontent.file = file;\n\t\t\t\t\tcontent.url = url;\n\n\t\t\t\t\treturn render`${maybeRenderHead(result)}${unescapeHTML(html)}`;\n\t\t\t\t});\n\t\t\t\texport default Content;\n\t\t\t\t","---\nimport { getMyPatterns } from './list.json';\n\nimport { Content } from '../../../../my-patterns/README.md';\nimport HeadCommon from '../../components/HeadCommon.astro';\n\nconst myPatterns = await getMyPatterns();\n\nconst { BASE_URL } = import.meta.env;\nconst baseNoTrailing = BASE_URL.endsWith('/') ? BASE_URL.slice(0, -1) : BASE_URL;\n---\n\n<head>\n  <HeadCommon />\n</head>\n<body class=\"bg-slate-800\">\n  {\n    Object.keys(myPatterns).length === 0 && (\n      <div class=\"prose prose-invert p-2\">\n        <Content />\n      </div>\n    )\n  }\n  <div class=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-2 p-2 select-none\">\n    {\n      Object.entries(myPatterns).map(([name, tune]) => (\n        <a\n          class=\"rounded-md bg-slate-900 hover:bg-slate-700 cursor-pointer relative\"\n          href={`${baseNoTrailing}/#${btoa(tune as string)}`}\n        >\n          <div class=\"absolute w-full h-full flex justify-center items-center\">\n            <span class=\"bg-slate-800 p-2 rounded-md text-white\">{name}</span>\n          </div>\n          <img src={`${baseNoTrailing}/swatch/${name}.png`} />\n        </a>\n      ))\n    }\n  </div>\n</body>\n","<script is:inline>\n  window.location.pathname = `/workshop/getting-started`;\n</script>\n","<script is:inline>\n  window.location.pathname = `/workshop/intro`;\n</script>\n"],"names":["BASE_URL","baseNoTrailing","Fragment","p","jsdocJson","i","theme","fontFamily","fontSize","keybindings","type","drawContext","defaultSettings","name","$$Astro","$$createAstro","$$Index","$$createComponent","Astro","$$render","$$renderComponent","HeadCommon","$$renderHead","$$addAttribute","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACe,SAAS,EAAE,CAAC,GAAG,OAAO,EAAE;AACvC;AACA,EAAE,OAAO,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3C;;ACCA,MAAM,YAAEA,UAAA,EAAa,GAAA,MAAA,CAAA,OAAA,CAAA,UAAA,CAAA,GAAA,CAAA,MAAA,CAAA,YAAA,CAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,qBAAA,CAAA,eAAA,CAAA,SAAA,CAAA,EAAA,EAAA,CAAA,EAAA,OAAA,CAAA,GAAA,CAAA,CAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;AACrB,MAAMC,gBAAA,GAAiBD,WAAS,QAAS,CAAA,GAAG,IAAIA,UAAS,CAAA,KAAA,CAAM,CAAG,EAAA,CAAA,CAAE,CAAI,GAAAA,UAAA,CAAA;AAExD,SAAA,MAAA,CAAO,EAAE,OAAA,EAAW,EAAA;AAClC,EAAM,MAAA;AAAA,IACJ,QAAA;AAAA,IACA,OAAA;AAAA,IACA,OAAA;AAAA,IACA,OAAA;AAAA,IACA,UAAA;AAAA,IACA,gBAAA;AAAA,IACA,YAAA;AAAA,IACA,aAAA;AAAA,IACA,WAAA;AAAA,GACE,GAAA,OAAA,CAAA;AACJ,EAAM,MAAA,UAAA,GAAa,OAAO,MAAW,KAAA,WAAA,KAAgB,YAAY,MAAO,CAAA,QAAA,KAAa,OAAO,MAAO,CAAA,QAAA,CAAA,CAAA;AACnG,EAAM,MAAA,EAAE,KAAM,EAAA,GAAI,WAAY,EAAA,CAAA;AAE9B,EACE,uBAAA,IAAA;AAAA,IAAC,QAAA;AAAA,IAAA;AAAA,MACC,EAAG,EAAA,QAAA;AAAA,MACH,SAAW,EAAA,EAAA;AAAA,QACT,mDAAA;AAAA,QACA,CAAC,KAAS,IAAA,CAAC,UAAc,IAAA,kBAAA;AAAA,QACzB,QAAQ,6BAAgC,GAAA,0CAAA;AAAA,QACxC,aAAa,MAAS,GAAA,SAAA;AAAA,OACxB;AAAA,MAEA,QAAA,EAAA;AAAA,wBAAC,GAAA,CAAA,KAAA,EAAA,EAAI,WAAU,yCAMb,EAAA,QAAA,kBAAA,IAAA;AAAA,UAAC,IAAA;AAAA,UAAA;AAAA,YACC,SAAS,MAAM;AACb,cAAI,IAAA,UAAA;AAAY,gBAAA,MAAA,CAAO,KAAK,MAAO,CAAA,QAAA,CAAS,KAAK,OAAQ,CAAA,OAAA,EAAS,EAAE,CAAC,CAAA,CAAA;AAAA,aACvE;AAAA,YACA,SAAW,EAAA,EAAA;AAAA,cACT,aAAa,uBAA0B,GAAA,SAAA;AAAA,cACvC,uDAAA;AAAA,aACF;AAAA,YAEA,QAAA,EAAA;AAAA,8BAAA,GAAA;AAAA,gBAAC,KAAA;AAAA,gBAAA;AAAA,kBACC,SAAW,EAAA,EAAA,CAAG,UAAY,EAAA,OAAA,IAAW,gBAAgB,gBAAgB,CAAA;AAAA,kBACrE,SAAS,MAAM;AACb,oBAAA,IAAI,CAAC,UAAY,EAAA;AACf,sBAAA,QAAA,CAAS,CAAC,KAAK,CAAA,CAAA;AAAA,qBACjB;AAAA,mBACF;AAAA,kBACD,QAAA,EAAA,IAAA;AAAA,iBAAA;AAAA,eAED;AAAA,cACC,CAAC,yBACC,IAAA,CAAA,KAAA,EAAA,EAAI,WAAW,EAAG,CAAA,OAAA,IAAW,eAAe,CAC3C,EAAA,QAAA,EAAA;AAAA,gCAAC,GAAA,CAAA,MAAA,EAAA,EAAK,SAAU,EAAA,EAAA,EAAG,QAAO,EAAA,SAAA,EAAA,CAAA;AAAA,gBAAO,GAAA;AAAA,gCAAE,GAAA,CAAA,MAAA,EAAA,EAAK,SAAU,EAAA,SAAA,EAAU,QAAI,EAAA,MAAA,EAAA,CAAA;AAAA,eAClE,EAAA,CAAA;AAAA,aAAA;AAAA,WAAA;AAAA,SAGN,EAAA,CAAA;AAAA,QACC,CAAC,KAAA,oBACC,IAAA,CAAA,KAAA,EAAA,EAAI,WAAU,+CACb,EAAA,QAAA,EAAA;AAAA,0BAAA,GAAA;AAAA,YAAC,QAAA;AAAA,YAAA;AAAA,cACC,OAAS,EAAA,gBAAA;AAAA,cACT,KAAA,EAAO,UAAU,MAAS,GAAA,MAAA;AAAA,cAC1B,SAAA,EAAW,GAAG,CAAC,UAAA,GAAa,QAAQ,MAAQ,EAAA,kBAAA,EAAoB,CAAC,OAAA,IAAW,eAAe,CAAA;AAAA,cAE1F,QAAA,EAAA,CAAC,OACA,mBAAA,IAAA,CAAC,MAAK,EAAA,EAAA,SAAA,EAAW,GAAG,6BAA+B,EAAA,UAAA,GAAa,EAAK,GAAA,MAAM,CACxE,EAAA,QAAA,EAAA;AAAA,gBAAU,OAAA,mBAAA,GAAA,CAAC,kBAAe,SAAU,EAAA,SAAA,EAAU,oBAAM,GAAA,CAAA,cAAA,EAAA,EAAe,WAAU,SAAU,EAAA,CAAA;AAAA,gBACvF,CAAC,UAAc,oBAAA,GAAA,CAAC,MAAM,EAAA,EAAA,QAAA,EAAA,OAAA,GAAU,SAAS,MAAO,EAAA,CAAA;AAAA,eACnD,EAAA,CAAA,mCAEE,QAAU,EAAA,YAAA,EAAA,CAAA;AAAA,aAAA;AAAA,WAEhB;AAAA,0BACA,IAAA;AAAA,YAAC,QAAA;AAAA,YAAA;AAAA,cACC,OAAA,EAAS,MAAM,YAAa,EAAA;AAAA,cAC5B,KAAM,EAAA,QAAA;AAAA,cACN,SAAW,EAAA,EAAA;AAAA,gBACT,6BAAA;AAAA,gBACA,CAAC,aAAa,KAAQ,GAAA,MAAA;AAAA,gBACtB,CAAC,OAAA,IAAW,CAAC,UAAA,GAAa,YAAe,GAAA,kBAAA;AAAA,eAC3C;AAAA,cAGA,QAAA,EAAA;AAAA,gCAAC,GAAA,CAAA,aAAA,EAAA,EAAc,WAAU,SAAU,EAAA,CAAA;AAAA,gBAClC,CAAC,UAAA,oBAAe,GAAA,CAAA,MAAA,EAAA,EAAK,QAAM,EAAA,QAAA,EAAA,CAAA;AAAA,eAAA;AAAA,aAAA;AAAA,WAC9B;AAAA,UACC,CAAC,UACA,oBAAA,IAAA;AAAA,YAAC,QAAA;AAAA,YAAA;AAAA,cACC,KAAM,EAAA,SAAA;AAAA,cACN,SAAU,EAAA,kDAAA;AAAA,cACV,OAAS,EAAA,aAAA;AAAA,cAET,QAAA,EAAA;AAAA,gCAAC,GAAA,CAAA,YAAA,EAAA,EAAa,WAAU,SAAU,EAAA,CAAA;AAAA,gCAClC,GAAA,CAAC,UAAK,QAAQ,EAAA,UAAA,EAAA,CAAA;AAAA,eAAA;AAAA,aAAA;AAAA,WAChB;AAAA,UAED,CAAC,UACA,oBAAA,IAAA;AAAA,YAAC,QAAA;AAAA,YAAA;AAAA,cACC,KAAM,EAAA,OAAA;AAAA,cACN,SAAW,EAAA,EAAA;AAAA,gBACT,6DAAA;AAAA,gBACA,CAAC,aAAa,KAAQ,GAAA,MAAA;AAAA,eACxB;AAAA,cACA,OAAS,EAAA,WAAA;AAAA,cAET,QAAA,EAAA;AAAA,gCAAC,GAAA,CAAA,QAAA,EAAA,EAAS,WAAU,SAAU,EAAA,CAAA;AAAA,gCAC9B,GAAA,CAAC,UAAK,QAAK,EAAA,OAAA,EAAA,CAAA;AAAA,eAAA;AAAA,aAAA;AAAA,WACb;AAAA,UAED,CAAC,UACA,oBAAA,IAAA;AAAA,YAAC,GAAA;AAAA,YAAA;AAAA,cACC,KAAM,EAAA,OAAA;AAAA,cACN,IAAA,EAAM,GAAGC,gBAAc,CAAA,0BAAA,CAAA;AAAA,cACvB,WAAW,EAAG,CAAA,8CAAA,EAAgD,CAAC,UAAA,GAAa,QAAQ,MAAM,CAAA;AAAA,cAE1F,QAAA,EAAA;AAAA,gCAAC,GAAA,CAAA,eAAA,EAAA,EAAgB,WAAU,SAAU,EAAA,CAAA;AAAA,gCACrC,GAAA,CAAC,UAAK,QAAK,EAAA,OAAA,EAAA,CAAA;AAAA,eAAA;AAAA,aAAA;AAAA,WACb;AAAA,SAsBJ,EAAA,CAAA;AAAA,OAAA;AAAA,KAAA;AAAA,GAEJ,CAAA;AAEJ;;AC1JA,SAAS,MAAA,CAAO,EAAE,MAAA,EAAU,EAAA;AAC1B,EAAA,2BACG,KAAI,EAAA,EAAA,SAAA,EAAU,+DACb,EAAA,QAAA,kBAAA,GAAA,CAAC,SAAI,SAAW,EAAA,EAAA,CAAG,sBAAwB,EAAA,MAAA,GAAS,gCAAgC,gBAAgB,CAAA,EAClG,QAAC,kBAAA,GAAA,CAAA,KAAA,EAAA,EAAI,GACP,CACF,EAAA,CAAA,CAAA;AAEJ;;ACRgB,SAAA,UAAA,CAAW,EAAE,GAAA,EAAO,EAAA;AAClC,EAAA,uBACG,IAAA,CAAA,KAAA,EAAA,EAAI,EAAG,EAAA,aAAA,EAAc,WAAU,uDAC9B,EAAA,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,KAAK,EAAA,EAAA,QAAA,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAKgD,CAAA,EAAA,CAAA;AAAA,IACrD,GAAI,CAAA,GAAA,CAAI,CAAC,CAAA,EAAG,CAAM,KAAA;AACjB,MAAM,MAAA,OAAA,GAAU,OAAQ,CAAA,CAAA,CAAE,OAAO,CAAA,CAAA;AACjC,MAAA,uBACG,IAAA,CAAA,KAAA,EAAA,EAAe,SAAW,EAAA,EAAA,CAAG,CAAE,CAAA,IAAA,KAAS,OAAW,IAAA,cAAA,EAAgB,CAAE,CAAA,IAAA,KAAS,WAAe,IAAA,WAAW,CACvG,EAAA,QAAA,EAAA;AAAA,wBAAA,GAAA,CAAC,MAAK,EAAA,EAAA,uBAAA,EAAyB,EAAE,MAAA,EAAQ,SAAW,EAAA,CAAA;AAAA,QACnD,CAAE,CAAA,KAAA,GAAQ,CAAK,EAAA,EAAA,CAAA,CAAE,KAAK,CAAM,CAAA,CAAA,GAAA,EAAA;AAAA,OAAA,EAAA,EAFrB,EAAE,EAGZ,CAAA,CAAA;AAAA,KAEH,CAAA;AAAA,GACH,EAAA,CAAA,CAAA;AAEJ,CAAA;AAEA,SAAS,QAAQ,SAAW,EAAA;AAC1B,EAAI,IAAA,YAAA,EAAc,iBAAiB,eAAiB,EAAA,eAAA,CAAA;AAGpD,EAAkB,eAAA,GAAA,yEAAA,CAAA;AAClB,EAAe,YAAA,GAAA,SAAA,CAAU,OAAQ,CAAA,eAAA,EAAiB,uDAAuD,CAAA,CAAA;AAGzG,EAAkB,eAAA,GAAA,gCAAA,CAAA;AAClB,EAAA,YAAA,GAAe,YAAa,CAAA,OAAA;AAAA,IAC1B,eAAA;AAAA,IACA,gEAAA;AAAA,GACF,CAAA;AAGA,EAAkB,eAAA,GAAA,0DAAA,CAAA;AAClB,EAAe,YAAA,GAAA,YAAA,CAAa,OAAQ,CAAA,eAAA,EAAiB,8CAA8C,CAAA,CAAA;AAEnG,EAAO,OAAA,YAAA,CAAA;AACT;;ACvCO,SAAS,QAAW,GAAA;AACzB,EAAA,MAAM,CAAC,IAAM,EAAA,OAAO,CAAI,GAAA,QAAA,CAAS,EAAE,CAAA,CAAA;AACnC,EAAA,SAAA,CAAU,MAAM;AAEd,IAAQ,OAAA,CAAA,EAAA,EAAI,EAAE,GAAK,EAAA,SAAA,EAAW,MAAM,CAAA,CACjC,IAAK,CAAA,CAAC,QAAa,KAAA,OAAA,CAAQ,CAAC,EAAE,IAAA,EAAM,WAAW,QAAS,EAAC,CAAC,CAAC,CAAA,CAC3D,KAAM,CAAA,CAAC,GAAQ,KAAA;AACd,MAAQ,OAAA,CAAA,GAAA,CAAI,sBAAsB,GAAG,CAAA,CAAA;AAAA,KACtC,CAAA,CAAA;AACH,IAAA,OAAO,MAAM;AACJ,KACT,CAAA;AAAA,GACF,EAAG,EAAE,CAAA,CAAA;AACL,EAAM,MAAA,OAAA,GAAU,OAAQ,CAAA,MAAM,IAAK,CAAA,IAAA,CAAK,SAAS,CAAC,CAAA,EAAG,CAAC,IAAI,CAAC,CAAA,CAAA;AAC3D,EAAA,MAAM,OAAU,GAAA,OAAA;AAAA,IACd,MACE,IAAA,CACG,KAAM,CAAA,CAAC,CACP,CAAA,GAAA,CAAI,CAAC,CAAA,KAAM,CAAE,CAAA,IAAI,CACjB,CAAA,IAAA,CAAK,GAAG,CAAA;AAAA,IACb,CAAC,IAAI,CAAA;AAAA,GACP,CAAA;AACA,EAAA,MAAM,OAAU,GAAA,OAAA,CAAQ,MAAM,OAAA,EAAS,SAAS,MAAO,CAAA,CAAC,CAAM,KAAA,CAAC,CAAC,CAAE,CAAA,QAAQ,CAAG,EAAA,CAAC,OAAO,CAAC,CAAA,CAAA;AACtF,EAAA,MAAM,QAAQ,OAAQ,CAAA,MAAM,SAAS,QAAS,CAAA,MAAA,CAAO,CAAC,CAAM,KAAA,CAAC,CAAE,CAAA,QAAA,IAAY,YAAY,CAAE,CAAA,IAAI,CAAC,CAAG,EAAA,CAAC,OAAO,CAAC,CAAA,CAAA;AAC1G,EAAM,MAAA,MAAA,GAAS,CAAC,CAAA,KAAM,OAAQ,CAAA,CAAC,CAAM,KAAA,CAAA,CAAE,MAAO,CAAA,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA;AAClD,EACE,uBAAA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,2BACb,EAAA,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,qCACb,EAAA,QAAA,kBAAA,IAAA,CAAC,KACC,EAAA,EAAA,QAAA,EAAA;AAAA,sBAAA,GAAA,CAAC,UAAM,QAAY,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA;AAAA,MAClB,IAAM,EAAA,GAAA,CAAI,CAAC,CAAA,EAAG,CAAM,KAAA;AACnB,QAAI,IAAA,CAAA,GAAI,IAAK,CAAA,MAAA,GAAS,CAAG,EAAA;AACvB,UAAA,4BACGC,UACC,EAAA,EAAA,QAAA,EAAA;AAAA,4BAAA,GAAA,CAAC,UAAK,SAAU,EAAA,0BAAA,EAA2B,OAAS,EAAA,MAAM,QAAQ,CAACC,EAAAA,KAAMA,EAAE,CAAA,KAAA,CAAM,GAAG,CAAI,GAAA,CAAC,CAAC,CAAA,EACvF,YAAE,IACL,EAAA,CAAA;AAAA,4BACA,GAAA,CAAC,UAAK,QAAC,EAAA,GAAA,EAAA,CAAA;AAAA,WAAA,EAAA,EAJM,CAKf,CAAA,CAAA;AAAA,SAEG,MAAA;AACL,UAAA,2BACG,MAAK,EAAA,EAAA,SAAA,EAAU,0BACb,EAAA,QAAA,EAAA,CAAA,CAAE,QAD2C,CAEhD,CAAA,CAAA;AAAA,SAEJ;AAAA,OACD,CAAA;AAAA,sBACD,GAAA,CAAC,UAAM,QAAK,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AAAA,KAAA,EACd,CACF,EAAA,CAAA;AAAA,oBACA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,eACZ,EAAA,QAAA,EAAA;AAAA,MAAC,CAAA,OAAA,EAAS,UAAU,CAAC,KAAA,EAAO,0BAAW,GAAA,CAAA,MAAA,EAAA,EAAK,SAAU,EAAA,eAAA,EAAgB,QAAY,EAAA,cAAA,EAAA,CAAA;AAAA,MAClF,SAAS,GAAI,CAAA,CAAC,CAAG,EAAA,CAAA,yBACf,KAAI,EAAA,EAAA,SAAA,EAAU,gBAAyB,EAAA,OAAA,EAAS,MAAM,MAAO,CAAA,CAAC,GAC5D,QAAE,EAAA,CAAA,CAAA,IAAA,EAAA,EADgC,CAErC,CACD,CAAA;AAAA,MACA,KAAO,EAAA,GAAA,CAAI,CAAC,CAAA,EAAG,CACd,qBAAA,GAAA;AAAA,QAAC,KAAA;AAAA,QAAA;AAAA,UACC,SAAU,EAAA,0CAAA;AAAA,UAEV,OAAA,EAAS,YAAY,QAAS,CAAA,CAAA,EAAG,OAAO,CAAI,CAAA,EAAA,CAAA,CAAE,IAAI,CAAE,CAAA,CAAA;AAAA,UAEnD,QAAE,EAAA,CAAA,CAAA,IAAA;AAAA,SAAA;AAAA,QAHE,CAAA;AAAA,OAKR,CAAA;AAAA,KACH,EAAA,CAAA;AAAA,GACF,EAAA,CAAA,CAAA;AAEJ;;ACzEA,MAAM,gBAAA,GAAmBC,MAAU,IAChC,CAAA,MAAA,CAAO,CAAC,EAAE,IAAA,EAAM,aAAkB,KAAA,IAAA,IAAQ,CAAC,IAAK,CAAA,UAAA,CAAW,GAAG,CAAK,IAAA,CAAC,CAAC,WAAW,CAAA,CAChF,IAAK,CAAA,CAAC,CAAG,EAAA,CAAA;AAAA;AAAA,EAA8D,CAAE,CAAA,IAAA,CAAK,aAAc,CAAA,CAAA,CAAE,IAAI,CAAA;AAAA,CAAC,CAAA,CAAA;AAEtG,MAAM,YAAA,GAAe,CAAC,IAAS,KAAA;AAC7B,EAAI,IAAA,GAAA,GAAM,QAAS,CAAA,aAAA,CAAc,KAAK,CAAA,CAAA;AACtC,EAAA,GAAA,CAAI,SAAY,GAAA,IAAA,CAAA;AAChB,EAAO,OAAA,GAAA,CAAI,WAAe,IAAA,GAAA,CAAI,SAAa,IAAA,EAAA,CAAA;AAC7C,CAAA,CAAA;AAEO,SAAS,SAAY,GAAA;AAC1B,EACE,uBAAA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,yDACb,EAAA,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,SAAI,SAAU,EAAA,8DAAA,EACZ,2BAAiB,GAAI,CAAA,CAAC,OAAO,CAC5B,qBAAA,IAAA;AAAA,MAAC,GAAA;AAAA,MAAA;AAAA,QAEC,SAAU,EAAA,uDAAA;AAAA,QACV,SAAS,MAAM;AACb,UAAA,MAAM,EAAK,GAAA,QAAA,CAAS,cAAe,CAAA,CAAA,IAAA,EAAO,CAAC,CAAE,CAAA,CAAA,CAAA;AAC7C,UAAM,MAAA,SAAA,GAAY,QAAS,CAAA,cAAA,CAAe,qBAAqB,CAAA,CAAA;AAC/D,UAAU,SAAA,CAAA,QAAA,CAAS,CAAG,EAAA,EAAA,CAAG,SAAS,CAAA,CAAA;AAAA,SACpC;AAAA,QAEC,QAAA,EAAA;AAAA,UAAM,KAAA,CAAA,IAAA;AAAA,UAAK,GAAA;AAAA,SAAA;AAAA,OAAA;AAAA,MARP,CAAA;AAAA,KAUR,CACH,EAAA,CAAA;AAAA,oBACA,GAAA,CAAC,SAAI,SAAU,EAAA,6DAAA,EAA8D,IAAG,qBAC9E,EAAA,QAAA,kBAAA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,yCACb,EAAA,QAAA,EAAA;AAAA,sBAAA,GAAA,CAAC,QAAG,QAAa,EAAA,eAAA,EAAA,CAAA;AAAA,sBACjB,GAAA,CAAC,OAAE,QAGH,EAAA,uKAAA,EAAA,CAAA;AAAA,MACC,iBAAiB,GAAI,CAAA,CAAC,KAAO,EAAA,CAAA,0BAC3B,SACC,EAAA,EAAA,QAAA,EAAA;AAAA,wBAAA,GAAA,CAAC,QAAG,EAAI,EAAA,CAAA,IAAA,EAAO,CAAC,CAAA,CAAA,EAAK,gBAAM,IAAK,EAAA,CAAA;AAAA,QAC/B,CAAC,CAAC,KAAM,CAAA,aAAA,yBACN,GAAE,EAAA,EAAA,QAAA,EAAA;AAAA,UAAA,YAAA;AAAA,0BACS,GAAA,CAAC,MAAM,EAAA,EAAA,QAAA,EAAA,KAAA,CAAM,aAAc,EAAA,CAAA;AAAA,SACvC,EAAA,CAAA;AAAA,4BAGD,GAAE,EAAA,EAAA,uBAAA,EAAyB,EAAE,MAAQ,EAAA,KAAA,CAAM,aAAe,EAAA,CAAA;AAAA,wBAC1D,GAAA,CAAA,IAAA,EAAA,EACE,QAAM,EAAA,KAAA,CAAA,MAAA,EAAQ,GAAI,CAAA,CAAC,EAAE,IAAA,EAAM,IAAM,EAAA,WAAA,EAAeC,EAAAA,EAAAA,0BAC9C,IACE,EAAA,EAAA,QAAA,EAAA;AAAA,UAAA,IAAA;AAAA,UAAK,KAAA;AAAA,UAAI,IAAA,CAAK,KAAO,EAAA,IAAA,CAAK,KAAK,CAAA;AAAA,UAAE,GAAA;AAAA,UAAE,8BAAgB,IAAA,CAAA,QAAA,EAAA,EAAA,QAAA,EAAA;AAAA,YAAA,KAAA;AAAA,YAAI,aAAa,WAAW,CAAA;AAAA,WAAA,EAAE,CAAM,GAAA,EAAA;AAAA,SADjFA,EAAAA,EAAAA,EAET,CACD,CACH,EAAA,CAAA;AAAA,QACC,KAAA,CAAM,QAAU,EAAA,GAAA,CAAI,CAAC,OAAA,EAAS,sBAC5B,GAAA,CAAA,KAAA,EAAA,EAAa,QAAJ,EAAA,OAAA,EAAA,EAAA,CAAY,CACvB,CAAA;AAAA,OAAA,EAAA,EAlBW,CAmBd,CACD,CAAA;AAAA,KAAA,EACH,CACF,EAAA,CAAA;AAAA,GACF,EAAA,CAAA,CAAA;AAEJ;;AC5DO,SAAS,WAAY,CAAA,EAAE,KAAO,EAAA,QAAA,EAAU,OAAS,EAAA;AACtD,EAAA,uBACG,GAAA,CAAA,KAAA,EAAA,EAAI,SAAU,EAAA,eAAA,EACZ,iBAAO,OAAQ,CAAA,KAAK,CAAE,CAAA,GAAA,CAAI,CAAC,CAAC,GAAA,EAAK,KAAK,CAAA,EAAG,GAAG,GAC3C,qBAAA,GAAA;AAAA,IAAC,QAAA;AAAA,IAAA;AAAA,MAEC,OAAA,EAAS,MAAM,QAAA,CAAS,GAAG,CAAA;AAAA,MAC3B,SAAW,EAAA,EAAA;AAAA,QACT,qCAAA;AAAA;AAAA;AAAA;AAAA,QAIA,KAAA,KAAU,MAAM,mBAAsB,GAAA,oBAAA;AAAA,OACxC;AAAA,MAEC,gBAAM,WAAY,EAAA;AAAA,KAAA;AAAA,IAVd,GAAA;AAAA,GAYR,CACH,EAAA,CAAA,CAAA;AAEJ;;AClBA,SAAS,QAAS,CAAA,EAAE,KAAO,EAAA,KAAA,EAAO,UAAY,EAAA;AAC5C,EAAA,4BACG,OACC,EAAA,EAAA,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,OAAM,EAAA,EAAA,IAAA,EAAK,UAAW,EAAA,OAAA,EAAS,OAAO,QAAoB,EAAA,CAAA;AAAA,IAC1D,GAAM,GAAA,KAAA;AAAA,GACT,EAAA,CAAA,CAAA;AAEJ,CAAA;AAEA,SAAS,WAAY,CAAA,EAAE,KAAO,EAAA,OAAA,EAAS,UAAY,EAAA;AACjD,EACE,uBAAA,GAAA;AAAA,IAAC,QAAA;AAAA,IAAA;AAAA,MACC,SAAU,EAAA,8CAAA;AAAA,MACV,KAAA;AAAA,MACA,UAAU,CAAC,CAAA,KAAM,QAAS,CAAA,CAAA,CAAE,OAAO,KAAK,CAAA;AAAA,MAEvC,iBAAO,OAAQ,CAAA,OAAO,EAAE,GAAI,CAAA,CAAC,CAAC,CAAG,EAAA,KAAK,CACrC,qBAAA,GAAA,CAAC,YAAe,SAAU,EAAA,eAAA,EAAgB,OAAO,CAC9C,EAAA,QAAA,EAAA,KAAA,EAAA,EADU,CAEb,CACD,CAAA;AAAA,KAAA;AAAA,GACH,CAAA;AAEJ,CAAA;AAEA,SAAS,YAAA,CAAa,EAAE,KAAO,EAAA,QAAA,EAAU,OAAO,CAAG,EAAA,GAAG,MAAQ,EAAA;AAC5D,EACE,uBAAA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,sBACb,EAAA,QAAA,EAAA;AAAA,oBAAA,GAAA;AAAA,MAAC,OAAA;AAAA,MAAA;AAAA,QACC,SAAU,EAAA,UAAA;AAAA,QACV,IAAK,EAAA,OAAA;AAAA,QACL,KAAA;AAAA,QACA,IAAA;AAAA,QACA,QAAA,EAAU,CAAC,CAAM,KAAA,QAAA,CAAS,OAAO,CAAE,CAAA,MAAA,CAAO,KAAK,CAAC,CAAA;AAAA,QAC/C,GAAG,IAAA;AAAA,OAAA;AAAA,KACN;AAAA,oBACA,GAAA;AAAA,MAAC,OAAA;AAAA,MAAA;AAAA,QACC,IAAK,EAAA,QAAA;AAAA,QACL,KAAA;AAAA,QACA,IAAA;AAAA,QACA,SAAU,EAAA,+BAAA;AAAA,QACV,QAAA,EAAU,CAAC,CAAM,KAAA,QAAA,CAAS,OAAO,CAAE,CAAA,MAAA,CAAO,KAAK,CAAC,CAAA;AAAA,OAAA;AAAA,KAClD;AAAA,GACF,EAAA,CAAA,CAAA;AAEJ,CAAA;AAEA,SAAS,QAAS,CAAA,EAAE,KAAO,EAAA,QAAA,EAAY,EAAA;AACrC,EACE,uBAAA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,YACb,EAAA,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,WAAO,QAAM,EAAA,KAAA,EAAA,CAAA;AAAA,IACb,QAAA;AAAA,GACH,EAAA,CAAA,CAAA;AAEJ,CAAA;AAEA,MAAM,YAAe,GAAA,MAAA,CAAO,WAAY,CAAA,MAAA,CAAO,KAAK,MAAM,CAAA,CAAE,GAAI,CAAA,CAAC,CAAM,KAAA,CAAC,CAAG,EAAA,CAAC,CAAC,CAAC,CAAA,CAAA;AAC9E,MAAM,iBAAoB,GAAA;AAAA,EACxB,SAAW,EAAA,WAAA;AAAA,EACX,eAAiB,EAAA,iBAAA;AAAA,EACjB,KAAO,EAAA,OAAA;AAAA,EACP,UAAY,EAAA,cAAA;AAAA,EACZ,SAAW,EAAA,WAAA;AAAA,EACX,kBAAoB,EAAA,kBAAA;AAAA,EACpB,QAAU,EAAA,UAAA;AAAA,EACV,mBAAqB,EAAA,mBAAA;AAAA,EACrB,QAAU,EAAA,UAAA;AAAA,EACV,KAAO,EAAA,OAAA;AACT,CAAA,CAAA;AAEO,SAAS,WAAc,GAAA;AAC5B,EAAM,MAAA;AAAA,IACJ,KAAA;AAAA,IACA,WAAA;AAAA,IACA,sBAAA;AAAA,IACA,4BAAA;AAAA,IACA,uBAAA;AAAA,IACA,uBAAA;AAAA,IACA,gBAAA;AAAA,IACA,cAAA;AAAA,IACA,qBAAA;AAAA,IACA,QAAA;AAAA,IACA,UAAA;AAAA,IACA,aAAA;AAAA,MACE,WAAY,EAAA,CAAA;AAEhB,EACE,uBAAA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,+BACb,EAAA,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,YAAS,KAAM,EAAA,OAAA,EACd,QAAC,kBAAA,GAAA,CAAA,WAAA,EAAA,EAAY,SAAS,YAAc,EAAA,KAAA,EAAO,KAAO,EAAA,QAAA,EAAU,CAACC,MAAU,KAAA,WAAA,CAAY,OAAO,OAASA,EAAAA,MAAK,GAAG,CAC7G,EAAA,CAAA;AAAA,oBACA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,uCACb,EAAA,QAAA,EAAA;AAAA,sBAAC,GAAA,CAAA,QAAA,EAAA,EAAS,OAAM,aACd,EAAA,QAAA,kBAAA,GAAA;AAAA,QAAC,WAAA;AAAA,QAAA;AAAA,UACC,OAAS,EAAA,iBAAA;AAAA,UACT,KAAO,EAAA,UAAA;AAAA,UACP,UAAU,CAACC,WAAAA,KAAe,WAAY,CAAA,MAAA,CAAO,cAAcA,WAAU,CAAA;AAAA,SAAA;AAAA,OAEzE,EAAA,CAAA;AAAA,sBACA,GAAA,CAAC,QAAS,EAAA,EAAA,KAAA,EAAM,WACd,EAAA,QAAA,kBAAA,GAAA;AAAA,QAAC,YAAA;AAAA,QAAA;AAAA,UACC,KAAO,EAAA,QAAA;AAAA,UACP,UAAU,CAACC,SAAAA,KAAa,WAAY,CAAA,MAAA,CAAO,YAAYA,SAAQ,CAAA;AAAA,UAC/D,GAAK,EAAA,EAAA;AAAA,UACL,GAAK,EAAA,EAAA;AAAA,UACL,IAAM,EAAA,CAAA;AAAA,SAAA;AAAA,OAEV,EAAA,CAAA;AAAA,KACF,EAAA,CAAA;AAAA,oBACA,GAAA,CAAC,QAAS,EAAA,EAAA,KAAA,EAAM,aACd,EAAA,QAAA,kBAAA,GAAA;AAAA,MAAC,WAAA;AAAA,MAAA;AAAA,QACC,KAAO,EAAA,WAAA;AAAA,QACP,UAAU,CAACC,YAAAA,KAAgB,WAAY,CAAA,MAAA,CAAO,eAAeA,YAAW,CAAA;AAAA,QACxE,KAAA,EAAO,EAAE,UAAY,EAAA,YAAA,EAAc,KAAK,KAAO,EAAA,KAAA,EAAO,OAAS,EAAA,MAAA,EAAQ,QAAS,EAAA;AAAA,OAAA;AAAA,KAEpF,EAAA,CAAA;AAAA,oBACA,GAAA,CAAC,QAAS,EAAA,EAAA,KAAA,EAAM,gBACd,EAAA,QAAA,kBAAA,GAAA;AAAA,MAAC,WAAA;AAAA,MAAA;AAAA,QACC,KAAO,EAAA,aAAA;AAAA,QACP,UAAU,CAAC,KAAA,KAAU,WAAY,CAAA,MAAA,CAAO,iBAAiB,KAAK,CAAA;AAAA,QAC9D,KAAO,EAAA,EAAE,MAAQ,EAAA,QAAA,EAAU,OAAO,OAAQ,EAAA;AAAA,OAAA;AAAA,KAE9C,EAAA,CAAA;AAAA,oBACA,IAAA,CAAC,QAAS,EAAA,EAAA,KAAA,EAAM,eACd,EAAA,QAAA,EAAA;AAAA,sBAAA,GAAA;AAAA,QAAC,QAAA;AAAA,QAAA;AAAA,UACC,KAAM,EAAA,sBAAA;AAAA,UACN,QAAA,EAAU,CAAC,OAAY,KAAA,WAAA,CAAY,OAAO,wBAA0B,EAAA,OAAA,CAAQ,OAAO,OAAO,CAAA;AAAA,UAC1F,KAAO,EAAA,sBAAA;AAAA,SAAA;AAAA,OACT;AAAA,sBACA,GAAA;AAAA,QAAC,QAAA;AAAA,QAAA;AAAA,UACC,KAAM,EAAA,uBAAA;AAAA,UACN,QAAA,EAAU,CAAC,OAAY,KAAA,WAAA,CAAY,OAAO,yBAA2B,EAAA,OAAA,CAAQ,OAAO,OAAO,CAAA;AAAA,UAC3F,KAAO,EAAA,uBAAA;AAAA,SAAA;AAAA,OACT;AAAA,sBACA,GAAA;AAAA,QAAC,QAAA;AAAA,QAAA;AAAA,UACC,KAAM,EAAA,0BAAA;AAAA,UACN,QAAA,EAAU,CAAC,OAAY,KAAA,WAAA,CAAY,OAAO,8BAAgC,EAAA,OAAA,CAAQ,OAAO,OAAO,CAAA;AAAA,UAChG,KAAO,EAAA,4BAAA;AAAA,SAAA;AAAA,OACT;AAAA,sBACA,GAAA;AAAA,QAAC,QAAA;AAAA,QAAA;AAAA,UACC,KAAM,EAAA,wBAAA;AAAA,UACN,QAAA,EAAU,CAAC,OAAY,KAAA,WAAA,CAAY,OAAO,yBAA2B,EAAA,OAAA,CAAQ,OAAO,OAAO,CAAA;AAAA,UAC3F,KAAO,EAAA,uBAAA;AAAA,SAAA;AAAA,OACT;AAAA,sBACA,GAAA;AAAA,QAAC,QAAA;AAAA,QAAA;AAAA,UACC,KAAM,EAAA,mCAAA;AAAA,UACN,QAAA,EAAU,CAAC,OAAY,KAAA,WAAA,CAAY,OAAO,kBAAoB,EAAA,OAAA,CAAQ,OAAO,OAAO,CAAA;AAAA,UACpF,KAAO,EAAA,gBAAA;AAAA,SAAA;AAAA,OACT;AAAA,sBACA,GAAA;AAAA,QAAC,QAAA;AAAA,QAAA;AAAA,UACC,KAAM,EAAA,sBAAA;AAAA,UACN,QAAA,EAAU,CAAC,OAAY,KAAA,WAAA,CAAY,OAAO,uBAAyB,EAAA,OAAA,CAAQ,OAAO,OAAO,CAAA;AAAA,UACzF,KAAO,EAAA,qBAAA;AAAA,SAAA;AAAA,OACT;AAAA,sBACA,GAAA;AAAA,QAAC,QAAA;AAAA,QAAA;AAAA,UACC,KAAM,EAAA,+BAAA;AAAA,UACN,QAAA,EAAU,CAAC,OAAY,KAAA,WAAA,CAAY,OAAO,gBAAkB,EAAA,OAAA,CAAQ,OAAO,OAAO,CAAA;AAAA,UAClF,KAAO,EAAA,cAAA;AAAA,SAAA;AAAA,OACT;AAAA,KACF,EAAA,CAAA;AAAA,oBACC,GAAA,CAAA,QAAA,EAAA,EAAS,KAAM,EAAA,UAAA,EAAW,QAAsC,EAAA,wCAAA,EAAA,CAAA;AAAA,oBACjE,GAAA,CAAC,QAAS,EAAA,EAAA,KAAA,EAAM,gBACd,EAAA,QAAA,kBAAA,GAAA;AAAA,MAAC,QAAA;AAAA,MAAA;AAAA,QACC,SAAU,EAAA,6DAAA;AAAA,QACV,SAAS,MAAM;AACb,UAAI,IAAA,OAAA,CAAQ,OAAO,CAAG,EAAA;AACpB,YAAA,WAAA,CAAY,IAAI,eAAe,CAAA,CAAA;AAAA,WACjC;AAAA,SACF;AAAA,QACD,QAAA,EAAA,0BAAA;AAAA,OAAA;AAAA,KAGH,EAAA,CAAA;AAAA,GACF,EAAA,CAAA,CAAA;AAEJ;;AC/KwB,SAAA,kBAAA,CAAmB,EAAE,UAAA,EAAc,EAAA;AACzD,EAAI,IAAA,aAAA,GAAgB,MAAM,SAAU,EAAA,CAAA;AACpC,EAAA,MAAM,CAAC,WAAA,EAAa,cAAc,CAAA,GAAI,SAAS,KAAK,CAAA,CAAA;AACpD,EAAM,MAAA,QAAA,GAAW,YAAY,YAAY;AACvC,IAAA,IAAI,CAAC,aAAA,CAAc,OAAQ,CAAA,KAAA,EAAO,MAAQ,EAAA;AACxC,MAAA,OAAA;AAAA,KACF;AACA,IAAA,cAAA,CAAe,IAAI,CAAA,CAAA;AACnB,IAAA,MAAM,kBAAkB,mBAAqB,EAAA,aAAA,CAAc,QAAQ,KAAK,CAAA,CAAE,KAAK,MAAM;AACnF,MAAA,qBAAA,CAAsB,qBAAqB,MAAM;AAC/C,QAAW,UAAA,EAAA,CAAA;AACX,QAAA,cAAA,CAAe,KAAK,CAAA,CAAA;AAAA,OACrB,CAAA,CAAA;AAAA,KACF,CAAA,CAAA;AAAA,GACF,CAAA,CAAA;AAED,EACE,uBAAA,IAAA;AAAA,IAAC,OAAA;AAAA,IAAA;AAAA,MACC,KAAA,EAAO,EAAE,UAAA,EAAY,QAAS,EAAA;AAAA,MAC9B,SAAU,EAAA,8GAAA;AAAA,MAEV,QAAA,EAAA;AAAA,wBAAA,GAAA;AAAA,UAAC,OAAA;AAAA,UAAA;AAAA,YACC,QAAU,EAAA,WAAA;AAAA,YACV,GAAK,EAAA,aAAA;AAAA,YACL,EAAG,EAAA,YAAA;AAAA,YACH,KAAA,EAAO,EAAE,OAAA,EAAS,MAAO,EAAA;AAAA,YACzB,IAAK,EAAA,MAAA;AAAA,YACL,SAAU,EAAA,EAAA;AAAA,YACV,eAAgB,EAAA,EAAA;AAAA,YAChB,QAAQ,EAAA,IAAA;AAAA,YACR,MAAO,EAAA,SAAA;AAAA,YACP,UAAU,MAAM;AACd,cAAS,QAAA,EAAA,CAAA;AAAA,aACX;AAAA,WAAA;AAAA,SACF;AAAA,QACC,cAAc,cAAiB,GAAA,eAAA;AAAA,OAAA;AAAA,KAAA;AAAA,GAClC,CAAA;AAEJ;;AClCA,MAAM,aAAa,CAAC,OAAA,KAClB,KAAM,CAAA,OAAA,CAAQ,OAAO,CAAI,GAAA,OAAA,CAAQ,MAAS,GAAA,OAAO,YAAY,QAAW,GAAA,MAAA,CAAO,MAAO,CAAA,OAAO,EAAE,MAAS,GAAA,CAAA,CAAA;AAEnG,SAAS,SAAY,GAAA;AAC1B,EAAM,MAAA,MAAA,GAAS,SAAS,QAAQ,CAAA,CAAA;AAChC,EAAM,MAAA,EAAE,YAAa,EAAA,GAAI,WAAY,EAAA,CAAA;AACrC,EAAM,MAAA,YAAA,GAAe,QAAQ,MAAM;AACjC,IAAA,IAAI,QAAW,GAAA,MAAA,CAAO,OAAQ,CAAA,MAAM,EAAE,MAAO,CAAA,CAAC,CAAC,GAAG,CAAM,KAAA,CAAC,GAAI,CAAA,UAAA,CAAW,GAAG,CAAC,CAAA,CAAA;AAC5E,IAAA,IAAI,CAAC,MAAQ,EAAA;AACX,MAAA,OAAO,EAAC,CAAA;AAAA,KACV;AACA,IAAA,IAAI,iBAAiB,MAAQ,EAAA;AAC3B,MAAO,OAAA,QAAA,CAAS,MAAO,CAAA,CAAC,CAAC,GAAA,EAAK,EAAE,IAAA,EAAM,CAAA,KAAM,CAAC,IAAA,CAAK,OAAO,CAAA,CAAA;AAAA,KAC3D;AACA,IAAA,IAAI,iBAAiB,OAAS,EAAA;AAC5B,MAAA,OAAO,QAAS,CAAA,MAAA,CAAO,CAAC,CAAC,GAAG,EAAE,IAAA,EAAM,CAAA,KAAM,IAAK,CAAA,IAAA,KAAS,QAAY,IAAA,IAAA,CAAK,QAAQ,eAAe,CAAA,CAAA;AAAA,KAClG;AACA,IAAA,IAAI,iBAAiB,SAAW,EAAA;AAC9B,MAAA,OAAO,QAAS,CAAA,MAAA,CAAO,CAAC,CAAC,GAAG,EAAE,IAAA,EAAM,CAAA,KAAM,IAAK,CAAA,IAAA,KAAS,QAAY,IAAA,IAAA,CAAK,QAAQ,eAAe,CAAA,CAAA;AAAA,KAClG;AACA,IAAA,IAAI,iBAAiB,QAAU,EAAA;AAC7B,MAAA,OAAO,SAAS,MAAO,CAAA,CAAC,CAAC,CAAA,EAAG,EAAE,IAAK,EAAC,CAAM,KAAA,CAAC,SAAS,WAAW,CAAA,CAAE,QAAS,CAAA,IAAA,CAAK,IAAI,CAAC,CAAA,CAAA;AAAA,KACtF;AACA,IAAO,OAAA,QAAA,CAAA;AAAA,GACN,EAAA,CAAC,MAAQ,EAAA,YAAY,CAAC,CAAA,CAAA;AAEzB,EAAA,MAAM,UAAU,MAAO,EAAA,CAAA;AAEvB,EAAA,QAAA,CAAS,WAAW,MAAM;AACxB,IAAA,MAAM,IAAI,OAAQ,CAAA,OAAA,CAAA;AAClB,IAAA,OAAA,CAAQ,OAAU,GAAA,KAAA,CAAA,CAAA;AAClB,IAAG,CAAA,EAAA,IAAA,CAAK,CAAC,GAAQ,KAAA;AACf,MAAA,GAAA,EAAK,IAAK,CAAA,eAAA,EAAkB,CAAA,WAAA,GAAc,IAAI,CAAA,CAAA;AAAA,KAC/C,CAAA,CAAA;AAAA,GACF,CAAA,CAAA;AACD,EAAA,uBACG,IAAA,CAAA,KAAA,EAAA,EAAI,EAAG,EAAA,YAAA,EAAa,WAAU,iEAC7B,EAAA,QAAA,EAAA;AAAA,oBAAC,IAAA,CAAA,KAAA,EAAA,EAAI,WAAU,kCACb,EAAA,QAAA,EAAA;AAAA,sBAAA,GAAA;AAAA,QAAC,WAAA;AAAA,QAAA;AAAA,UACC,KAAO,EAAA,YAAA;AAAA,UACP,UAAU,CAAC,KAAA,KAAU,WAAY,CAAA,MAAA,CAAO,gBAAgB,KAAK,CAAA;AAAA,UAC7D,KAAO,EAAA;AAAA,YACL,OAAS,EAAA,SAAA;AAAA,YACT,KAAO,EAAA,eAAA;AAAA,YACP,MAAQ,EAAA,QAAA;AAAA,YACR,IAAM,EAAA,MAAA;AAAA,WACR;AAAA,SAAA;AAAA,OACD;AAAA,sBACD,GAAA,CAAC,sBAAmB,UAAY,EAAA,MAAM,YAAY,MAAO,CAAA,cAAA,EAAgB,MAAM,CAAG,EAAA,CAAA;AAAA,KACpF,EAAA,CAAA;AAAA,oBACA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,sEACZ,EAAA,QAAA,EAAA;AAAA,MAAa,YAAA,CAAA,GAAA,CAAI,CAAC,CAAC,IAAA,EAAM,EAAE,IAAM,EAAA,SAAA,EAAW,CAC3C,qBAAA,IAAA;AAAA,QAAC,MAAA;AAAA,QAAA;AAAA,UAEC,SAAU,EAAA,iCAAA;AAAA,UACV,aAAa,YAAY;AACvB,YAAA,MAAM,MAAM,eAAgB,EAAA,CAAA;AAC5B,YAAA,MAAM,MAAS,GAAA;AAAA,cACb,IAAA,EAAM,CAAC,OAAS,EAAA,WAAW,EAAE,QAAS,CAAA,IAAA,CAAK,IAAI,CAAA,GAAI,IAAO,GAAA,KAAA,CAAA;AAAA,cAC1D,CAAG,EAAA,IAAA;AAAA,cACH,IAAM,EAAA,CAAA;AAAA,cACN,OAAS,EAAA,GAAA;AAAA,aACX,CAAA;AACA,YAAM,MAAA,IAAA,GAAO,IAAI,WAAc,GAAA,IAAA,CAAA;AAC/B,YAAA,MAAM,OAAU,GAAA,MAAM,OAAQ,CAAA,OAAA,EAAS,MAAM,UAAW,EAAA,CAAA;AACxD,YAAA,OAAA,CAAQ,UAAU,OAAQ,CAAA,OAAA,CAAQ,UAAU,IAAM,EAAA,MAAA,EAAQ,OAAO,CAAC,CAAA,CAAA;AAClE,YAAQ,OAAA,CAAA,OAAA,CAAQ,IAAK,CAAA,CAAC,GAAQ,KAAA;AAC5B,cAAA,oBAAA,CAAqB,KAAK,IAAI,CAAA,CAAA;AAAA,aAC/B,CAAA,CAAA;AAAA,WACH;AAAA,UAEC,QAAA,EAAA;AAAA,YAAA,GAAA;AAAA,YACA,IAAA;AAAA,YACA,IAAA,EAAM,SAAS,QAAW,GAAA,CAAA,CAAA,EAAI,WAAW,IAAK,CAAA,OAAO,CAAC,CAAM,CAAA,CAAA,GAAA,EAAA;AAAA,YAC5D,MAAM,IAAS,KAAA,WAAA,GAAc,IAAI,IAAK,CAAA,KAAA,CAAM,MAAM,CAAM,CAAA,CAAA,GAAA,EAAA;AAAA,WAAA;AAAA,SAAA;AAAA,QArBpD,IAAA;AAAA,OAuBR,CAAA;AAAA,MACA,CAAC,YAAa,CAAA,MAAA,GAAS,gDAAmD,GAAA,EAAA;AAAA,KAC7E,EAAA,CAAA;AAAA,GACF,EAAA,CAAA,CAAA;AAEJ;;ACvFA,MAAM,EAAE,QAAA,EAAa,GAAA,MAAA,CAAA,OAAA,CAAA,UAAA,CAAA,GAAA,CAAA,MAAA,CAAA,YAAA,CAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,qBAAA,CAAA,eAAA,CAAA,SAAA,CAAA,EAAA,EAAA,CAAA,EAAA,OAAA,CAAA,GAAA,CAAA,CAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;AACrB,MAAM,cAAA,GAAiB,SAAS,QAAS,CAAA,GAAG,IAAI,QAAS,CAAA,KAAA,CAAM,CAAG,EAAA,CAAA,CAAE,CAAI,GAAA,QAAA,CAAA;AAExD,SAAA,UAAA,CAAW,EAAE,OAAA,EAAW,EAAA;AACtC,EACE,uBAAA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,gEACb,EAAA,QAAA,EAAA;AAAA,oBAAA,IAAA,CAAC,IACC,EAAA,EAAA,QAAA,EAAA;AAAA,sBAAA,GAAA,CAAC,MAAK,EAAA,EAAA,SAAA,EAAW,EAAG,CAAA,uCAAuC,GAAG,QAAE,EAAA,IAAA,EAAA,CAAA;AAAA,MAAO,UAAA;AAAA,KACzE,EAAA,CAAA;AAAA,yBACC,GAAE,EAAA,EAAA,QAAA,EAAA;AAAA,MAAA,iBAAA;AAAA,sBACe,GAAA,CAAA,MAAA,EAAA,EAAK,SAAU,EAAA,WAAA,EAAY,QAAO,EAAA,SAAA,EAAA,CAAA;AAAA,MAAO,iKAAA;AAAA,0BAExD,IAAG,EAAA,EAAA,CAAA;AAAA,0BACH,IAAG,EAAA,EAAA,CAAA;AAAA,sBACH,GAAA,CAAA,MAAA,EAAA,EAAK,SAAU,EAAA,WAAA,EAAY,QAAW,EAAA,aAAA,EAAA,CAAA;AAAA,MAAO,KAAA;AAAA,sBAAI,GAAA,CAAA,MAAA,EAAA,EAAK,SAAU,EAAA,WAAA,EAAY,QAAmB,EAAA,qBAAA,EAAA,CAAA;AAAA,MAAO,IAAA;AAAA,MAAG,GAAA;AAAA,sBACzG,GAAA,CAAA,MAAA,EAAA,EAAK,SAAU,EAAA,WAAA,EAAY,QAAa,EAAA,eAAA,EAAA,CAAA;AAAA,0BACxC,IAAG,EAAA,EAAA,CAAA;AAAA,MAAE,uCAAA;AAAA,sBACgC,GAAA,CAAA,MAAA,EAAA,EAAK,SAAU,EAAA,WAAA,EAAY,QAAO,EAAA,SAAA,EAAA,CAAA;AAAA,MAAO,GAAA;AAAA,KACjF,EAAA,CAAA;AAAA,yBACC,GAAE,EAAA,EAAA,QAAA,EAAA;AAAA,MAAA,wDAAA;AAAA,MACsD,GAAA;AAAA,sBACvD,GAAA,CAAC,OAAE,IAAM,EAAA,CAAA,EAAG,cAAc,CAA8B,0BAAA,CAAA,EAAA,MAAA,EAAO,UAAS,QAExE,EAAA,sBAAA,EAAA,CAAA;AAAA,MAAI,8BAAA;AAAA,MACyB,GAAA;AAAA,0BAC5B,GAAE,EAAA,EAAA,IAAA,EAAK,uCAAwC,EAAA,MAAA,EAAO,UAAS,QAEhE,EAAA,6BAAA,EAAA,CAAA;AAAA,MAAK,GAAA;AAAA,MAAI,wDAAA;AAAA,KAEX,EAAA,CAAA;AAAA,oBACA,GAAA,CAAC,QAAG,QAAK,EAAA,OAAA,EAAA,CAAA;AAAA,yBACR,GAAE,EAAA,EAAA,QAAA,EAAA;AAAA,MAAA,oCAAA;AAAA,MACkC,GAAA;AAAA,0BAClC,GAAE,EAAA,EAAA,IAAA,EAAK,0BAA2B,EAAA,MAAA,EAAO,UAAS,QAEnD,EAAA,aAAA,EAAA,CAAA;AAAA,MAAI,0GAAA;AAAA,MACqG,GAAA;AAAA,0BACxG,GAAE,EAAA,EAAA,IAAA,EAAK,wCAAyC,EAAA,MAAA,EAAO,UAAS,QAEjE,EAAA,QAAA,EAAA,CAAA;AAAA,MAAI,sBAAA;AAAA,MACiB,GAAA;AAAA,0BACpB,GAAE,EAAA,EAAA,IAAA,EAAK,wCAAyC,EAAA,MAAA,EAAO,UAAS,QAEjE,EAAA,sBAAA,EAAA,CAAA;AAAA,MAAK,GAAA;AAAA,MAAI,kCAAA;AAAA,KAEX,EAAA,CAAA;AAAA,GACF,EAAA,CAAA,CAAA;AAEJ;;ACjCA,SAAS,cAAc,OAAS,EAAA;AAC9B,EAAA,OAAO,OAAQ,CAAA,MAAA,CAAO,OAAO,CAAA,CAAE,KAAK,GAAG,CAAA,CAAA;AACzC,CAAA;AAEgB,SAAA,WAAA,CAAY,EAAE,OAAA,EAAW,EAAA;AACvC,EAAM,MAAA,EAAE,YAAa,EAAA,GAAI,WAAY,EAAA,CAAA;AACrC,EAAA,MAAM,gBAAgB,gBAAiB,EAAA,CAAA;AACvC,EAAM,MAAA,SAAA,GAAY,OAAQ,CAAA,MAAM,aAAiB,IAAA,CAAC,CAAC,KAAA,CAAM,aAAa,CAAA,EAAG,CAAC,aAAa,CAAC,CAAA,CAAA;AACxF,EACE,uBAAA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,2DACb,EAAA,QAAA,EAAA;AAAA,oBAAA,IAAA,CAAC,SACE,EAAA,EAAA,QAAA,EAAA;AAAA,MACC,aAAA,oBAAA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,gDACb,EAAA,QAAA,EAAA;AAAA,wBAAC,GAAA,CAAA,IAAA,EAAA,EAAG,SAAU,EAAA,SAAA,EAAW,QAAc,EAAA,aAAA,EAAA,CAAA;AAAA,wBACvC,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,sBACZ,EAAA,QAAA,EAAA;AAAA,UAAA,CAAC,SACA,oBAAA,GAAA,CAAC,QAAO,EAAA,EAAA,SAAA,EAAU,oBAAmB,OAAS,EAAA,MAAM,mBAAoB,EAAA,EAAG,OAAM,QAC/E,EAAA,QAAA,kBAAA,GAAA,CAAC,gBAAiB,EAAA,EAAA,SAAA,EAAU,WAAU,CAExC,EAAA,CAAA;AAAA,0BAED,GAAA,CAAA,QAAA,EAAA,EAAO,SAAU,EAAA,kBAAA,EAAmB,SAAS,MAAM,sBAAA,EAA0B,EAAA,KAAA,EAAM,WAClF,EAAA,QAAA,kBAAA,GAAA,CAAC,qBAAsB,EAAA,EAAA,SAAA,EAAU,WAAU,CAC7C,EAAA,CAAA;AAAA,UACC,CAAC,SACA,oBAAA,GAAA,CAAC,QAAO,EAAA,EAAA,SAAA,EAAU,oBAAmB,OAAS,EAAA,MAAM,mBAAoB,EAAA,EAAG,OAAM,QAC/E,EAAA,QAAA,kBAAA,GAAA,CAAC,SAAU,EAAA,EAAA,SAAA,EAAU,WAAU,CACjC,EAAA,CAAA;AAAA,SAEJ,EAAA,CAAA;AAAA,OACF,EAAA,CAAA;AAAA,sBAED,GAAA,CAAA,KAAA,EAAA,EAAI,SAAU,EAAA,mBAAA,EACZ,QAAO,EAAA,MAAA,CAAA,OAAA,CAAQ,YAAY,CAAA,CAAE,GAAI,CAAA,CAAC,CAAC,GAAA,EAAK,EAAE,CACzC,qBAAA,GAAA;AAAA,QAAC,GAAA;AAAA,QAAA;AAAA,UAEC,SAAW,EAAA,UAAA;AAAA,YACT,mDAAA;AAAA,YACA,GAAA,KAAQ,gBAAgB,mBAAsB,GAAA,EAAA;AAAA,WAChD;AAAA,UACA,SAAS,MAAM;AACb,YAAM,MAAA,EAAE,MAAS,GAAA,EAAA,CAAA;AACjB,YAAA,gBAAA,CAAiB,GAAG,CAAA,CAAA;AACpB,YAAQ,OAAA,CAAA,YAAA,CAAa,MAAM,IAAI,CAAA,CAAA;AAAA,WACjC;AAAA,UAEC,QAAA,EAAA,GAAA;AAAA,SAAA;AAAA,QAXI,GAAA;AAAA,OAaR,CACH,EAAA,CAAA;AAAA,sBACA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,+FACb,EAAA,QAAA,EAAA;AAAA,wBAAA,GAAA;AAAA,UAAC,QAAA;AAAA,UAAA;AAAA,YACC,SAAU,EAAA,kBAAA;AAAA,YACV,SAAS,MAAM;AACb,cAAA,MAAM,OAAO,cAAe,EAAA,CAAA;AAC5B,cAAA,MAAM,EAAE,IAAA,EAAS,GAAA,cAAA,CAAe,IAAI,CAAA,CAAA;AACpC,cAAQ,OAAA,CAAA,YAAA,CAAa,MAAM,IAAI,CAAA,CAAA;AAAA,aACjC;AAAA,YACD,QAAA,EAAA,KAAA;AAAA,WAAA;AAAA,SAED;AAAA,wBACA,GAAA,CAAC,YAAO,SAAU,EAAA,kBAAA,EAAmB,SAAS,MAAM,iBAAA,IAAqB,QAEzE,EAAA,OAAA,EAAA,CAAA;AAAA,wBACA,IAAA,CAAC,OAAM,EAAA,EAAA,SAAA,EAAU,iCACf,EAAA,QAAA,EAAA;AAAA,0BAAA,GAAA;AAAA,YAAC,OAAA;AAAA,YAAA;AAAA,cACC,KAAA,EAAO,EAAE,OAAA,EAAS,MAAO,EAAA;AAAA,cACzB,IAAK,EAAA,MAAA;AAAA,cACL,QAAQ,EAAA,IAAA;AAAA,cACR,MAAO,EAAA,6BAAA;AAAA,cACP,UAAU,CAAC,CAAA,KAAM,cAAe,CAAA,CAAA,CAAE,OAAO,KAAK,CAAA;AAAA,aAAA;AAAA,WAChD;AAAA,UAAE,QAAA;AAAA,SAEJ,EAAA,CAAA;AAAA,wBACA,GAAA,CAAC,YAAO,SAAU,EAAA,kBAAA,EAAmB,SAAS,MAAM,cAAA,IAAkB,QAEtE,EAAA,QAAA,EAAA,CAAA;AAAA,OACF,EAAA,CAAA;AAAA,KACF,EAAA,CAAA;AAAA,yBACC,SACC,EAAA,EAAA,QAAA,EAAA;AAAA,sBAAC,GAAA,CAAA,IAAA,EAAA,EAAG,SAAU,EAAA,cAAA,EAAe,QAAQ,EAAA,UAAA,EAAA,CAAA;AAAA,sBACpC,GAAA,CAAA,KAAA,EAAA,EAAI,SAAU,EAAA,mBAAA,EACZ,QAAO,EAAA,MAAA,CAAA,OAAA,CAAQ,KAAK,CAAA,CAAE,GAAI,CAAA,CAAC,CAAC,GAAA,EAAK,IAAI,CACpC,qBAAA,GAAA;AAAA,QAAC,GAAA;AAAA,QAAA;AAAA,UAEC,SAAW,EAAA,UAAA;AAAA,YACT,mDAAA;AAAA,YACA,GAAA,KAAQ,gBAAgB,mBAAsB,GAAA,EAAA;AAAA,WAChD;AAAA,UACA,SAAS,MAAM;AACb,YAAA,gBAAA,CAAiB,GAAG,CAAA,CAAA;AACpB,YAAQ,OAAA,CAAA,YAAA,CAAa,MAAM,IAAI,CAAA,CAAA;AAAA,WACjC;AAAA,UAEC,QAAA,EAAA,GAAA;AAAA,SAAA;AAAA,QAVI,GAAA;AAAA,OAYR,CACH,EAAA,CAAA;AAAA,KACF,EAAA,CAAA;AAAA,GACF,EAAA,CAAA,CAAA;AAEJ;;ACrGO,MAAM,yBAA4B,GAAA,OAAO,MAAW,KAAA,WAAA,GAAc,eAAkB,GAAA,SAAA,CAAA;AAE3F,MAAM,KAAQ,GAAA,OAAO,MAAW,KAAA,WAAA,IAAe,MAAO,CAAA,SAAA,CAAA;AAEtC,SAAA,KAAA,CAAM,EAAE,OAAA,EAAW,EAAA;AACjC,EAAA,MAAM,gBAAgB,MAAO,EAAA,CAAA;AAC7B,EAAA,MAAM,CAAC,GAAK,EAAA,MAAM,CAAI,GAAA,QAAA,CAAS,EAAE,CAAA,CAAA;AACjC,EAAA,MAAM,EAAE,YAAA,EAAc,KAAO,EAAA,aAAA,KAAkB,WAAY,EAAA,CAAA;AAE3D,EAAA,yBAAA,CAA0B,MAAM;AAC9B,IAAI,IAAA,aAAA,CAAc,OAAW,IAAA,YAAA,KAAiB,SAAW,EAAA;AAEvD,MAAc,aAAA,CAAA,OAAA,CAAQ,SAAY,GAAA,aAAA,CAAc,OAAS,EAAA,YAAA,CAAA;AAAA,KAC3D;AAAA,GACC,EAAA,CAAC,GAAK,EAAA,YAAY,CAAC,CAAA,CAAA;AACtB,EAAA,yBAAA,CAA0B,MAAM;AAC9B,IAAI,IAAA,CAAC,cAAc,OAAS,EAAA,CAC5B,MAAA,IAAW,iBAAiB,SAAW,EAAA;AACrC,MAAc,aAAA,CAAA,OAAA,CAAQ,SAAY,GAAA,aAAA,CAAc,OAAS,EAAA,YAAA,CAAA;AAAA,KACpD,MAAA;AACL,MAAA,aAAA,CAAc,QAAQ,SAAY,GAAA,CAAA,CAAA;AAAA,KACpC;AAAA,GACF,EAAG,CAAC,YAAY,CAAC,CAAA,CAAA;AAEjB,EAAA,SAAA;AAAA,IACE,WAAA,CAAY,CAAC,CAAM,KAAA;AACjB,MAAA,MAAM,EAAE,OAAA,EAAS,IAAM,EAAA,IAAA,KAAS,CAAE,CAAA,MAAA,CAAA;AAClC,MAAA,MAAA,CAAO,CAAC,CAAM,KAAA;AACZ,QAAA,MAAM,UAAU,CAAE,CAAA,MAAA,GAAS,EAAE,CAAE,CAAA,MAAA,GAAS,CAAC,CAAI,GAAA,KAAA,CAAA,CAAA;AAC7C,QAAM,MAAA,EAAA,GAAK,OAAO,EAAE,CAAA,CAAA;AAEpB,QAAA,IAAI,SAAS,eAAiB,EAAA;AAE5B,UAAA,MAAM,YAAY,CAAE,CAAA,SAAA,CAAU,CAAC,EAAE,MAAM,EAAE,GAAA,EAAO,EAAA,IAAA,EAAAC,OAAWA,KAAAA,KAAAA,KAAS,aAAiB,IAAA,GAAA,KAAQ,KAAK,GAAG,CAAA,CAAA;AACrG,UAAA,CAAA,CAAE,SAAS,CAAI,GAAA,EAAE,OAAS,EAAA,IAAA,EAAM,IAAI,IAAK,EAAA,CAAA;AAAA,SAChC,MAAA,IAAA,OAAA,IAAW,OAAQ,CAAA,OAAA,KAAY,OAAS,EAAA;AACjD,UAAA,CAAA,GAAI,EAAE,KAAM,CAAA,CAAA,EAAG,EAAE,CAAE,CAAA,MAAA,CAAO,CAAC,EAAE,OAAA,EAAS,IAAM,EAAA,KAAA,EAAA,CAAQ,QAAQ,KAAS,IAAA,CAAA,IAAK,GAAG,EAAI,EAAA,IAAA,EAAM,CAAC,CAAA,CAAA;AAAA,SACnF,MAAA;AACL,UAAI,CAAA,GAAA,CAAA,CAAE,OAAO,CAAC,EAAE,SAAS,IAAM,EAAA,EAAA,EAAI,IAAK,EAAC,CAAC,CAAA,CAAA;AAAA,SAC5C;AACA,QAAO,OAAA,CAAA,CAAE,MAAM,CAAG,EAAA,CAAA,CAAA;AAAA,OACnB,CAAA,CAAA;AAAA,KACH,EAAG,EAAE,CAAA;AAAA,GACP,CAAA;AAEA,EAAA,MAAM,WAAW,CAAC,EAAE,UAAU,IAAM,EAAA,KAAA,uBAEhC,IAAA,CAAA,QAAA,EAAA,EAAA,QAAA,EAAA;AAAA,oBAAA,GAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACC,OAAA,EAAS,MAAM,eAAA,CAAgB,IAAI,CAAA;AAAA,QACnC,SAAW,EAAA,EAAA;AAAA,UACT,+FAAA;AAAA,UACA,YAAA,KAAiB,OAAO,mBAAsB,GAAA,oBAAA;AAAA,SAChD;AAAA,QAEC,QAAS,EAAA,KAAA,IAAA,IAAA;AAAA,OAAA;AAAA,KACZ;AAAA,IACC,YAAA,KAAiB,IAAQ,oBAAA,GAAA,CAAA,QAAA,EAAA,EAAG,QAAS,EAAA,CAAA;AAAA,GACxC,EAAA,CAAA,CAAA;AAEF,EAAA,IAAI,KAAO,EAAA;AACT,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAEA,EAAA,MAAM,WAAW,YAAiB,KAAA,EAAA,CAAA;AAElC,EAAA,IAAI,SAAY,GAAA;AAAA,IACd,KAAO,EAAA,EAAA,CAAG,kDAAoD,EAAA,QAAA,GAAW,qBAAqB,kBAAkB,CAAA;AAAA,IAChH,MAAQ,EAAA,EAAA,CAAG,UAAY,EAAA,QAAA,GAAW,4BAA4B,EAAE,CAAA;AAAA,GAClE,CAAA;AACA,EAAA,MAAM,SAAS,SAAU,EAAA,CAAA;AACzB,EAAA,IAAI,CAAC,MAAQ,EAAA;AACX,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AACA,EACE,uBAAA,IAAA,CAAC,SAAI,SAAW,EAAA,EAAA,CAAG,yCAAyC,SAAU,CAAA,aAAa,CAAC,CAClF,EAAA,QAAA,EAAA;AAAA,oBAAC,IAAA,CAAA,KAAA,EAAA,EAAI,WAAU,2BACb,EAAA,QAAA,EAAA;AAAA,sBAAA,IAAA,CAAC,SAAI,SAAW,EAAA,EAAA,CAAG,2CAA6C,EAAA,YAAA,IAAgB,MAAM,CACpF,EAAA,QAAA,EAAA;AAAA,wBAAA,GAAA,CAAC,QAAS,EAAA,EAAA,IAAA,EAAK,OAAQ,EAAA,KAAA,EAAM,SAAU,EAAA,CAAA;AAAA,wBACvC,GAAA,CAAC,QAAS,EAAA,EAAA,IAAA,EAAK,UAAW,EAAA,CAAA;AAAA,wBAC1B,GAAA,CAAC,QAAS,EAAA,EAAA,IAAA,EAAK,QAAS,EAAA,CAAA;AAAA,wBACxB,GAAA,CAAC,QAAS,EAAA,EAAA,IAAA,EAAK,SAAU,EAAA,CAAA;AAAA,wBACzB,GAAA,CAAC,QAAS,EAAA,EAAA,IAAA,EAAK,WAAY,EAAA,CAAA;AAAA,wBAC3B,GAAA,CAAC,QAAS,EAAA,EAAA,IAAA,EAAK,UAAW,EAAA,CAAA;AAAA,QACzB,KAAS,oBAAA,GAAA,CAAC,QAAS,EAAA,EAAA,IAAA,EAAK,OAAQ,EAAA,CAAA;AAAA,OACnC,EAAA,CAAA;AAAA,MACC,iBAAiB,EAChB,oBAAA,GAAA,CAAC,QAAO,EAAA,EAAA,OAAA,EAAS,MAAM,eAAgB,CAAA,EAAE,CAAG,EAAA,SAAA,EAAU,wBAAuB,YAAW,EAAA,aAAA,EACtF,8BAAC,SAAU,EAAA,EAAA,SAAA,EAAU,WAAU,CACjC,EAAA,CAAA;AAAA,KAEJ,EAAA,CAAA;AAAA,IACC,YAAA,KAAiB,EAChB,oBAAA,GAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,0BACb,EAAA,QAAA,kBAAA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,4CAA6C,EAAA,GAAA,EAAK,aAC9D,EAAA,QAAA,EAAA;AAAA,MAAiB,YAAA,KAAA,OAAA,oBAAY,GAAA,CAAA,UAAA,EAAA,EAAW,OAAkB,EAAA,CAAA;AAAA,MAC1D,YAAiB,KAAA,UAAA,oBAAe,GAAA,CAAA,WAAA,EAAA,EAAY,OAAkB,EAAA,CAAA;AAAA,MAC9D,YAAiB,KAAA,SAAA,oBAAc,GAAA,CAAA,UAAA,EAAA,EAAW,GAAU,EAAA,CAAA;AAAA,MACpD,YAAA,KAAiB,QAAY,oBAAA,GAAA,CAAC,SAAU,EAAA,EAAA,CAAA;AAAA,MACxC,YAAA,KAAiB,WAAe,oBAAA,GAAA,CAAC,SAAU,EAAA,EAAA,CAAA;AAAA,MAC3C,YAAA,KAAiB,UAAc,oBAAA,GAAA,CAAC,WAAY,EAAA,EAAA,CAAA;AAAA,MAC5C,YAAA,KAAiB,OAAW,oBAAA,GAAA,CAAC,QAAS,EAAA,EAAA,CAAA;AAAA,KAAA,EACzC,CACF,EAAA,CAAA;AAAA,GAEJ,EAAA,CAAA,CAAA;AAEJ,CAAA;AAEA,SAAS,UAAU,SAAW,EAAA;AAC5B,EAAS,QAAA,CAAA,MAAA,CAAO,KAAK,SAAS,CAAA,CAAA;AAChC;;ACjGA,MAAM,EAAE,IAAA,EAAM,UAAY,EAAA,IAAA,KAAS,aAAc,EAAA,CAAA;AACpC,MAAA,WAAA,GAAc,cAAc,IAAI,CAAA,CAAA;AAE7C,MAAM,EAAE,UAAA,EAAe,GAAA,WAAA,CAAY,GAAI,EAAA,CAAA;AAEvC,IAAI,cAAA,EAAgB,OAAS,EAAA,WAAA,EAAa,WAAa,EAAA,QAAA,CAAA;AACvD,IAAI,OAAO,WAAW,WAAa,EAAA;AACjC,EAAsB,qBAAA,EAAA,CAAA;AACtB,EAAA,cAAA,GAAiB,WAAY,EAAA,CAAA;AAC7B,EAAA,OAAA,GAAU,OAAQ,EAAA,CAAA;AAClB,EAAA,WAAA,GAAc,cAAe,EAAA,CAAA;AAC7B,EAAc,WAAA,GAAA,MAAM,WAAY,CAAA,SAAA,CAAU,CAAG,EAAA,CAAA,EAAG,YAAY,MAAO,CAAA,MAAA,EAAQ,WAAY,CAAA,MAAA,CAAO,KAAK,CAAA,CAAA;AACnG,EAAW,QAAA,GAAA,MAAA,CAAO,QAAa,KAAA,MAAA,CAAO,MAAO,CAAA,QAAA,CAAA;AAC/C,CAAA;AAEO,SAAS,IAAK,CAAA,EAAE,QAAW,GAAA,KAAA,EAAS,EAAA;AACzC,EAAA,MAAM,aAAa,QAAY,IAAA,QAAA,CAAA;AAC/B,EAAA,MAAM,EAAE,aAAA,EAAe,KAAM,EAAA,GAAI,WAAY,EAAA,CAAA;AAE7C,EAAM,MAAA,IAAA,GAAO,YAAY,MAAM;AAC7B,IAAM,MAAA,QAAA,GAAW,CAAC,CAAA,CAAA,EAAI,CAAC,CAAA,CAAA;AACvB,IAAA,MAAMC,eAAc,cAAe,EAAA,CAAA;AACnC,IAAA,MAAM,MAAS,GAAA,CAAC,IAAM,EAAA,IAAA,EAAM,OAAO,QAAa,KAAA;AAC9C,MAAA,QAAA,CAAS,MAAUA,IAAAA,YAAAA,CAAY,SAAU,CAAA,CAAA,EAAG,CAAGA,EAAAA,YAAAA,CAAY,MAAO,CAAA,KAAA,GAAQ,CAAGA,EAAAA,YAAAA,CAAY,MAAO,CAAA,MAAA,GAAS,CAAC,CAAA,CAAA;AAC1G,MAAU,QAAA,EAAA,OAAA,CAAQ,CAAC,OAAY,KAAA;AAE7B,QAAA,OAAA,CAAQA,cAAa,IAAM,EAAA,IAAA,EAAM,UAAU,EAAE,KAAA,EAAO,OAAO,CAAA,CAAA;AAAA,OAC5D,CAAA,CAAA;AAAA,KACH,CAAA;AACA,IAAM,MAAA,MAAA,GAAS,IAAI,aAAc,CAAA;AAAA,MAC/B,aAAe,EAAA,cAAA;AAAA,MACf,OAAA,EAAS,MAAM,eAAA,EAAkB,CAAA,WAAA;AAAA,MACjC,UAAA;AAAA,MACA,QAAU,EAAA,KAAA;AAAA,MACV,MAAM,YAAa,CAAA,OAAA;AAAA,MACnB,WAAa,EAAA,YAAA;AAAA,MACb,OAAS,EAAA,OAAA;AAAA,MACT,QAAA;AAAA,MACA,MAAA;AAAA,MACA,SAAS,YAAY,OAAA,CAAQ,IAAI,CAAC,cAAA,EAAgB,OAAO,CAAC,CAAA;AAAA,MAC1D,aAAA,EAAe,CAAC,KAAU,KAAA;AACxB,QAAa,YAAA,CAAA,EAAE,GAAG,KAAA,EAAO,CAAA,CAAA;AAAA,OAC3B;AAAA,MACA,SAAW,EAAA,CAAC,EAAE,IAAA,EAAW,KAAA;AACvB,QAAA,cAAA,CAAe,IAAI,CAAA,CAAA;AAEnB,QAAA,aAAA,CAAc,IAAI,CAAA,CAAA;AAClB,QAAA,MAAA,CAAO,QAAS,CAAA,IAAA,GAAO,GAAM,GAAA,SAAA,CAAU,IAAI,CAAA,CAAA;AAAA,OAC7C;AAAA,MACA,MAAQ,EAAA,KAAA;AAAA,KACT,CAAA,CAAA;AAED,IAAS,QAAA,EAAA,CAAE,IAAK,CAAA,CAAC,OAAY,KAAA;AAC3B,MAAI,IAAA,GAAA,CAAA;AACJ,MAAA,IAAI,OAAS,EAAA;AACX,QAAA,MAAA,CAAO,QAAQ,OAAO,CAAA,CAAA;AACtB,QAAA,YAAA,CAAa,OAAO,CAAA,CAAA;AACpB,QAAM,GAAA,GAAA,CAAA,oCAAA,CAAA,CAAA;AAAA,iBACG,UAAY,EAAA;AACrB,QAAA,MAAA,CAAO,QAAQ,UAAU,CAAA,CAAA;AACzB,QAAM,GAAA,GAAA,CAAA,kCAAA,CAAA,CAAA;AAAA,OACD,MAAA;AACL,QAAA,MAAA,CAAO,QAAQ,UAAU,CAAA,CAAA;AACzB,QAAA,GAAA,GAAM,gCAAgC,IAAI,CAAA,kBAAA,CAAA,CAAA;AAAA,OAC5C;AACA,MAAO,MAAA,CAAA,CAAA,oBAAA,EAAuB,GAAG,CAAA,wCAAA,CAAA,EAA4C,WAAW,CAAA,CAAA;AAAA,KAEzF,CAAA,CAAA;AAED,IAAA,SAAA,CAAU,OAAU,GAAA,MAAA,CAAA;AAAA,GACtB,EAAG,EAAE,CAAA,CAAA;AAEL,EAAA,MAAM,CAAC,SAAW,EAAA,YAAY,CAAI,GAAA,QAAA,CAAS,EAAE,CAAA,CAAA;AAC7C,EAAA,MAAM,EAAE,OAAS,EAAA,OAAA,EAAS,KAAO,EAAA,UAAA,EAAY,SAAY,GAAA,SAAA,CAAA;AACzD,EAAA,MAAM,YAAY,MAAO,EAAA,CAAA;AACzB,EAAA,MAAM,eAAe,MAAO,EAAA,CAAA;AAI5B,EAAM,MAAA,SAAA,GAAY,SAAS,WAAa,EAAA,EAAE,MAAM,MAAO,CAAA,IAAA,CAAKC,iBAAe,CAAA,EAAG,CAAA,CAAA;AAC9E,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,iBAAiB,EAAC,CAAA;AACtB,IAAA,MAAA,CAAO,IAAK,CAAAA,iBAAe,CAAE,CAAA,OAAA,CAAQ,CAAC,GAAQ,KAAA;AAC5C,MAAI,IAAA,SAAA,CAAU,cAAe,CAAA,GAAG,CAAG,EAAA;AACjC,QAAe,cAAA,CAAA,GAAG,CAAI,GAAA,SAAA,CAAU,GAAG,CAAA,CAAA;AAAA,OACrC;AAAA,KACD,CAAA,CAAA;AACD,IAAU,SAAA,CAAA,OAAA,EAAS,eAAe,cAAc,CAAA,CAAA;AAAA,GAClD,EAAG,CAAC,SAAS,CAAC,CAAA,CAAA;AAMd,EAAA,MAAM,gBAAmB,GAAA,YAAY,SAAU,CAAA,OAAA,EAAS,MAAO,EAAA,CAAA;AAC/D,EAAA,MAAM,YAAe,GAAA,OAAO,OAAS,EAAA,KAAA,GAAQ,KAAU,KAAA;AACrD,IAAA,IAAI,KAAO,EAAA;AACT,MAAY,WAAA,EAAA,CAAA;AACZ,MAAkB,iBAAA,EAAA,CAAA;AAClB,MAAU,SAAA,CAAA,OAAA,CAAQ,IAAK,CAAA,MAAA,CAAO,CAAC,CAAA,CAAA;AAC/B,MAAA,MAAM,OAAQ,EAAA,CAAA;AAAA,KAChB;AACA,IAAA,IAAI,WAAW,OAAS,EAAA;AACtB,MAAU,SAAA,CAAA,OAAA,CAAQ,QAAQ,OAAO,CAAA,CAAA;AACjC,MAAU,SAAA,CAAA,OAAA,CAAQ,IAAK,CAAA,QAAA,CAAS,OAAO,CAAA,CAAA;AAAA,KACzC;AACA,IAAA,MAAA,CAAO,sBAAsB,CAAA,CAAA;AAAA,GAC/B,CAAA;AACA,EAAA,MAAM,gBAAgB,YAAY;AAEhC,IAAA,MAAM,EAAE,IAAA,EAAM,IAAAC,EAAAA,KAAAA,KAAS,aAAc,EAAA,CAAA;AACrC,IAAO,MAAA,CAAA,CAAA,8BAAA,EAAiCA,KAAI,CAAG,CAAA,CAAA,CAAA,CAAA;AAC/C,IAAA,gBAAA,CAAiBA,KAAI,CAAA,CAAA;AACrB,IAAY,WAAA,EAAA,CAAA;AACZ,IAAkB,iBAAA,EAAA,CAAA;AAClB,IAAU,SAAA,CAAA,OAAA,CAAQ,IAAK,CAAA,MAAA,CAAO,CAAC,CAAA,CAAA;AAC/B,IAAA,MAAM,OAAQ,EAAA,CAAA;AACd,IAAU,SAAA,CAAA,OAAA,CAAQ,QAAQ,IAAI,CAAA,CAAA;AAC9B,IAAU,SAAA,CAAA,OAAA,CAAQ,IAAK,CAAA,QAAA,CAAS,IAAI,CAAA,CAAA;AAAA,GACtC,CAAA;AAEA,EAAM,MAAA,WAAA,GAAc,YAAY,SAAA,CAAU,UAAU,CAAA,CAAA;AACpD,EAAA,MAAM,OAAU,GAAA;AAAA,IACd,QAAA;AAAA,IACA,OAAA;AAAA,IACA,OAAA;AAAA,IACA,OAAA;AAAA,IACA,UAAA;AAAA,IACA,gBAAA;AAAA,IACA,YAAA;AAAA,IACA,aAAA;AAAA,IACA,WAAA;AAAA,GACF,CAAA;AAEA,EACE,uBAAA,GAAA,CAAC,WAAY,CAAA,QAAA,EAAZ,EAAqB,KAAA,EAAO,OAC3B,EAAA,QAAA,kBAAA,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAW,EAAG,CAAA,+BAA+B,CAChD,EAAA,QAAA,EAAA;AAAA,oBAAC,GAAA,CAAA,MAAA,EAAA,EAAO,QAAQ,OAAS,EAAA,CAAA;AAAA,oBACzB,GAAA,CAAC,UAAO,OAAkB,EAAA,CAAA;AAAA,IACzB,UAAA,IAAc,CAAC,OACd,oBAAA,IAAA;AAAA,MAAC,QAAA;AAAA,MAAA;AAAA,QACC,OAAA,EAAS,MAAM,gBAAiB,EAAA;AAAA,QAChC,SAAU,EAAA,0JAAA;AAAA,QAEV,QAAA,EAAA;AAAA,0BAAC,GAAA,CAAA,cAAA,EAAA,EAAe,WAAU,SAAU,EAAA,CAAA;AAAA,0BACpC,GAAA,CAAC,UAAK,QAAI,EAAA,MAAA,EAAA,CAAA;AAAA,SAAA;AAAA,OAAA;AAAA,KACZ;AAAA,oBAEF,IAAA,CAAC,KAAI,EAAA,EAAA,SAAA,EAAU,oCACb,EAAA,QAAA,EAAA;AAAA,sBAAA,GAAA;AAAA,QAAC,SAAA;AAAA,QAAA;AAAA,UACC,SAAA,EAAW,mDAAuD,IAAA,KAAA,GAAQ,QAAW,GAAA,EAAA,CAAA;AAAA,UACrF,EAAG,EAAA,MAAA;AAAA,UACH,GAAA,EAAK,CAAC,EAAO,KAAA;AACX,YAAA,YAAA,CAAa,OAAU,GAAA,EAAA,CAAA;AACvB,YAAI,IAAA,CAAC,UAAU,OAAS,EAAA;AACtB,cAAK,IAAA,EAAA,CAAA;AAAA,aACP;AAAA,WACF;AAAA,SAAA;AAAA,OACD;AAAA,MACA,kBAAkB,OAAW,IAAA,CAAC,UAAc,oBAAA,GAAA,CAAC,SAAM,OAAkB,EAAA,CAAA;AAAA,KACxE,EAAA,CAAA;AAAA,IACC,yBACE,GAAA,CAAA,KAAA,EAAA,EAAI,WAAU,iDAAmD,EAAA,QAAA,EAAA,KAAA,CAAM,WAAW,mBAAoB,EAAA,CAAA;AAAA,IAExG,kBAAkB,QAAY,IAAA,CAAC,UAAc,oBAAA,GAAA,CAAC,SAAM,OAAkB,EAAA,CAAA;AAAA,GAAA,EACzE,CACF,EAAA,CAAA,CAAA;AAEJ;;ACtMA,MAAAC,SAAA,GAAAC,YAAA,qBAAA,CAAA,CAAA;AAAA,MAAAC,SAAA,GAAAC,eAAA,CAAA,OAAA,QAAA,EAAA,SAAA,OAAA,KAAA;AAAA,EAAA,MAAAC,MAAA,GAAA,QAAA,CAAA,WAAA,CAAAJ,SAAA,EAAA,SAAA,OAAA,CAAA,CAAA;AAAA,EAAAI,OAAA,IAAA,GAAAF,SAAA,CAAA;AAAA,EAAA,OAAAG,cAAA,CAAA,mCAAA,EAAAC,eAAA,CAAA,QAAA,EAAA,YAAA,EAAAC,YAAA,EAAA,EAOK,CAAA,CAAA,2BAAA,EAPLC,UAAA,CAAA,CAAA,CAAA,gDAAA,EAAAF,eAAA,CAAA,QAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAWU,aAAA,EAAA,IAXV,EAAA,4BAAA,EAAA,MAAA,EAAA,uBAAA,EAAA,4DAAA,EAAA,yBAAA,EAAA,MAAA,EAWK,CAAA,CAAA,cAAA,CAAA,CAAA;AAXL,CAAA,EAAA,sEAAA,KAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;ACAA,MAAAN,SAAA,GAAAC,YAAA,qBAAA,CAAA,CAAA;AAAA,MAAAC,SAAA,GAAAC,eAAA,CAAA,OAAA,QAAA,EAAA,SAAA,OAAA,KAAA;AAAA,EAAA,MAAAC,MAAA,GAAA,QAAA,CAAA,WAAA,CAAAJ,SAAA,EAAA,SAAA,OAAA,CAAA,CAAA;AAAA,EAAAI,OAAA,IAAA,GAAAF,SAAA,CAAA;AAMA,EAAM,MAAA,EAAE,QAAS,EAAA,IAAI,MAAA,CAAA,MAAA,CAAA,CAAA,UAAA,CAAA,GAAA,CAAA,MAAA,CAAA,YAAA,CAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,qBAAA,CAAA,eAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,CAAY,CAAA;AACjC,EAAM,MAAA,cAAA,GAAiB,SAAS,QAAS,CAAA,GAAG,IAAI,QAAS,CAAA,KAAA,CAAM,CAAG,EAAA,CAAA,CAAE,CAAI,GAAA,QAAA,CAAA;AAPxE,EAAA,OAAAG,cAAA,CAAA,MAAA,EAAAC,gBAAA,QAAA,EAAA,YAAA,EAAAC,cAAA,EAWG,CAAA,CAAA,EAXHC,UAAA,CAAA,CAAA,CAeK,mIAAA,EAAA,MAAA,CACC,OAAQ,CAAA,KAAK,CAAE,CAAA,GAAA,CAAI,CAAC,CAAC,IAAA,EAAM,IAAI,CAAA,KAhBrCH,cAAA,CAAA,6EAAA,EAAAI,YAAA,CAiB4F,GAAG,cAAc,CAAA,EAAA,EAAK,IAAK,CAAA,IAAI,CAAC,CAAA,CAAA,EAjB5H,MAAA,CAAA,CAAA,2HAAA,EAmBkE,WAAY,CAAA,IAAI,CAAE,CAAA,OAAO,KAAK,IAAI,CAAA,iBAAA,EAnBpGA,YAqBoB,CAAA,CAAA,EAAG,cAAc,CAAA,aAAA,EAAgB,IAAI,CArBzD,IAAA,CAAA,EAAA,KAAA,CAAA,CAAA,KAAA,CAuBO,CACH,CAAA,aAAA,CAAA,CAAA;AAxBJ,CAAA,EAAA,+EAAA,KAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;ACAA,CAAA,EAAA,+EAAA,KAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;ACAA,CAAA,EAAA,+EAAA,KAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;ACKI,MAAM,IAAI,GAAG,srJAAsrJ,CAAC;AACxsJ;AACA,IAAW,MAAM,WAAW,GAAG,EAAE,CAAC;AAClC,IAAW,MAAM,IAAI,GAAG,4DAA4D,CAAC;AACrF,IAAW,MAAM,GAAG,GAAG,SAAS,CAAC;AAUjC;AACA,IAAW,MAAM,OAAO,GAAG,eAAe,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,KAAK;AACtE,KAAK,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO,EAAE,GAAG,WAAW,CAAC;AAChD,KAAK,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,KAAK,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACvB;AACA,KAAK,OAAOC,cAAM,CAAC,EAAE,eAAe,CAAO,CAAC,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpE,KAAK,CAAC;;AC1BN,MAAAV,SAAA,GAAAC,YAAA,qBAAA,CAAA,CAAA;AAAA,MAAAC,SAAA,GAAAC,eAAA,CAAA,OAAA,QAAA,EAAA,SAAA,OAAA,KAAA;AAAA,EAAA,MAAAC,MAAA,GAAA,QAAA,CAAA,WAAA,CAAAJ,SAAA,EAAA,SAAA,OAAA,CAAA,CAAA;AAAA,EAAAI,OAAA,IAAA,GAAAF,SAAA,CAAA;AAMA,EAAM,MAAA,UAAA,GAAa,MAAM,aAAc,EAAA,CAAA;AAEvC,EAAM,MAAA,EAAE,QAAS,EAAA,IAAI,MAAA,CAAA,MAAA,CAAA,CAAA,UAAA,CAAA,GAAA,CAAA,MAAA,CAAA,YAAA,CAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,qBAAA,CAAA,eAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,CAAY,CAAA;AACjC,EAAM,MAAA,cAAA,GAAiB,SAAS,QAAS,CAAA,GAAG,IAAI,QAAS,CAAA,KAAA,CAAM,CAAG,EAAA,CAAA,CAAE,CAAI,GAAA,QAAA,CAAA;AATxE,EAAA,OAAAG,cAAA,CAAA,MAAA,EAAAC,eAAA,CAAA,QAAA,EAAA,YAAA,EAAAC,YAAA,EAAA,EAaG,CAAA,CAbH,EAAAC,UAAA,CAAA,CAAA,CAgBG,kCAAA,EAAA,MAAA,CACG,IAAK,CAAA,UAAU,CAAE,CAAA,MAAA,KAAW,CAjBlC,IAAAH,cAAA,CAAA,oCAAA,EAAAC,eAAA,CAAA,QAAA,EAAA,SAAA,EAAA,OAAA,EAAA,EAmBS,CAAA,CAAA,MAAA,CAGP,oGAEG,MACC,CAAA,OAAA,CAAQ,UAAU,CAAA,CAAE,GAAI,CAAA,CAAC,CAAC,IAAA,EAAM,IAAI,CAAA,KAzB1CD,cAAA,CAAA,6EAAA,EAAAI,YAAA,CA4BgB,CAAG,EAAA,cAAc,CAAK,EAAA,EAAA,IAAA,CAAK,IAAc,CAAC,CA5B1D,CAAA,EAAA,MAAA,CAAA,CAAA,2HAAA,EA+BkE,IAAI,CAAA,iBAAA,EA/BtEA,YAiCoB,CAAA,CAAA,EAAG,cAAc,CAAA,QAAA,EAAW,IAAI,CAAA,IAAA,CAAA,EAjCpD,KAAA,CAAA,OAmCO,CACH,CAAA,aAAA,CAAA,CAAA;AApCJ,CAAA,EAAA,6EAAA,KAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;ACAA,CAAA,EAAA,4EAAA,KAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;ACAA,CAAA,EAAA,kFAAA,KAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;"}