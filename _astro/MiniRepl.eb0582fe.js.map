{"version":3,"mappings":"+TASA,IAAIA,EACA,OAAOC,OAAW,MACpBD,EAAUE,EACRC,QACA,OAAO,qBAAsB,EAC7B,KAAAC,KAAA,yEAAO,qBAAuB,sFAAAC,EAAA,IAC9B,OAAO,qBAAsB,EAC7B,8GAAAA,EAAA,WAAO,qBAAsB,sFAC7BA,EAAA,WAAO,qBAAqB,sFAC5BA,EAAA,WAAO,qBAA0B,4KACjCA,EAAA,WAAO,mBAAqB,EAC5B,kFAAAA,EAAA,WAAO,qBAAwB,qJAC/B,OAAO,qBAA4B,gHACrC,GAGE,OAAOJ,OAAW,MACEK,IACdC,KAGH,SAASC,EAAS,CACvBC,OACAC,WACAC,YACAC,kBAAkB,GAClBC,OAAO,CAAC,EAAG,CAAC,EACZC,eAAe,IACfC,aACAC,aACAC,kBACF,EAAG,CACD,KAAM,CAACC,EAAMC,CAAO,EAAIC,EAAS,WAC3B,CAAEC,QAAOC,cAAaC,WAAUC,aAAYC,0BAA2BC,EAAY,EACnF,CAACC,EAAaC,CAAc,EAAIR,WAAS,CAAE,GACjDS,mBAAU,IAAM,CAGNC,YAAI,CAACzB,EAAA,WAAO,qBAAuB,6TAAGL,CAAO,CAAC,EACnD+B,KAAK,CAAC,CAACC,CAAG,IAAMb,EAAQ,IAAMa,EAAIxB,QAAQ,CAAC,EAC3CyB,MAAeC,WAAQC,MAAMC,CAAG,CAAC,CACtC,EAAG,CAAE,GACElB,SACL,OAAK,UAAU,iBACbmB,EAAA,IAACnB,EAAA,CACC,KAAAT,EACA,gBAAiB,GACjB,SAAUO,EAAa,CAAC,EAAG,CAAC,EAAIN,EAChC,UAAAC,EACA,gBAAAC,EACA,KAAAC,EACA,aAAAC,EACA,MAAOwB,EAAOjB,CAAK,EACnB,WAAAN,EACA,YAAAO,EACA,WAAAE,EACA,SAAAD,EACA,uBAAAE,EACA,QACET,EACI,CAACuB,EAAKC,EAAMC,EAAM/B,IAAa,CAC7B,MAAMgC,EAASD,EACZE,OAAaC,EAAIC,MAAMC,IAAI,EAC3BC,OAAOC,OAAO,EACdL,OAAY,OAAOvC,GAAM,SAAW6C,EAAW7C,CAAC,EAAIA,CAAE,EACzDwB,EAAec,CAAM,CAEvB,SAER,EACC1B,GACCqB,EAAA,IAACa,EAAA,CACC,QAAS,CACPC,MAAO,CAAC,KAAM,IAAI,EAClBC,OAAQ,IACRC,SAAU,CAAC,CAAEC,KAAM3B,EAAa4B,MAAO,YAAa,EACpDC,OAAQvC,GAAoB,CAAC,CAC/B,EACF,KAIJoB,EAAA,oBAAM5B,EAAL,CAEL","names":["modules","window","evalScope","controls","n","__vitePreload","initAudioOnFirstClick","prebake","MiniRepl","tune","drawTime","punchcard","punchcardLabels","span","canvasHeight","hideHeader","claviature","claviatureLabels","Repl","setRepl","useState","theme","keybindings","fontSize","fontFamily","isLineNumbersDisplayed","useSettings","activeNotes","setActiveNotes","useEffect","all","then","res","catch","console","error","err","_jsx","themes","ctx","time","haps","active","map","hap","value","note","filter","Boolean","noteToMidi","Claviature","range","scaleY","colorize","keys","color","labels"],"sources":["../../src/docs/MiniRepl.jsx"],"sourcesContent":["import { evalScope, controls, noteToMidi } from '@strudel.cycles/core';\nimport { initAudioOnFirstClick } from '@strudel.cycles/webaudio';\nimport { useEffect, useState } from 'react';\nimport { prebake } from '../repl/prebake';\nimport { themes, settings } from '../repl/themes.mjs';\nimport './MiniRepl.css';\nimport { useSettings } from '../settings.mjs';\nimport Claviature from '@components/Claviature';\n\nlet modules;\nif (typeof window !== 'undefined') {\n  modules = evalScope(\n    controls,\n    import('@strudel.cycles/core'),\n    import('@strudel.cycles/tonal'),\n    import('@strudel.cycles/mini'),\n    import('@strudel.cycles/midi'),\n    import('@strudel.cycles/xen'),\n    import('@strudel.cycles/webaudio'),\n    import('@strudel.cycles/osc'),\n    import('@strudel.cycles/csound'),\n    import('@strudel.cycles/soundfonts'),\n  );\n}\n\nif (typeof window !== 'undefined') {\n  initAudioOnFirstClick();\n  prebake();\n}\n\nexport function MiniRepl({\n  tune,\n  drawTime,\n  punchcard,\n  punchcardLabels = true,\n  span = [0, 4],\n  canvasHeight = 100,\n  hideHeader,\n  claviature,\n  claviatureLabels,\n}) {\n  const [Repl, setRepl] = useState();\n  const { theme, keybindings, fontSize, fontFamily, isLineNumbersDisplayed } = useSettings();\n  const [activeNotes, setActiveNotes] = useState([]);\n  useEffect(() => {\n    // we have to load this package on the client\n    // because codemirror throws an error on the server\n    Promise.all([import('@strudel.cycles/react'), modules])\n      .then(([res]) => setRepl(() => res.MiniRepl))\n      .catch((err) => console.error(err));\n  }, []);\n  return Repl ? (\n    <div className=\"mb-4\">\n      <Repl\n        tune={tune}\n        hideOutsideView={true}\n        drawTime={claviature ? [0, 0] : drawTime}\n        punchcard={punchcard}\n        punchcardLabels={punchcardLabels}\n        span={span}\n        canvasHeight={canvasHeight}\n        theme={themes[theme]}\n        hideHeader={hideHeader}\n        keybindings={keybindings}\n        fontFamily={fontFamily}\n        fontSize={fontSize}\n        isLineNumbersDisplayed={isLineNumbersDisplayed}\n        onPaint={\n          claviature\n            ? (ctx, time, haps, drawTime) => {\n                const active = haps\n                  .map((hap) => hap.value.note)\n                  .filter(Boolean)\n                  .map((n) => (typeof n === 'string' ? noteToMidi(n) : n));\n                setActiveNotes(active);\n              }\n            : undefined\n        }\n      />\n      {claviature && (\n        <Claviature\n          options={{\n            range: ['C2', 'C6'],\n            scaleY: 0.75,\n            colorize: [{ keys: activeNotes, color: 'steelblue' }],\n            labels: claviatureLabels || {},\n          }}\n        />\n      )}\n    </div>\n  ) : (\n    <pre>{tune}</pre>\n  );\n}\n"],"file":"_astro/MiniRepl.eb0582fe.js"}