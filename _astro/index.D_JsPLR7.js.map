{"version":3,"file":"index.D_JsPLR7.js","sources":["../../../packages/draw/draw.mjs","../../../packages/draw/animate.mjs","../../../packages/draw/pianoroll.mjs","../../../packages/draw/spiral.mjs","../../../packages/draw/pitchwheel.mjs","../../../node_modules/.pnpm/nanostores@0.9.5/node_modules/nanostores/atom/index.js","../../../node_modules/.pnpm/nanostores@0.9.5/node_modules/nanostores/map/index.js"],"sourcesContent":["/*\ndraw.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/canvas/draw.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Pattern, getTime, State, TimeSpan } from '@strudel/core';\n\nexport const getDrawContext = (id = 'test-canvas', options) => {\n  let { contextType = '2d', pixelated = false, pixelRatio = window.devicePixelRatio } = options || {};\n  let canvas = document.querySelector('#' + id);\n  if (!canvas) {\n    canvas = document.createElement('canvas');\n    canvas.id = id;\n    canvas.width = window.innerWidth * pixelRatio;\n    canvas.height = window.innerHeight * pixelRatio;\n    canvas.style = 'pointer-events:none;width:100%;height:100%;position:fixed;top:0;left:0';\n    pixelated && (canvas.style.imageRendering = 'pixelated');\n    document.body.prepend(canvas);\n    let timeout;\n    window.addEventListener('resize', () => {\n      timeout && clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        canvas.width = window.innerWidth * pixelRatio;\n        canvas.height = window.innerHeight * pixelRatio;\n      }, 200);\n    });\n  }\n  return canvas.getContext(contextType);\n};\n\nlet animationFrames = {};\nfunction stopAnimationFrame(id) {\n  if (animationFrames[id] !== undefined) {\n    cancelAnimationFrame(animationFrames[id]);\n    delete animationFrames[id];\n  }\n}\nfunction stopAllAnimations(replID) {\n  Object.keys(animationFrames).forEach((id) => (!replID || id.startsWith(replID)) && stopAnimationFrame(id));\n}\n\nlet memory = {};\nPattern.prototype.draw = function (fn, options) {\n  if (typeof window === 'undefined') {\n    return this;\n  }\n  let { id = 1, lookbehind = 0, lookahead = 0 } = options;\n  let __t = Math.max(getTime(), 0);\n  stopAnimationFrame(id);\n  lookbehind = Math.abs(lookbehind);\n  // init memory, clear future haps of old pattern\n  memory[id] = (memory[id] || []).filter((h) => !h.isInFuture(__t));\n  let newFuture = this.queryArc(__t, __t + lookahead).filter((h) => h.hasOnset());\n  memory[id] = memory[id].concat(newFuture);\n\n  let last;\n  const animate = () => {\n    const _t = getTime();\n    const t = _t + lookahead;\n    // filter out haps that are too far in the past\n    memory[id] = memory[id].filter((h) => h.isInNearPast(lookbehind, _t));\n    // begin where we left off in last frame, but max -0.1s (inactive tab throttles to 1fps)\n    let begin = Math.max(last || t, t - 1 / 10);\n    const haps = this.queryArc(begin, t).filter((h) => h.hasOnset());\n    memory[id] = memory[id].concat(haps);\n    last = t; // makes sure no haps are missed\n    fn(memory[id], _t, t, this);\n    animationFrames[id] = requestAnimationFrame(animate);\n  };\n  animationFrames[id] = requestAnimationFrame(animate);\n  return this;\n};\n\nexport const cleanupDraw = (clearScreen = true, id) => {\n  const ctx = getDrawContext();\n  clearScreen && ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  stopAllAnimations(id);\n};\n\nPattern.prototype.onPaint = function (painter) {\n  return this.withState((state) => {\n    if (!state.controls.painters) {\n      state.controls.painters = [];\n    }\n    state.controls.painters.push(painter);\n  });\n};\n\nPattern.prototype.getPainters = function () {\n  let painters = [];\n  this.queryArc(0, 0, { painters });\n  return painters;\n};\n\n// const round = (x) => Math.round(x * 1000) / 1000;\n\n// encapsulates starting and stopping animation frames\nexport class Framer {\n  constructor(onFrame, onError) {\n    this.onFrame = onFrame;\n    this.onError = onError;\n  }\n  start() {\n    const self = this;\n    let frame = requestAnimationFrame(function updateHighlights(time) {\n      try {\n        self.onFrame(time);\n      } catch (err) {\n        self.onError(err);\n      }\n      frame = requestAnimationFrame(updateHighlights);\n    });\n    self.cancel = () => {\n      cancelAnimationFrame(frame);\n    };\n  }\n  stop() {\n    if (this.cancel) {\n      this.cancel();\n    }\n  }\n}\n\n// syncs animation frames to a cyclist scheduler\n// see vite-vanilla-repl-cm6 for an example\nexport class Drawer {\n  constructor(onDraw, drawTime) {\n    this.visibleHaps = [];\n    this.lastFrame = null;\n    this.drawTime = drawTime;\n    this.painters = [];\n    this.framer = new Framer(\n      () => {\n        if (!this.scheduler) {\n          console.warn('Drawer: no scheduler');\n          return;\n        }\n        const lookbehind = Math.abs(this.drawTime[0]);\n        const lookahead = this.drawTime[1];\n        // calculate current frame time (think right side of screen for pianoroll)\n        const phase = this.scheduler.now() + lookahead;\n        // first frame just captures the phase\n        if (this.lastFrame === null) {\n          this.lastFrame = phase;\n          return;\n        }\n        // query haps from last frame till now. take last 100ms max\n        const haps = this.scheduler.pattern.queryArc(Math.max(this.lastFrame, phase - 1 / 10), phase);\n        this.lastFrame = phase;\n        this.visibleHaps = (this.visibleHaps || [])\n          // filter out haps that are too far in the past (think left edge of screen for pianoroll)\n          .filter((h) => h.endClipped >= phase - lookbehind - lookahead)\n          // add new haps with onset (think right edge bars scrolling in)\n          .concat(haps.filter((h) => h.hasOnset()));\n        const time = phase - lookahead;\n        onDraw(this.visibleHaps, time, this, this.painters);\n      },\n      (err) => {\n        console.warn('draw error', err);\n      },\n    );\n  }\n  setDrawTime(drawTime) {\n    this.drawTime = drawTime;\n  }\n  invalidate(scheduler = this.scheduler, t) {\n    if (!scheduler) {\n      return;\n    }\n    // TODO: scheduler.now() seems to move even when it's stopped, this hints at a bug...\n    t = t ?? scheduler.now();\n    this.scheduler = scheduler;\n    let [_, lookahead] = this.drawTime;\n    // +0.1 = workaround for weird holes in query..\n    const [begin, end] = [Math.max(t, 0), t + lookahead + 0.1];\n    // remove all future haps\n    this.visibleHaps = this.visibleHaps.filter((h) => h.whole.begin < t);\n    this.painters = []; // will get populated by .onPaint calls attached to the pattern\n    // query future haps\n    const futureHaps = scheduler.pattern.queryArc(begin, end, { painters: this.painters });\n    // append future haps\n    this.visibleHaps = this.visibleHaps.concat(futureHaps);\n  }\n  start(scheduler) {\n    this.scheduler = scheduler;\n    this.invalidate();\n    this.framer.start();\n  }\n  stop() {\n    if (this.framer) {\n      this.framer.stop();\n    }\n  }\n}\n\nexport function getComputedPropertyValue(name) {\n  if (typeof window === 'undefined') {\n    return '#fff';\n  }\n  return getComputedStyle(document.documentElement).getPropertyValue(name);\n}\n\nlet theme = {\n  background: '#222',\n  foreground: '#75baff',\n  caret: '#ffcc00',\n  selection: 'rgba(128, 203, 196, 0.5)',\n  selectionMatch: '#036dd626',\n  lineHighlight: '#00000050',\n  gutterBackground: 'transparent',\n  gutterForeground: '#8a919966',\n};\nexport function getTheme() {\n  return theme;\n}\nexport function setTheme(_theme) {\n  theme = _theme;\n}\n","import { Pattern, silence, register, pure, createParams } from '@strudel/core';\nimport { getDrawContext } from './draw.mjs';\n\nlet clearColor = '#22222210';\n\nPattern.prototype.animate = function ({ callback, sync = false, smear = 0.5 } = {}) {\n  window.frame && cancelAnimationFrame(window.frame);\n  const ctx = getDrawContext();\n  let { clientWidth: ww, clientHeight: wh } = ctx.canvas;\n  ww *= window.devicePixelRatio;\n  wh *= window.devicePixelRatio;\n  let smearPart = smear === 0 ? '99' : Number((1 - smear) * 100).toFixed(0);\n  smearPart = smearPart.length === 1 ? `0${smearPart}` : smearPart;\n  clearColor = `#200010${smearPart}`;\n  const render = (t) => {\n    let frame;\n    /*     if (sync) {\n      t = scheduler.now();\n      frame = this.queryArc(t, t);\n    } else { */\n    t = Math.round(t);\n    frame = this.slow(1000).queryArc(t, t);\n    // }\n    ctx.fillStyle = clearColor;\n    ctx.fillRect(0, 0, ww, wh);\n    frame.forEach((f) => {\n      let { x, y, w, h, s, r, angle = 0, fill = 'darkseagreen' } = f.value;\n      w *= ww;\n      h *= wh;\n      if (r !== undefined && angle !== undefined) {\n        const radians = angle * 2 * Math.PI;\n        const [cx, cy] = [(ww - w) / 2, (wh - h) / 2];\n        x = cx + Math.cos(radians) * r * cx;\n        y = cy + Math.sin(radians) * r * cy;\n      } else {\n        x *= ww - w;\n        y *= wh - h;\n      }\n      const val = { ...f.value, x, y, w, h };\n      ctx.fillStyle = fill;\n      if (s === 'rect') {\n        ctx.fillRect(x, y, w, h);\n      } else if (s === 'ellipse') {\n        ctx.beginPath();\n        ctx.ellipse(x + w / 2, y + h / 2, w / 2, h / 2, 0, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n      callback && callback(ctx, val, f);\n    });\n    window.frame = requestAnimationFrame(render);\n  };\n  window.frame = requestAnimationFrame(render);\n  return silence;\n};\n\nexport const { x, y, w, h, angle, r, fill, smear } = createParams('x', 'y', 'w', 'h', 'angle', 'r', 'fill', 'smear');\n\nexport const rescale = register('rescale', function (f, pat) {\n  return pat.mul(x(f).w(f).y(f).h(f));\n});\n\nexport const moveXY = register('moveXY', function (dx, dy, pat) {\n  return pat.add(x(dx).y(dy));\n});\n\nexport const zoomIn = register('zoomIn', function (f, pat) {\n  const d = pure(1).sub(f).div(2);\n  return pat.rescale(f).move(d, d);\n});\n","/*\npianoroll.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/canvas/pianoroll.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Pattern, noteToMidi, freqToMidi } from '@strudel/core';\nimport { getTheme, getDrawContext } from './draw.mjs';\n\nconst scale = (normalized, min, max) => normalized * (max - min) + min;\nconst getValue = (e) => {\n  let { value } = e;\n  if (typeof e.value !== 'object') {\n    value = { value };\n  }\n  let { note, n, freq, s } = value;\n  if (freq) {\n    return freqToMidi(freq);\n  }\n  note = note ?? n;\n  if (typeof note === 'string') {\n    try {\n      // TODO: n(run(32)).scale(\"D:minor\") fails when trying to query negative time..\n      return noteToMidi(note);\n    } catch (err) {\n      // console.warn(`error converting note to midi: ${err}`); // this spams to crazy\n      return 0;\n    }\n  }\n  if (typeof note === 'number') {\n    return note;\n  }\n  if (s) {\n    return '_' + s;\n  }\n  return value;\n};\n\nPattern.prototype.pianoroll = function (options = {}) {\n  let { cycles = 4, playhead = 0.5, overscan = 0, hideNegative = false, ctx = getDrawContext(), id = 1 } = options;\n\n  let from = -cycles * playhead;\n  let to = cycles * (1 - playhead);\n  const inFrame = (hap, t) => (!hideNegative || hap.whole.begin >= 0) && hap.isWithinTime(t + from, t + to);\n  this.draw(\n    (haps, time) => {\n      // BEGIN MKG PATCH\n      // Usually haps is much much larger than haps_from_outputs.\n      if (globalThis.haps_from_outputs) {\n      } else {\n        globalThis.haps_from_outputs = [];\n      }\n      if (globalThis.haps_from_outputs.length > 0) {\n        haps.push(...globalThis.haps_from_outputs);\n        haps = globalThis.haps_from_outputs.filter(inFrame);\n        globalThis.haps_from_outputs = haps;\n      }\n      // END MKG PATCH\n      pianoroll({\n      ...options,\n        time,\n        ctx,\n        haps: haps.filter((hap) => inFrame(hap, time)),\n      });\n    },\n    {\n      lookbehind: from - overscan,\n      lookahead: to + overscan,\n      id,\n    },\n  );\n  return this;\n};\n\n// this function allows drawing a pianoroll without ties to Pattern.prototype\n// it will probably replace the above in the future\n\n/**\n * Displays a midi-style piano roll\n *\n * @name pianoroll\n * @synonyms punchcard\n * @param {Object} options Object containing all the optional following parameters as key value pairs:\n * @param {integer} cycles number of cycles to be displayed at the same time - defaults to 4\n * @param {number} playhead location of the active notes on the time axis - 0 to 1, defaults to 0.5\n * @param {boolean} vertical displays the roll vertically - 0 by default\n * @param {boolean} labels displays labels on individual notes (see the label function) - 0 by default\n * @param {boolean} flipTime reverse the direction of the roll - 0 by default\n * @param {boolean} flipValues reverse the relative location of notes on the value axis - 0 by default\n * @param {number} overscan lookup X cycles outside of the cycles window to display notes in advance - 1 by default\n * @param {boolean} hideNegative hide notes with negative time (before starting playing the pattern) - 0 by default\n * @param {boolean} smear notes leave a solid trace - 0 by default\n * @param {boolean} fold notes takes the full value axis width - 0 by default\n * @param {string} active hexadecimal or CSS color of the active notes - defaults to #FFCA28\n * @param {string} inactive hexadecimal or CSS color of the inactive notes - defaults to #7491D2\n * @param {string} background hexadecimal or CSS color of the background - defaults to transparent\n * @param {string} playheadColor hexadecimal or CSS color of the line representing the play head - defaults to white\n * @param {boolean} fill notes are filled with color (otherwise only the label is displayed) - 0 by default\n * @param {boolean} fillActive active notes are filled with color - 0 by default\n * @param {boolean} stroke notes are shown with colored borders - 0 by default\n * @param {boolean} strokeActive active notes are shown with colored borders - 0 by default\n * @param {boolean} hideInactive only active notes are shown - 0 by default\n * @param {boolean} colorizeInactive use note color for inactive notes - 1 by default\n * @param {string} fontFamily define the font used by notes labels - defaults to 'monospace'\n * @param {integer} minMidi minimum note value to display on the value axis - defaults to 10\n * @param {integer} maxMidi maximum note value to display on the value axis - defaults to 90\n * @param {boolean} autorange automatically calculate the minMidi and maxMidi parameters - 0 by default\n *\n * @example\n * note(\"c2 a2 eb2\")\n * .euclid(5,8)\n * .s('sawtooth')\n * .lpenv(4).lpf(300)\n * ._pianoroll({ labels: 1 })\n */\nexport function pianoroll({\n  time,\n  haps,\n  cycles = 4,\n  playhead = 0.5,\n  flipTime = 0,\n  flipValues = 0,\n  hideNegative = false,\n  inactive = getTheme().foreground,\n  active = getTheme().foreground,\n  background = 'transparent',\n  smear = 0,\n  playheadColor = getTheme().foreground,\n  minMidi = 10,\n  maxMidi = 90,\n  autorange = 0,\n  timeframe: timeframeProp,\n  fold = 1,\n  vertical = 0,\n  labels = false,\n  fill = 1,\n  fillActive = false,\n  strokeActive = true,\n  stroke,\n  hideInactive = 0,\n  colorizeInactive = 1,\n  fontFamily,\n  ctx,\n  id,\n} = {}) {\n  const w = ctx.canvas.width;\n  const h = ctx.canvas.height;\n  let from = -cycles * playhead;\n  let to = cycles * (1 - playhead);\n\n  if (id) {\n    haps = haps.filter((hap) => hap.hasTag(id));\n  }\n\n  if (timeframeProp) {\n    console.warn('timeframe is deprecated! use from/to instead');\n    from = 0;\n    to = timeframeProp;\n  }\n  const timeAxis = vertical ? h : w;\n  const valueAxis = vertical ? w : h;\n  let timeRange = vertical ? [timeAxis, 0] : [0, timeAxis]; // pixel range for time\n  const timeExtent = to - from; // number of seconds that fit inside the canvas frame\n  const valueRange = vertical ? [0, valueAxis] : [valueAxis, 0]; // pixel range for values\n  let valueExtent = maxMidi - minMidi + 1; // number of \"slots\" for values, overwritten if autorange true\n  let barThickness = valueAxis / valueExtent; // pixels per value, overwritten if autorange true\n  let foldValues = [];\n  flipTime && timeRange.reverse();\n  flipValues && valueRange.reverse();\n\n  // onQuery\n  const { min, max, values } = haps.reduce(\n    ({ min, max, values }, e) => {\n      const v = getValue(e);\n      return {\n        min: v < min ? v : min,\n        max: v > max ? v : max,\n        values: values.includes(v) ? values : [...values, v],\n      };\n    },\n    { min: Infinity, max: -Infinity, values: [] },\n  );\n  if (autorange) {\n    minMidi = min;\n    maxMidi = max;\n    valueExtent = maxMidi - minMidi + 1;\n  }\n  foldValues = values.sort((a, b) =>\n    typeof a === 'number' && typeof b === 'number'\n      ? a - b\n      : typeof a === 'number'\n        ? 1\n        : String(a).localeCompare(String(b)),\n  );\n  barThickness = fold ? valueAxis / foldValues.length : valueAxis / valueExtent;\n  ctx.fillStyle = background;\n  ctx.globalAlpha = 1; // reset!\n  if (!smear) {\n    ctx.clearRect(0, 0, w, h);\n    ctx.fillRect(0, 0, w, h);\n  }\n  haps.forEach((event) => {\n    const isActive = event.whole.begin <= time && event.endClipped > time;\n    let strokeCurrent = stroke ?? (strokeActive && isActive);\n    let fillCurrent = (!isActive && fill) || (isActive && fillActive);\n    if (hideInactive && !isActive) {\n      return;\n    }\n    let color = event.value?.color;\n    active = color || active;\n    inactive = colorizeInactive ? color || inactive : inactive;\n    color = isActive ? active : inactive;\n    ctx.fillStyle = fillCurrent ? color : 'transparent';\n    ctx.strokeStyle = color;\n    const { velocity = 1, gain = 1 } = event.value || {};\n    ctx.globalAlpha = velocity * gain;\n    const timeProgress = (event.whole.begin - (flipTime ? to : from)) / timeExtent;\n    const timePx = scale(timeProgress, ...timeRange);\n    let durationPx = scale(event.duration / timeExtent, 0, timeAxis);\n    const value = getValue(event);\n    const valueProgress = fold\n      ? foldValues.indexOf(value) / foldValues.length\n      : (Number(value) - minMidi) / valueExtent;\n    const valuePx = scale(valueProgress, ...valueRange);\n    let margin = 0;\n    const offset = scale(time / timeExtent, ...timeRange);\n    let coords;\n    if (vertical) {\n      coords = [\n        valuePx + 1 - (flipValues ? barThickness : 0), // x\n        timeAxis - offset + timePx + margin + 1 - (flipTime ? 0 : durationPx), // y\n        barThickness - 2, // width\n        durationPx - 2, // height\n      ];\n    } else {\n      coords = [\n        timePx - offset + margin + 1 - (flipTime ? durationPx : 0), // x\n        valuePx + 1 - (flipValues ? 0 : barThickness), // y\n        durationPx - 2, // widith\n        barThickness - 2, // height\n      ];\n    }\n    /* const xFactor = Math.sin(performance.now() / 500) + 1;\n      coords[0] *= xFactor; */\n\n    if (strokeCurrent) {\n      ctx.strokeRect(...coords);\n    }\n    if (fillCurrent) {\n      ctx.fillRect(...coords);\n    }\n    //ctx.ellipse(...ellipseFromRect(...coords))\n    if (labels) {\n      const defaultLabel = event.value.note ?? event.value.s + (event.value.n ? `:${event.value.n}` : '');\n      const { label: inactiveLabel, activeLabel } = event.value;\n      const customLabel = isActive ? activeLabel || inactiveLabel : inactiveLabel;\n      const label = customLabel ?? defaultLabel;\n      let measure = vertical ? durationPx : barThickness * 0.75;\n      ctx.font = `${measure}px ${fontFamily || 'monospace'}`;\n      // font color\n      ctx.fillStyle = /* isActive &&  */ !fillCurrent ? color : 'black';\n      ctx.textBaseline = 'top';\n      ctx.fillText(label, ...coords);\n    }\n  });\n  ctx.globalAlpha = 1; // reset!\n  const playheadPosition = scale(-from / timeExtent, ...timeRange);\n  // draw playhead\n  ctx.strokeStyle = playheadColor;\n  ctx.beginPath();\n  if (vertical) {\n    ctx.moveTo(0, playheadPosition);\n    ctx.lineTo(valueAxis, playheadPosition);\n  } else {\n    ctx.moveTo(playheadPosition, 0);\n    ctx.lineTo(playheadPosition, valueAxis);\n  }\n  ctx.stroke();\n  return this;\n}\n\nexport function getDrawOptions(drawTime, options = {}) {\n  let [lookbehind, lookahead] = drawTime;\n  lookbehind = Math.abs(lookbehind);\n  const cycles = lookahead + lookbehind;\n  const playhead = cycles !== 0 ? lookbehind / cycles : 0;\n  return { fold: 1, ...options, cycles, playhead };\n}\n\nexport const getPunchcardPainter =\n  (options = {}) =>\n  (ctx, time, haps, drawTime) =>\n    pianoroll({ ctx, time, haps, ...getDrawOptions(drawTime, options) });\n\nPattern.prototype.punchcard = function (options) {\n  return this.onPaint(getPunchcardPainter(options));\n};\n\n/**\n * Displays a vertical pianoroll with event labels.\n * Supports all the same options as pianoroll.\n *\n * @name wordfall\n */\nPattern.prototype.wordfall = function (options) {\n  return this.punchcard({ vertical: 1, labels: 1, stroke: 0, fillActive: 1, active: 'white', ...options });\n};\n\n/* Pattern.prototype.pianoroll = function (options) {\n  return this.onPaint((ctx, time, haps, drawTime) =>\n    pianoroll({ ctx, time, haps, ...getDrawOptions(drawTime, { fold: 0, ...options }) }),\n  );\n}; */\n\nexport function drawPianoroll(options) {\n  const { drawTime, ...rest } = options;\n  pianoroll({ ...getDrawOptions(drawTime), ...rest });\n}\n","import { Pattern } from '@strudel/core';\nimport { getTheme } from './draw.mjs';\n\n// polar coords -> xy\nfunction fromPolar(angle, radius, cx, cy) {\n  const radians = ((angle - 90) * Math.PI) / 180;\n  return [cx + Math.cos(radians) * radius, cy + Math.sin(radians) * radius];\n}\n\nconst xyOnSpiral = (angle, margin, cx, cy, rotate = 0) => fromPolar((angle + rotate) * 360, margin * angle, cx, cy); // TODO: logSpiral\n\n// draw spiral / segment of spiral\nfunction spiralSegment(options) {\n  let {\n    ctx,\n    from = 0,\n    to = 3,\n    margin = 50,\n    cx = 100,\n    cy = 100,\n    rotate = 0,\n    thickness = margin / 2,\n    color = getTheme().foreground,\n    cap = 'round',\n    stretch = 1,\n    fromOpacity = 1,\n    toOpacity = 1,\n  } = options;\n  from *= stretch;\n  to *= stretch;\n  rotate *= stretch;\n  ctx.lineWidth = thickness;\n  ctx.lineCap = cap;\n  ctx.strokeStyle = color;\n  ctx.globalAlpha = fromOpacity;\n\n  ctx.beginPath();\n  let [sx, sy] = xyOnSpiral(from, margin, cx, cy, rotate);\n  ctx.moveTo(sx, sy);\n\n  const increment = 1 / 60;\n  let angle = from;\n  while (angle <= to) {\n    const [x, y] = xyOnSpiral(angle, margin, cx, cy, rotate);\n    //ctx.lineWidth = angle*thickness;\n    ctx.globalAlpha = ((angle - from) / (to - from)) * toOpacity;\n    ctx.lineTo(x, y);\n    angle += increment;\n  }\n  ctx.stroke();\n}\n\nfunction drawSpiral(options) {\n  let {\n    stretch = 1,\n    size = 80,\n    thickness = size / 2,\n    cap = 'butt', // round butt squar,\n    inset = 3, // start angl,\n    playheadColor = '#ffffff',\n    playheadLength = 0.02,\n    playheadThickness = thickness,\n    padding = 0,\n    steady = 1,\n    activeColor = getTheme().foreground,\n    inactiveColor = getTheme().gutterForeground,\n    colorizeInactive = 0,\n    fade = true,\n    // logSpiral = true,\n    ctx,\n    time,\n    haps,\n    drawTime,\n    id,\n  } = options;\n\n  if (id) {\n    haps = haps.filter((hap) => hap.hasTag(id));\n  }\n\n  const [w, h] = [ctx.canvas.width, ctx.canvas.height];\n  ctx.clearRect(0, 0, w * 2, h * 2);\n  const [cx, cy] = [w / 2, h / 2];\n  const settings = {\n    margin: size / stretch,\n    cx,\n    cy,\n    stretch,\n    cap,\n    thickness,\n  };\n\n  const playhead = {\n    ...settings,\n    thickness: playheadThickness,\n    from: inset - playheadLength,\n    to: inset,\n    color: playheadColor,\n  };\n\n  const [min] = drawTime;\n  const rotate = steady * time;\n  haps.forEach((hap) => {\n    const isActive = hap.whole.begin <= time && hap.endClipped > time;\n    const from = hap.whole.begin - time + inset;\n    const to = hap.endClipped - time + inset - padding;\n    const hapColor = hap.value?.color || activeColor;\n    const color = colorizeInactive || isActive ? hapColor : inactiveColor;\n    const opacity = fade ? 1 - Math.abs((hap.whole.begin - time) / min) : 1;\n    spiralSegment({\n      ctx,\n      ...settings,\n      from,\n      to,\n      rotate,\n      color,\n      fromOpacity: opacity,\n      toOpacity: opacity,\n    });\n  });\n  spiralSegment({\n    ctx,\n    ...playhead,\n    rotate,\n  });\n}\n\n/**\n * Displays a spiral visual.\n *\n * @name spiral\n * @param {Object} options Object containing all the optional following parameters as key value pairs:\n * @param {number} stretch controls the rotations per cycle ratio, where 1 = 1 cycle / 360 degrees\n * @param {number} size the diameter of the spiral\n * @param {number} thickness line thickness\n * @param {string} cap style of line ends: butt (default), round, square\n * @param {string} inset number of rotations before spiral starts (default 3)\n * @param {string} playheadColor color of playhead, defaults to white\n * @param {number} playheadLength length of playhead in rotations, defaults to 0.02\n * @param {number} playheadThickness thickness of playheadrotations, defaults to thickness\n * @param {number} padding space around spiral\n * @param {number} steady steadyness of spiral vs playhead. 1 = spiral doesn't move, playhead does.\n * @param {number} activeColor color of active segment. defaults to foreground of theme\n * @param {number} inactiveColor color of inactive segments. defaults to gutterForeground of theme\n * @param {boolean} colorizeInactive wether or not to colorize inactive segments, defaults to 0\n * @param {boolean} fade wether or not past and future should fade out. defaults to 1\n * @param {boolean} logSpiral wether or not the spiral should be logarithmic. defaults to 0\n * @example\n * note(\"c2 a2 eb2\")\n * .euclid(5,8)\n * .s('sawtooth')\n * .lpenv(4).lpf(300)\n * ._spiral({ steady: .96 })\n */\nPattern.prototype.spiral = function (options = {}) {\n  return this.onPaint((ctx, time, haps, drawTime) => drawSpiral({ ctx, time, haps, drawTime, ...options }));\n};\n","import { Pattern, midiToFreq, getFrequency } from '@strudel/core';\nimport { getTheme, getDrawContext } from './draw.mjs';\n\nconst c = midiToFreq(36);\n\nconst circlePos = (cx, cy, radius, angle) => {\n  angle = angle * Math.PI * 2;\n  const x = Math.sin(angle) * radius + cx;\n  const y = Math.cos(angle) * radius + cy;\n  return [x, y];\n};\n\nconst freq2angle = (freq, root) => {\n  return 0.5 - (Math.log2(freq / root) % 1);\n};\n\nexport function pitchwheel({\n  haps,\n  ctx,\n  id,\n  hapcircles = 1,\n  circle = 0,\n  edo = 12,\n  root = c,\n  thickness = 3,\n  hapRadius = 6,\n  mode = 'flake',\n  margin = 10,\n} = {}) {\n  const connectdots = mode === 'polygon';\n  const centerlines = mode === 'flake';\n  const w = ctx.canvas.width;\n  const h = ctx.canvas.height;\n  ctx.clearRect(0, 0, w, h);\n  const color = getTheme().foreground;\n\n  const size = Math.min(w, h);\n  const radius = size / 2 - thickness / 2 - hapRadius - margin;\n  const centerX = w / 2;\n  const centerY = h / 2;\n\n  if (id) {\n    haps = haps.filter((hap) => hap.hasTag(id));\n  }\n  ctx.strokeStyle = color;\n  ctx.fillStyle = color;\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = thickness;\n\n  if (circle) {\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI);\n    ctx.stroke();\n  }\n\n  if (edo) {\n    Array.from({ length: edo }, (_, i) => {\n      const angle = freq2angle(root * Math.pow(2, i / edo), root);\n      const [x, y] = circlePos(centerX, centerY, radius, angle);\n      ctx.beginPath();\n      ctx.arc(x, y, hapRadius, 0, 2 * Math.PI);\n      ctx.fill();\n    });\n    ctx.stroke();\n  }\n\n  let shape = [];\n  ctx.lineWidth = hapRadius;\n  haps.forEach((hap) => {\n    let freq;\n    try {\n      freq = getFrequency(hap);\n    } catch (err) {\n      return;\n    }\n    const angle = freq2angle(freq, root);\n    const [x, y] = circlePos(centerX, centerY, radius, angle);\n    const hapColor = hap.value.color || color;\n    ctx.strokeStyle = hapColor;\n    ctx.fillStyle = hapColor;\n    const { velocity = 1, gain = 1 } = hap.value || {};\n    const alpha = velocity * gain;\n    ctx.globalAlpha = alpha;\n    shape.push([x, y, angle, hapColor, alpha]);\n    ctx.beginPath();\n    if (hapcircles) {\n      ctx.moveTo(x + hapRadius, y);\n      ctx.arc(x, y, hapRadius, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n    if (centerlines) {\n      ctx.moveTo(centerX, centerY);\n      ctx.lineTo(x, y);\n    }\n    ctx.stroke();\n  });\n\n  ctx.strokeStyle = color;\n  ctx.globalAlpha = 1;\n  if (connectdots && shape.length) {\n    shape = shape.sort((a, b) => a[2] - b[2]);\n    ctx.beginPath();\n    ctx.moveTo(shape[0][0], shape[0][1]);\n    shape.forEach(([x, y, _, color, alpha]) => {\n      ctx.strokeStyle = color;\n      ctx.globalAlpha = alpha;\n      ctx.lineTo(x, y);\n    });\n    ctx.lineTo(shape[0][0], shape[0][1]);\n    ctx.stroke();\n  }\n\n  return;\n}\n\n/**\n * Renders a pitch circle to visualize frequencies within one octave\n * @name pitchwheel\n * @param {number} hapcircles\n * @param {number} circle\n * @param {number} edo\n * @param {string} root\n * @param {number} thickness\n * @param {number} hapRadius\n * @param {string} mode\n * @param {number} margin\n * @example\n * n(\"0 .. 12\").scale(\"C:chromatic\")\n * .s(\"sawtooth\")\n * .lpf(500)\n * ._pitchwheel()\n */\nPattern.prototype.pitchwheel = function (options = {}) {\n  let { ctx = getDrawContext(), id = 1 } = options;\n  return this.tag(id).onPaint((_, time, haps) =>\n    pitchwheel({\n      ...options,\n      time,\n      ctx,\n      haps: haps.filter((hap) => hap.isActive(time)),\n      id,\n    }),\n  );\n};\n","import { clean } from '../clean-stores/index.js'\n\nlet listenerQueue = []\n\nexport let atom = (initialValue, level) => {\n  let listeners = []\n  let $atom = {\n    get() {\n      if (!$atom.lc) {\n        $atom.listen(() => {})()\n      }\n      return $atom.value\n    },\n    l: level || 0,\n    lc: 0,\n    listen(listener, listenerLevel) {\n      $atom.lc = listeners.push(listener, listenerLevel || $atom.l) / 2\n\n      return () => {\n        let index = listeners.indexOf(listener)\n        if (~index) {\n          listeners.splice(index, 2)\n          if (!--$atom.lc) $atom.off()\n        }\n      }\n    },\n    notify(changedKey) {\n      let runListenerQueue = !listenerQueue.length\n      for (let i = 0; i < listeners.length; i += 2) {\n        listenerQueue.push(\n          listeners[i],\n          listeners[i + 1],\n          $atom.value,\n          changedKey,\n        )\n      }\n\n      if (runListenerQueue) {\n        for (let i = 0; i < listenerQueue.length; i += 4) {\n          let skip\n          for (let j = i + 1; !skip && (j += 4) < listenerQueue.length;) {\n            if (listenerQueue[j] < listenerQueue[i + 1]) {\n              skip = listenerQueue.push(\n               listenerQueue[i],\n               listenerQueue[i + 1],\n               listenerQueue[i + 2],\n               listenerQueue[i + 3]\n             )\n            }\n          }\n\n          if (!skip) {\n            listenerQueue[i](listenerQueue[i + 2], listenerQueue[i + 3])\n          }\n        }\n        listenerQueue.length = 0\n      }\n    },\n    off() {}, /* It will be called on last listener unsubscribing.\n                 We will redefine it in onMount and onStop. */\n    set(data) {\n      if ($atom.value !== data) {\n        $atom.value = data\n        $atom.notify()\n      }\n    },\n    subscribe(listener, listenerLevel) {\n      let unbind = $atom.listen(listener, listenerLevel)\n      listener($atom.value)\n      return unbind\n    },\n    value: initialValue\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    $atom[clean] = () => {\n      listeners = []\n      $atom.lc = 0\n      $atom.off()\n    }\n  }\n\n  return $atom\n}\n","import { atom } from '../atom/index.js'\n\nexport let map = (value = {}) => {\n  let $map = atom(value)\n\n  $map.setKey = function (key, newValue) {\n    if (typeof newValue === 'undefined') {\n      if (key in $map.value) {\n        $map.value = { ...$map.value }\n        delete $map.value[key]\n        $map.notify(key)\n      }\n    } else if ($map.value[key] !== newValue) {\n      $map.value = {\n        ...$map.value,\n        [key]: newValue\n      }\n      $map.notify(key)\n    }\n  }\n\n  return $map\n}\n"],"names":["getDrawContext","id","options","contextType","pixelated","pixelRatio","canvas","timeout","animationFrames","stopAnimationFrame","stopAllAnimations","replID","memory","Pattern","fn","lookbehind","lookahead","__t","getTime","h","newFuture","last","animate","_t","t","begin","haps","cleanupDraw","clearScreen","ctx","painter","state","painters","Framer","onFrame","onError","self","frame","updateHighlights","time","err","Drawer","onDraw","drawTime","phase","scheduler","_","end","futureHaps","getComputedPropertyValue","name","theme","getTheme","setTheme","_theme","clearColor","callback","sync","smear","ww","wh","smearPart","render","f","x","y","w","s","r","angle","fill","radians","cx","cy","val","silence","createParams","rescale","register","pat","moveXY","dx","dy","zoomIn","d","pure","scale","normalized","min","max","getValue","e","value","note","n","freq","freqToMidi","noteToMidi","cycles","playhead","overscan","hideNegative","from","to","inFrame","hap","pianoroll","flipTime","flipValues","inactive","active","background","playheadColor","minMidi","maxMidi","autorange","timeframeProp","fold","vertical","labels","fillActive","strokeActive","stroke","hideInactive","colorizeInactive","fontFamily","timeAxis","valueAxis","timeRange","timeExtent","valueRange","valueExtent","barThickness","foldValues","values","v","a","b","event","isActive","strokeCurrent","fillCurrent","color","velocity","gain","timeProgress","timePx","durationPx","valueProgress","valuePx","margin","offset","coords","defaultLabel","inactiveLabel","activeLabel","label","measure","playheadPosition","getDrawOptions","getPunchcardPainter","drawPianoroll","rest","fromPolar","radius","xyOnSpiral","rotate","spiralSegment","thickness","cap","stretch","fromOpacity","toOpacity","sx","sy","increment","drawSpiral","size","inset","playheadLength","playheadThickness","padding","steady","activeColor","inactiveColor","fade","settings","hapColor","opacity","c","midiToFreq","circlePos","freq2angle","root","pitchwheel","hapcircles","circle","edo","hapRadius","mode","connectdots","centerlines","centerX","centerY","i","shape","getFrequency","alpha","listenerQueue","atom","initialValue","level","listeners","$atom","listener","listenerLevel","index","changedKey","runListenerQueue","skip","j","data","unbind","map","$map","key","newValue"],"mappings":"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","x_google_ignoreList":[5,6]}