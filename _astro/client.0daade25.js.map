{"version":3,"file":"client.0daade25.js","sources":["../../../node_modules/.pnpm/@astrojs+react@2.1.1_@types+react-dom@18.2.1_@types+react@18.2.0_react-dom@18.2.0_react@18.2.0/node_modules/@astrojs/react/static-html.js","../../../node_modules/.pnpm/@astrojs+react@2.1.1_@types+react-dom@18.2.1_@types+react@18.2.0_react-dom@18.2.0_react@18.2.0/node_modules/@astrojs/react/client.js"],"sourcesContent":["import { createElement as h } from 'react';\n\n/**\n * Astro passes `children` as a string of HTML, so we need\n * a wrapper `div` to render that content as VNodes.\n *\n * As a bonus, we can signal to React that this subtree is\n * entirely static and will never change via `shouldComponentUpdate`.\n */\nconst StaticHtml = ({ value, name }) => {\n\tif (!value) return null;\n\treturn h('astro-slot', {\n\t\tname,\n\t\tsuppressHydrationWarning: true,\n\t\tdangerouslySetInnerHTML: { __html: value },\n\t});\n};\n\n/**\n * This tells React to opt-out of re-rendering this subtree,\n * In addition to being a performance optimization,\n * this also allows other frameworks to attach to `children`.\n *\n * See https://preactjs.com/guide/v8/external-dom-mutations\n */\nStaticHtml.shouldComponentUpdate = () => false;\n\nexport default StaticHtml;\n","import { createElement, startTransition } from 'react';\nimport { createRoot, hydrateRoot } from 'react-dom/client';\nimport StaticHtml from './static-html.js';\n\nfunction isAlreadyHydrated(element) {\n\tfor (const key in element) {\n\t\tif (key.startsWith('__reactContainer')) {\n\t\t\treturn key;\n\t\t}\n\t}\n}\n\nexport default (element) =>\n\t(Component, props, { default: children, ...slotted }, { client }) => {\n\t\tif (!element.hasAttribute('ssr')) return;\n\t\tfor (const [key, value] of Object.entries(slotted)) {\n\t\t\tprops[key] = createElement(StaticHtml, { value, name: key });\n\t\t}\n\t\tconst componentEl = createElement(\n\t\t\tComponent,\n\t\t\tprops,\n\t\t\tchildren != null ? createElement(StaticHtml, { value: children }) : children\n\t\t);\n\t\tconst rootKey = isAlreadyHydrated(element);\n\t\t// HACK: delete internal react marker for nested components to suppress aggressive warnings\n\t\tif (rootKey) {\n\t\t\tdelete element[rootKey];\n\t\t}\n\t\tif (client === 'only') {\n\t\t\treturn startTransition(() => {\n\t\t\t\tcreateRoot(element).render(componentEl);\n\t\t\t});\n\t\t}\n\t\treturn startTransition(() => {\n\t\t\thydrateRoot(element, componentEl);\n\t\t});\n\t};\n"],"names":["StaticHtml","value","name","h","isAlreadyHydrated","element","key","client","Component","props","children","slotted","createElement","componentEl","rootKey","startTransition","createRoot","hydrateRoot"],"mappings":"wFASA,MAAMA,EAAa,CAAC,CAAE,MAAAC,EAAO,KAAAC,KACvBD,EACEE,EAAAA,cAAE,aAAc,CACtB,KAAAD,EACA,yBAA0B,GAC1B,wBAAyB,CAAE,OAAQD,CAAO,CAC5C,CAAE,EALkB,KAepBD,EAAW,sBAAwB,IAAM,GCrBzC,SAASI,EAAkBC,EAAS,CACnC,UAAWC,KAAOD,EACjB,GAAIC,EAAI,WAAW,kBAAkB,EACpC,OAAOA,CAGV,CAEA,MAAAC,EAAgBF,GACf,CAACG,EAAWC,EAAO,CAAE,QAASC,EAAU,GAAGC,CAAO,EAAI,CAAE,OAAAJ,KAAa,CACpE,GAAI,CAACF,EAAQ,aAAa,KAAK,EAAG,OAClC,SAAW,CAACC,EAAKL,CAAK,IAAK,OAAO,QAAQU,CAAO,EAChDF,EAAMH,CAAG,EAAIM,gBAAcZ,EAAY,CAAE,MAAAC,EAAO,KAAMK,CAAG,CAAE,EAE5D,MAAMO,EAAcD,EAAa,cAChCJ,EACAC,EACAC,GAAY,KAAOE,gBAAcZ,EAAY,CAAE,MAAOU,CAAU,CAAA,EAAIA,CACvE,EACQI,EAAUV,EAAkBC,CAAO,EAKzC,OAHIS,GACH,OAAOT,EAAQS,CAAO,EAEnBP,IAAW,OACPQ,EAAe,gBAAC,IAAM,CAC5BC,EAAWX,CAAO,EAAE,OAAOQ,CAAW,CAC1C,CAAI,EAEKE,EAAe,gBAAC,IAAM,CAC5BE,EAAYZ,EAASQ,CAAW,CACnC,CAAG,CACD","x_google_ignoreList":[0,1]}