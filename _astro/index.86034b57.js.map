{"version":3,"file":"index.86034b57.js","sources":["../../../node_modules/.pnpm/fraction.js@4.2.0/node_modules/fraction.js/fraction.js","../../../packages/core/fraction.mjs","../../../packages/core/timespan.mjs","../../../packages/core/hap.mjs","../../../packages/core/state.mjs","../../../packages/core/util.mjs","../../../packages/core/value.mjs","../../../packages/core/drawLine.mjs","../../../packages/core/logger.mjs","../../../packages/core/pattern.mjs","../../../packages/core/controls.mjs","../../../packages/core/euclid.mjs","../../../packages/core/signal.mjs","../../../packages/core/speak.mjs","../../../packages/core/evaluate.mjs","../../../packages/core/zyklus.mjs","../../../packages/core/cyclist.mjs","../../../packages/core/time.mjs","../../../packages/core/repl.mjs","../../../packages/core/draw.mjs","../../../packages/core/animate.mjs","../../../packages/core/pianoroll.mjs","../../../packages/core/spiral.mjs","../../../packages/core/ui.mjs","../../../packages/core/index.mjs","../../../node_modules/.pnpm/nanostores@0.8.1/node_modules/nanostores/atom/index.js","../../../node_modules/.pnpm/nanostores@0.8.1/node_modules/nanostores/map/index.js"],"sourcesContent":["/**\n * @license Fraction.js v4.2.0 05/03/2022\n * https://www.xarg.org/2014/03/rational-numbers-in-javascript/\n *\n * Copyright (c) 2021, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <nominator>, 1 => <denominator> ]\n * [ n => <nominator>, d => <denominator> ]\n *\n * Integer form\n * - Single integer value\n *\n * Double form\n * - Single double value\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n *\n * var f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n\n(function(root) {\n\n  \"use strict\";\n\n  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\n  var MAX_CYCLE_LEN = 2000;\n\n  // Parsed data to avoid calling \"new\" all the time\n  var P = {\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1\n  };\n\n  function assign(n, s) {\n\n    if (isNaN(n = parseInt(n, 10))) {\n      throw Fraction['InvalidParameter'];\n    }\n    return n * s;\n  }\n\n  // Creates a new Fraction internally without the need of the bulky constructor\n  function newFraction(n, d) {\n\n    if (d === 0) {\n      throw Fraction['DivisionByZero'];\n    }\n\n    var f = Object.create(Fraction.prototype);\n    f[\"s\"] = n < 0 ? -1 : 1;\n\n    n = n < 0 ? -n : n;\n\n    var a = gcd(n, d);\n\n    f[\"n\"] = n / a;\n    f[\"d\"] = d / a;\n    return f;\n  }\n\n  function factorize(num) {\n\n    var factors = {};\n\n    var n = num;\n    var i = 2;\n    var s = 4;\n\n    while (s <= n) {\n\n      while (n % i === 0) {\n        n/= i;\n        factors[i] = (factors[i] || 0) + 1;\n      }\n      s+= 1 + 2 * i++;\n    }\n\n    if (n !== num) {\n      if (n > 1)\n        factors[n] = (factors[n] || 0) + 1;\n    } else {\n      factors[num] = (factors[num] || 0) + 1;\n    }\n    return factors;\n  }\n\n  var parse = function(p1, p2) {\n\n    var n = 0, d = 1, s = 1;\n    var v = 0, w = 0, x = 0, y = 1, z = 1;\n\n    var A = 0, B = 1;\n    var C = 1, D = 1;\n\n    var N = 10000000;\n    var M;\n\n    if (p1 === undefined || p1 === null) {\n      /* void */\n    } else if (p2 !== undefined) {\n      n = p1;\n      d = p2;\n      s = n * d;\n\n      if (n % 1 !== 0 || d % 1 !== 0) {\n        throw Fraction['NonIntegerParameter'];\n      }\n\n    } else\n      switch (typeof p1) {\n\n        case \"object\":\n          {\n            if (\"d\" in p1 && \"n\" in p1) {\n              n = p1[\"n\"];\n              d = p1[\"d\"];\n              if (\"s\" in p1)\n                n*= p1[\"s\"];\n            } else if (0 in p1) {\n              n = p1[0];\n              if (1 in p1)\n                d = p1[1];\n            } else {\n              throw Fraction['InvalidParameter'];\n            }\n            s = n * d;\n            break;\n          }\n        case \"number\":\n          {\n            if (p1 < 0) {\n              s = p1;\n              p1 = -p1;\n            }\n\n            if (p1 % 1 === 0) {\n              n = p1;\n            } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow\n\n              if (p1 >= 1) {\n                z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));\n                p1/= z;\n              }\n\n              // Using Farey Sequences\n              // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/\n\n              while (B <= N && D <= N) {\n                M = (A + C) / (B + D);\n\n                if (p1 === M) {\n                  if (B + D <= N) {\n                    n = A + C;\n                    d = B + D;\n                  } else if (D > B) {\n                    n = C;\n                    d = D;\n                  } else {\n                    n = A;\n                    d = B;\n                  }\n                  break;\n\n                } else {\n\n                  if (p1 > M) {\n                    A+= C;\n                    B+= D;\n                  } else {\n                    C+= A;\n                    D+= B;\n                  }\n\n                  if (B > N) {\n                    n = C;\n                    d = D;\n                  } else {\n                    n = A;\n                    d = B;\n                  }\n                }\n              }\n              n*= z;\n            } else if (isNaN(p1) || isNaN(p2)) {\n              d = n = NaN;\n            }\n            break;\n          }\n        case \"string\":\n          {\n            B = p1.match(/\\d+|./g);\n\n            if (B === null)\n              throw Fraction['InvalidParameter'];\n\n            if (B[A] === '-') {// Check for minus sign at the beginning\n              s = -1;\n              A++;\n            } else if (B[A] === '+') {// Check for plus sign at the beginning\n              A++;\n            }\n\n            if (B.length === A + 1) { // Check if it's just a simple number \"1234\"\n              w = assign(B[A++], s);\n            } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number\n\n              if (B[A] !== '.') { // Handle 0.5 and .5\n                v = assign(B[A++], s);\n              }\n              A++;\n\n              // Check for decimal places\n              if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === \"'\" && B[A + 3] === \"'\") {\n                w = assign(B[A], s);\n                y = Math.pow(10, B[A].length);\n                A++;\n              }\n\n              // Check for repeating places\n              if (B[A] === '(' && B[A + 2] === ')' || B[A] === \"'\" && B[A + 2] === \"'\") {\n                x = assign(B[A + 1], s);\n                z = Math.pow(10, B[A + 1].length) - 1;\n                A+= 3;\n              }\n\n            } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction \"123/456\" or \"123:456\"\n              w = assign(B[A], s);\n              y = assign(B[A + 2], 1);\n              A+= 3;\n            } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction \"123 1/2\"\n              v = assign(B[A], s);\n              w = assign(B[A + 2], s);\n              y = assign(B[A + 4], 1);\n              A+= 5;\n            }\n\n            if (B.length <= A) { // Check for more tokens on the stack\n              d = y * z;\n              s = /* void */\n              n = x + d * v + z * w;\n              break;\n            }\n\n            /* Fall through on error */\n          }\n        default:\n          throw Fraction['InvalidParameter'];\n      }\n\n    if (d === 0) {\n      throw Fraction['DivisionByZero'];\n    }\n\n    P[\"s\"] = s < 0 ? -1 : 1;\n    P[\"n\"] = Math.abs(n);\n    P[\"d\"] = Math.abs(d);\n  };\n\n  function modpow(b, e, m) {\n\n    var r = 1;\n    for (; e > 0; b = (b * b) % m, e >>= 1) {\n\n      if (e & 1) {\n        r = (r * b) % m;\n      }\n    }\n    return r;\n  }\n\n\n  function cycleLen(n, d) {\n\n    for (; d % 2 === 0;\n      d/= 2) {\n    }\n\n    for (; d % 5 === 0;\n      d/= 5) {\n    }\n\n    if (d === 1) // Catch non-cyclic numbers\n      return 0;\n\n    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n    // 10^(d-1) % d == 1\n    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n    // as we want to translate the numbers to strings.\n\n    var rem = 10 % d;\n    var t = 1;\n\n    for (; rem !== 1; t++) {\n      rem = rem * 10 % d;\n\n      if (t > MAX_CYCLE_LEN)\n        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n    }\n    return t;\n  }\n\n\n  function cycleStart(n, d, len) {\n\n    var rem1 = 1;\n    var rem2 = modpow(10, len, d);\n\n    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)\n      // Solve 10^s == 10^(s+t) (mod d)\n\n      if (rem1 === rem2)\n        return t;\n\n      rem1 = rem1 * 10 % d;\n      rem2 = rem2 * 10 % d;\n    }\n    return 0;\n  }\n\n  function gcd(a, b) {\n\n    if (!a)\n      return b;\n    if (!b)\n      return a;\n\n    while (1) {\n      a%= b;\n      if (!a)\n        return b;\n      b%= a;\n      if (!b)\n        return a;\n    }\n  };\n\n  /**\n   * Module constructor\n   *\n   * @constructor\n   * @param {number|Fraction=} a\n   * @param {number=} b\n   */\n  function Fraction(a, b) {\n\n    parse(a, b);\n\n    if (this instanceof Fraction) {\n      a = gcd(P[\"d\"], P[\"n\"]); // Abuse variable a\n      this[\"s\"] = P[\"s\"];\n      this[\"n\"] = P[\"n\"] / a;\n      this[\"d\"] = P[\"d\"] / a;\n    } else {\n      return newFraction(P['s'] * P['n'], P['d']);\n    }\n  }\n\n  Fraction['DivisionByZero'] = new Error(\"Division by Zero\");\n  Fraction['InvalidParameter'] = new Error(\"Invalid argument\");\n  Fraction['NonIntegerParameter'] = new Error(\"Parameters must be integer\");\n\n  Fraction.prototype = {\n\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1,\n\n    /**\n     * Calculates the absolute value\n     *\n     * Ex: new Fraction(-4).abs() => 4\n     **/\n    \"abs\": function() {\n\n      return newFraction(this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Inverts the sign of the current fraction\n     *\n     * Ex: new Fraction(-4).neg() => 4\n     **/\n    \"neg\": function() {\n\n      return newFraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Adds two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n     **/\n    \"add\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Subtracts two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n     **/\n    \"sub\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Multiplies two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n     **/\n    \"mul\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"],\n        this[\"d\"] * P[\"d\"]\n      );\n    },\n\n    /**\n     * Divides two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n     **/\n    \"div\": function(a, b) {\n\n      parse(a, b);\n      return newFraction(\n        this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"],\n        this[\"d\"] * P[\"n\"]\n      );\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * Ex: new Fraction(\"-17.(345)\").clone()\n     **/\n    \"clone\": function() {\n      return newFraction(this['s'] * this['n'], this['d']);\n    },\n\n    /**\n     * Calculates the modulo of two rational numbers - a more precise fmod\n     *\n     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n     **/\n    \"mod\": function(a, b) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return new Fraction(NaN);\n      }\n\n      if (a === undefined) {\n        return newFraction(this[\"s\"] * this[\"n\"] % this[\"d\"], 1);\n      }\n\n      parse(a, b);\n      if (0 === P[\"n\"] && 0 === this[\"d\"]) {\n        throw Fraction['DivisionByZero'];\n      }\n\n      /*\n       * First silly attempt, kinda slow\n       *\n       return that[\"sub\"]({\n       \"n\": num[\"n\"] * Math.floor((this.n / this.d) / (num.n / num.d)),\n       \"d\": num[\"d\"],\n       \"s\": this[\"s\"]\n       });*/\n\n      /*\n       * New attempt: a1 / b1 = a2 / b2 * q + r\n       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r\n       * => (b2 * a1 % a2 * b1) / (b1 * b2)\n       */\n      return newFraction(\n        this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]),\n        P[\"d\"] * this[\"d\"]\n      );\n    },\n\n    /**\n     * Calculates the fractional gcd of two rational numbers\n     *\n     * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n     */\n    \"gcd\": function(a, b) {\n\n      parse(a, b);\n\n      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n      return newFraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n    },\n\n    /**\n     * Calculates the fractional lcm of two rational numbers\n     *\n     * Ex: new Fraction(5,8).lcm(3,7) => 15\n     */\n    \"lcm\": function(a, b) {\n\n      parse(a, b);\n\n      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n      if (P[\"n\"] === 0 && this[\"n\"] === 0) {\n        return newFraction(0, 1);\n      }\n      return newFraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n    },\n\n    /**\n     * Calculates the ceil of a rational number\n     *\n     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n     **/\n    \"ceil\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.ceil(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Calculates the floor of a rational number\n     *\n     * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n     **/\n    \"floor\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.floor(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Rounds a rational numbers\n     *\n     * Ex: new Fraction('4.(3)').round() => (4 / 1)\n     **/\n    \"round\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return newFraction(Math.round(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Gets the inverse of the fraction, means numerator and denominator are exchanged\n     *\n     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n     **/\n    \"inverse\": function() {\n\n      return newFraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n    },\n\n    /**\n     * Calculates the fraction to some rational exponent, if possible\n     *\n     * Ex: new Fraction(-1,2).pow(-3) => -8\n     */\n    \"pow\": function(a, b) {\n\n      parse(a, b);\n\n      // Trivial case when exp is an integer\n\n      if (P['d'] === 1) {\n\n        if (P['s'] < 0) {\n          return newFraction(Math.pow(this['s'] * this[\"d\"], P['n']), Math.pow(this[\"n\"], P['n']));\n        } else {\n          return newFraction(Math.pow(this['s'] * this[\"n\"], P['n']), Math.pow(this[\"d\"], P['n']));\n        }\n      }\n\n      // Negative roots become complex\n      //     (-a/b)^(c/d) = x\n      // <=> (-1)^(c/d) * (a/b)^(c/d) = x\n      // <=> (cos(pi) + i*sin(pi))^(c/d) * (a/b)^(c/d) = x         # rotate 1 by 180°\n      // <=> (cos(c*pi/d) + i*sin(c*pi/d)) * (a/b)^(c/d) = x       # DeMoivre's formula in Q ( https://proofwiki.org/wiki/De_Moivre%27s_Formula/Rational_Index )\n      // From which follows that only for c=0 the root is non-complex. c/d is a reduced fraction, so that sin(c/dpi)=0 occurs for d=1, which is handled by our trivial case.\n      if (this['s'] < 0) return null;\n\n      // Now prime factor n and d\n      var N = factorize(this['n']);\n      var D = factorize(this['d']);\n\n      // Exponentiate and take root for n and d individually\n      var n = 1;\n      var d = 1;\n      for (var k in N) {\n        if (k === '1') continue;\n        if (k === '0') {\n          n = 0;\n          break;\n        }\n        N[k]*= P['n'];\n\n        if (N[k] % P['d'] === 0) {\n          N[k]/= P['d'];\n        } else return null;\n        n*= Math.pow(k, N[k]);\n      }\n\n      for (var k in D) {\n        if (k === '1') continue;\n        D[k]*= P['n'];\n\n        if (D[k] % P['d'] === 0) {\n          D[k]/= P['d'];\n        } else return null;\n        d*= Math.pow(k, D[k]);\n      }\n\n      if (P['s'] < 0) {\n        return newFraction(d, n);\n      }\n      return newFraction(n, d);\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"equals\": function(a, b) {\n\n      parse(a, b);\n      return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"]; // Same as compare() === 0\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"compare\": function(a, b) {\n\n      parse(a, b);\n      var t = (this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"]);\n      return (0 < t) - (t < 0);\n    },\n\n    \"simplify\": function(eps) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return this;\n      }\n\n      eps = eps || 0.001;\n\n      var thisABS = this['abs']();\n      var cont = thisABS['toContinued']();\n\n      for (var i = 1; i < cont.length; i++) {\n\n        var s = newFraction(cont[i - 1], 1);\n        for (var k = i - 2; k >= 0; k--) {\n          s = s['inverse']()['add'](cont[k]);\n        }\n\n        if (s['sub'](thisABS)['abs']().valueOf() < eps) {\n          return s['mul'](this['s']);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Check if two rational numbers are divisible\n     *\n     * Ex: new Fraction(19.6).divisible(1.5);\n     */\n    \"divisible\": function(a, b) {\n\n      parse(a, b);\n      return !(!(P[\"n\"] * this[\"d\"]) || ((this[\"n\"] * P[\"d\"]) % (P[\"n\"] * this[\"d\"])));\n    },\n\n    /**\n     * Returns a decimal representation of the fraction\n     *\n     * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n     **/\n    'valueOf': function() {\n\n      return this[\"s\"] * this[\"n\"] / this[\"d\"];\n    },\n\n    /**\n     * Returns a string-fraction representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toFraction(true) => \"4 1/3\"\n     **/\n    'toFraction': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str+= '-';\n      }\n\n      if (d === 1) {\n        str+= n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str+= whole;\n          str+= \" \";\n          n%= d;\n        }\n\n        str+= n;\n        str+= '/';\n        str+= d;\n      }\n      return str;\n    },\n\n    /**\n     * Returns a latex representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n     **/\n    'toLatex': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str+= '-';\n      }\n\n      if (d === 1) {\n        str+= n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str+= whole;\n          n%= d;\n        }\n\n        str+= \"\\\\frac{\";\n        str+= n;\n        str+= '}{';\n        str+= d;\n        str+= '}';\n      }\n      return str;\n    },\n\n    /**\n     * Returns an array of continued fraction elements\n     *\n     * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n     */\n    'toContinued': function() {\n\n      var t;\n      var a = this['n'];\n      var b = this['d'];\n      var res = [];\n\n      if (isNaN(a) || isNaN(b)) {\n        return res;\n      }\n\n      do {\n        res.push(Math.floor(a / b));\n        t = a % b;\n        a = b;\n        b = t;\n      } while (a !== 1);\n\n      return res;\n    },\n\n    /**\n     * Creates a string representation of a fraction with all digits\n     *\n     * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n     **/\n    'toString': function(dec) {\n\n      var N = this[\"n\"];\n      var D = this[\"d\"];\n\n      if (isNaN(N) || isNaN(D)) {\n        return \"NaN\";\n      }\n\n      dec = dec || 15; // 15 = decimal places when no repetation\n\n      var cycLen = cycleLen(N, D); // Cycle length\n      var cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n      var str = this['s'] < 0 ? \"-\" : \"\";\n\n      str+= N / D | 0;\n\n      N%= D;\n      N*= 10;\n\n      if (N)\n        str+= \".\";\n\n      if (cycLen) {\n\n        for (var i = cycOff; i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n        str+= \"(\";\n        for (var i = cycLen; i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n        str+= \")\";\n      } else {\n        for (var i = dec; N && i--;) {\n          str+= N / D | 0;\n          N%= D;\n          N*= 10;\n        }\n      }\n      return str;\n    }\n  };\n\n  if (typeof define === \"function\" && define[\"amd\"]) {\n    define([], function() {\n      return Fraction;\n    });\n  } else if (typeof exports === \"object\") {\n    Object.defineProperty(Fraction, \"__esModule\", { 'value': true });\n    Fraction['default'] = Fraction;\n    Fraction['Fraction'] = Fraction;\n    module['exports'] = Fraction;\n  } else {\n    root['Fraction'] = Fraction;\n  }\n\n})(this);\n","/*\nfraction.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/fraction.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport Fraction from 'fraction.js';\nimport { TimeSpan } from './timespan.mjs';\n\n// Returns the start of the cycle.\nFraction.prototype.sam = function () {\n  return this.floor();\n};\n\n// Returns the start of the next cycle.\nFraction.prototype.nextSam = function () {\n  return this.sam().add(1);\n};\n\n// Returns a TimeSpan representing the begin and end of the Time value's cycle\nFraction.prototype.wholeCycle = function () {\n  return new TimeSpan(this.sam(), this.nextSam());\n};\n\n// The position of a time value relative to the start of its cycle.\nFraction.prototype.cyclePos = function () {\n  return this.sub(this.sam());\n};\n\nFraction.prototype.lt = function (other) {\n  return this.compare(other) < 0;\n};\n\nFraction.prototype.gt = function (other) {\n  return this.compare(other) > 0;\n};\n\nFraction.prototype.lte = function (other) {\n  return this.compare(other) <= 0;\n};\n\nFraction.prototype.gte = function (other) {\n  return this.compare(other) >= 0;\n};\n\nFraction.prototype.eq = function (other) {\n  return this.compare(other) == 0;\n};\n\nFraction.prototype.max = function (other) {\n  return this.gt(other) ? this : other;\n};\n\nFraction.prototype.min = function (other) {\n  return this.lt(other) ? this : other;\n};\n\nFraction.prototype.show = function (/* excludeWhole = false */) {\n  // return this.toFraction(excludeWhole);\n  return this.s * this.n + '/' + this.d;\n};\n\nFraction.prototype.or = function (other) {\n  return this.eq(0) ? other : this;\n};\n\nconst fraction = (n) => {\n  if (typeof n === 'number') {\n    /*\n    https://github.com/infusion/Fraction.js/#doubles\n    „If you pass a double as it is, Fraction.js will perform a number analysis based on Farey Sequences.\"\n    „If you want to keep the number as it is, convert it to a string, as the string parser will not perform any further observations“\n    \n    -> those farey sequences turn out to make pattern querying ~20 times slower! always use strings!\n    -> still, some optimizations could be done: .mul .div .add .sub calls still use numbers\n    */\n    // n = String(n); // this is actually faster but imprecise...\n  }\n  return Fraction(n);\n};\n\nexport const gcd = (...fractions) => {\n  return fractions.reduce((gcd, fraction) => gcd.gcd(fraction), fraction(1));\n};\n\nfraction._original = Fraction;\n\nexport default fraction;\n\n// \"If you concern performance, cache Fraction.js objects and pass arrays/objects.“\n// -> tested memoized version, but it's slower than unmemoized, even with repeated evaluation\n/* const memo = {};\nconst memoizedFraction = (n) => {\n  if (typeof n === 'number') {\n    n = String(n);\n  }\n  if (memo[n] !== undefined) {\n    return memo[n];\n  }\n  memo[n] = Fraction(n);\n  return memo[n];\n}; */\n","/*\ntimespan.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/timespan.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport Fraction from './fraction.mjs';\n\nexport class TimeSpan {\n  constructor(begin, end) {\n    this.begin = Fraction(begin);\n    this.end = Fraction(end);\n  }\n\n  get spanCycles() {\n    const spans = [];\n    var begin = this.begin;\n    const end = this.end;\n    const end_sam = end.sam();\n\n    // Support zero-width timespans\n    if (begin.equals(end)) {\n      return [new TimeSpan(begin, end)];\n    }\n\n    while (end.gt(begin)) {\n      // If begin and end are in the same cycle, we're done.\n      if (begin.sam().equals(end_sam)) {\n        spans.push(new TimeSpan(begin, this.end));\n        break;\n      }\n      // add a timespan up to the next sam\n      const next_begin = begin.nextSam();\n      spans.push(new TimeSpan(begin, next_begin));\n\n      // continue with the next cycle\n      begin = next_begin;\n    }\n    return spans;\n  }\n\n  get duration() {\n    return this.end.sub(this.begin);\n  }\n\n  cycleArc() {\n    // Shifts a timespan to one of equal duration that starts within cycle zero.\n    // (Note that the output timespan probably does not start *at* Time 0 --\n    // that only happens when the input Arc starts at an integral Time.)\n    const b = this.begin.cyclePos();\n    const e = b.add(this.duration);\n    return new TimeSpan(b, e);\n  }\n\n  withTime(func_time) {\n    // Applies given function to both the begin and end time of the timespan\"\"\"\n    return new TimeSpan(func_time(this.begin), func_time(this.end));\n  }\n\n  withEnd(func_time) {\n    // Applies given function to the end time of the timespan\"\"\"\n    return new TimeSpan(this.begin, func_time(this.end));\n  }\n\n  withCycle(func_time) {\n    // Like withTime, but time is relative to relative to the cycle (i.e. the\n    // sam of the start of the timespan)\n    const sam = this.begin.sam();\n    const b = sam.add(func_time(this.begin.sub(sam)));\n    const e = sam.add(func_time(this.end.sub(sam)));\n    return new TimeSpan(b, e);\n  }\n\n  intersection(other) {\n    // Intersection of two timespans, returns None if they don't intersect.\n    const intersect_begin = this.begin.max(other.begin);\n    const intersect_end = this.end.min(other.end);\n\n    if (intersect_begin.gt(intersect_end)) {\n      return undefined;\n    }\n    if (intersect_begin.equals(intersect_end)) {\n      // Zero-width (point) intersection - doesn't intersect if it's at the end of a\n      // non-zero-width timespan.\n      if (intersect_begin.equals(this.end) && this.begin.lt(this.end)) {\n        return undefined;\n      }\n      if (intersect_begin.equals(other.end) && other.begin.lt(other.end)) {\n        return undefined;\n      }\n    }\n    return new TimeSpan(intersect_begin, intersect_end);\n  }\n\n  intersection_e(other) {\n    // Like 'sect', but raises an exception if the timespans don't intersect.\n    const result = this.intersection(other);\n    if (result == undefined) {\n      throw 'TimeSpans do not intersect';\n    }\n    return result;\n  }\n\n  midpoint() {\n    return this.begin.add(this.duration.div(Fraction(2)));\n  }\n\n  equals(other) {\n    return this.begin.equals(other.begin) && this.end.equals(other.end);\n  }\n\n  show() {\n    return this.begin.show() + ' → ' + this.end.show();\n  }\n}\n\nexport default TimeSpan;\n","/*\nhap.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/hap.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nexport class Hap {\n  /*\n      Event class, representing a value active during the timespan\n      'part'. This might be a fragment of an event, in which case the\n      timespan will be smaller than the 'whole' timespan, otherwise the\n      two timespans will be the same. The 'part' must never extend outside of the\n      'whole'. If the event represents a continuously changing value\n      then the whole will be returned as None, in which case the given\n      value will have been sampled from the point halfway between the\n      start and end of the 'part' timespan.\n      The context is to store a list of source code locations causing the event.\n\n      The word 'Event' is more or less a reserved word in javascript, hence this\n      class is named called 'Hap'.\n      */\n\n  constructor(whole, part, value, context = {}, stateful = false) {\n    this.whole = whole;\n    this.part = part;\n    this.value = value;\n    this.context = context;\n    this.stateful = stateful;\n    if (stateful) {\n      console.assert(typeof this.value === 'function', 'Stateful values must be functions');\n    }\n  }\n\n  get duration() {\n    return this.whole.end.sub(this.whole.begin).mul(typeof this.value?.clip === 'number' ? this.value?.clip : 1);\n  }\n\n  get endClipped() {\n    return this.whole.begin.add(this.duration);\n  }\n\n  wholeOrPart() {\n    return this.whole ? this.whole : this.part;\n  }\n\n  withSpan(func) {\n    // Returns a new hap with the function f applies to the hap timespan.\n    const whole = this.whole ? func(this.whole) : undefined;\n    return new Hap(whole, func(this.part), this.value, this.context);\n  }\n\n  withValue(func) {\n    // Returns a new hap with the function f applies to the hap value.\n    return new Hap(this.whole, this.part, func(this.value), this.context);\n  }\n\n  hasOnset() {\n    // Test whether the hap contains the onset, i.e that\n    // the beginning of the part is the same as that of the whole timespan.\"\"\"\n    return this.whole != undefined && this.whole.begin.equals(this.part.begin);\n  }\n\n  resolveState(state) {\n    if (this.stateful && this.hasOnset()) {\n      console.log('stateful');\n      const func = this.value;\n      const [newState, newValue] = func(state);\n      return [newState, new Hap(this.whole, this.part, newValue, this.context, false)];\n    }\n    return [state, this];\n  }\n\n  spanEquals(other) {\n    return (this.whole == undefined && other.whole == undefined) || this.whole.equals(other.whole);\n  }\n\n  equals(other) {\n    return (\n      this.spanEquals(other) &&\n      this.part.equals(other.part) &&\n      // TODO would == be better ??\n      this.value === other.value\n    );\n  }\n\n  show(compact = false) {\n    const value =\n      typeof this.value === 'object'\n        ? compact\n          ? JSON.stringify(this.value).slice(1, -1).replaceAll('\"', '').replaceAll(',', ' ')\n          : JSON.stringify(this.value)\n        : this.value;\n    var spans = '';\n    if (this.whole == undefined) {\n      spans = '~' + this.part.show;\n    } else {\n      var is_whole = this.whole.begin.equals(this.part.begin) && this.whole.end.equals(this.part.end);\n      if (!this.whole.begin.equals(this.part.begin)) {\n        spans = this.whole.begin.show() + ' ⇜ ';\n      }\n      if (!is_whole) {\n        spans += '(';\n      }\n      spans += this.part.show();\n      if (!is_whole) {\n        spans += ')';\n      }\n      if (!this.whole.end.equals(this.part.end)) {\n        spans += ' ⇝ ' + this.whole.end.show();\n      }\n    }\n    return '[ ' + spans + ' | ' + value + ' ]';\n  }\n\n  showWhole(compact = false) {\n    return `${this.whole == undefined ? '~' : this.whole.show()}: ${\n      typeof this.value === 'object'\n        ? compact\n          ? JSON.stringify(this.value).slice(1, -1).replaceAll('\"', '').replaceAll(',', ' ')\n          : JSON.stringify(this.value)\n        : this.value\n    }`;\n  }\n\n  combineContext(b) {\n    const a = this;\n    return { ...a.context, ...b.context, locations: (a.context.locations || []).concat(b.context.locations || []) };\n  }\n\n  setContext(context) {\n    return new Hap(this.whole, this.part, this.value, context);\n  }\n\n  ensureObjectValue() {\n    /* if (isNote(hap.value)) {\n      // supports primitive hap values that look like notes\n      hap.value = { note: hap.value };\n    } */\n    if (typeof this.value !== 'object') {\n      throw new Error(\n        `expected hap.value to be an object, but got \"${this.value}\". Hint: append .note() or .s() to the end`,\n        'error',\n      );\n    }\n  }\n}\n\nexport default Hap;\n","/*\nstate.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/state.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nexport class State {\n  constructor(span, controls = {}) {\n    this.span = span;\n    this.controls = controls;\n  }\n\n  // Returns new State with different span\n  setSpan(span) {\n    return new State(span, this.controls);\n  }\n\n  withSpan(func) {\n    return this.setSpan(func(this.span));\n  }\n\n  // Returns new State with different controls\n  setControls(controls) {\n    return new State(this.span, controls);\n  }\n}\n\nexport default State;\n","/*\nutil.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/util.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// returns true if the given string is a note\nexport const isNoteWithOctave = (name) => /^[a-gA-G][#bs]*[0-9]$/.test(name);\nexport const isNote = (name) => /^[a-gA-G][#bsf]*[0-9]?$/.test(name);\nexport const tokenizeNote = (note) => {\n  if (typeof note !== 'string') {\n    return [];\n  }\n  const [pc, acc = '', oct] = note.match(/^([a-gA-G])([#bsf]*)([0-9]*)$/)?.slice(1) || [];\n  if (!pc) {\n    return [];\n  }\n  return [pc, acc, oct ? Number(oct) : undefined];\n};\n\nconst chromas = { c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11 };\nconst accs = { '#': 1, b: -1, s: 1, f: -1 };\n\n// turns the given note into its midi number representation\nexport const noteToMidi = (note, defaultOctave = 3) => {\n  const [pc, acc, oct = defaultOctave] = tokenizeNote(note);\n  if (!pc) {\n    throw new Error('not a note: \"' + note + '\"');\n  }\n  const chroma = chromas[pc.toLowerCase()];\n  const offset = acc?.split('').reduce((o, char) => o + accs[char], 0) || 0;\n  return (Number(oct) + 1) * 12 + chroma + offset;\n};\nexport const midiToFreq = (n) => {\n  return Math.pow(2, (n - 69) / 12) * 440;\n};\n\nexport const freqToMidi = (freq) => {\n  return (12 * Math.log(freq / 440)) / Math.LN2 + 69;\n};\n\nexport const valueToMidi = (value, fallbackValue) => {\n  if (typeof value !== 'object') {\n    throw new Error('valueToMidi: expected object value');\n  }\n  let { freq, note } = value;\n  if (typeof freq === 'number') {\n    return freqToMidi(freq);\n  }\n  if (typeof note === 'string') {\n    return noteToMidi(note);\n  }\n  if (typeof note === 'number') {\n    return note;\n  }\n  if (!fallbackValue) {\n    throw new Error('valueToMidi: expected freq or note to be set');\n  }\n  return fallbackValue;\n};\n\n/**\n * @deprecated does not appear to be referenced or invoked anywhere in the codebase\n * @noAutocomplete\n */\nexport const getFreq = (noteOrMidi) => {\n  if (typeof noteOrMidi === 'number') {\n    return midiToFreq(noteOrMidi);\n  }\n  return midiToFreq(noteToMidi(noteOrMidi));\n};\n\nconst pcs = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\n/**\n * @deprecated only used in workshop (first-notes)\n * @noAutocomplete\n */\nexport const midi2note = (n) => {\n  const oct = Math.floor(n / 12) - 1;\n  const pc = pcs[n % 12];\n  return pc + oct;\n};\n\n// modulo that works with negative numbers e.g. _mod(-1, 3) = 2. Works on numbers (rather than patterns of numbers, as @mod@ from pattern.mjs does)\nexport const _mod = (n, m) => ((n % m) + m) % m;\n\nexport const getPlayableNoteValue = (hap) => {\n  let { value, context } = hap;\n  let note = value;\n  if (typeof note === 'object' && !Array.isArray(note)) {\n    note = note.note || note.n || note.value;\n    if (note === undefined) {\n      throw new Error(`cannot find a playable note for ${JSON.stringify(value)}`);\n    }\n  }\n  // if value is number => interpret as midi number as long as its not marked as frequency\n  if (typeof note === 'number' && context.type !== 'frequency') {\n    note = midiToFreq(hap.value);\n  } else if (typeof note === 'number' && context.type === 'frequency') {\n    note = hap.value; // legacy workaround.. will be removed in the future\n  } else if (typeof note !== 'string' || !isNote(note)) {\n    throw new Error('not a note: ' + JSON.stringify(note));\n  }\n  return note;\n};\n\nexport const getFrequency = (hap) => {\n  let { value, context } = hap;\n  // if value is number => interpret as midi number as long as its not marked as frequency\n  if (typeof value === 'object') {\n    if (value.freq) {\n      return value.freq;\n    }\n    return getFreq(value.note || value.n || value.value);\n  }\n  if (typeof value === 'number' && context.type !== 'frequency') {\n    value = midiToFreq(hap.value);\n  } else if (typeof value === 'string' && isNote(value)) {\n    value = midiToFreq(noteToMidi(hap.value));\n  } else if (typeof value !== 'number') {\n    throw new Error('not a note or frequency: ' + value);\n  }\n  return value;\n};\n\n// rotate array by n steps (to the left)\nexport const rotate = (arr, n) => arr.slice(n).concat(arr.slice(0, n));\n\nexport const pipe = (...funcs) => {\n  return funcs.reduce(\n    (f, g) =>\n      (...args) =>\n        f(g(...args)),\n    (x) => x,\n  );\n};\n\nexport const compose = (...funcs) => pipe(...funcs.reverse());\n\n// Removes 'None' values from given list\nexport const removeUndefineds = (xs) => xs.filter((x) => x != undefined);\n\nexport const flatten = (arr) => [].concat(...arr);\n\nexport const id = (a) => a;\nexport const constant = (a, b) => a;\n\nexport const listRange = (min, max) => Array.from({ length: max - min + 1 }, (_, i) => i + min);\n\nexport function curry(func, overload, arity = func.length) {\n  const fn = function curried(...args) {\n    if (args.length >= arity) {\n      return func.apply(this, args);\n    } else {\n      const partial = function (...args2) {\n        return curried.apply(this, args.concat(args2));\n      };\n      if (overload) {\n        overload(partial, args);\n      }\n      return partial;\n    }\n  };\n  if (overload) {\n    // overload function without args... needed for chordBass.transpose(2)\n    overload(fn, []);\n  }\n  return fn;\n}\n\nexport function parseNumeral(numOrString) {\n  const asNumber = Number(numOrString);\n  if (!isNaN(asNumber)) {\n    return asNumber;\n  }\n  if (isNote(numOrString)) {\n    return noteToMidi(numOrString);\n  }\n  throw new Error(`cannot parse as numeral: \"${numOrString}\"`);\n}\n\nexport function mapArgs(fn, mapFn) {\n  return (...args) => fn(...args.map(mapFn));\n}\n\nexport function numeralArgs(fn) {\n  return mapArgs(fn, parseNumeral);\n}\n\nexport function parseFractional(numOrString) {\n  const asNumber = Number(numOrString);\n  if (!isNaN(asNumber)) {\n    return asNumber;\n  }\n  const specialValue = {\n    pi: Math.PI,\n    w: 1,\n    h: 0.5,\n    q: 0.25,\n    e: 0.125,\n    s: 0.0625,\n    t: 1 / 3,\n    f: 0.2,\n    x: 1 / 6,\n  }[numOrString];\n  if (typeof specialValue !== 'undefined') {\n    return specialValue;\n  }\n  throw new Error(`cannot parse as fractional: \"${numOrString}\"`);\n}\n\nexport const fractionalArgs = (fn) => mapArgs(fn, parseFractional);\n\nexport const splitAt = function (index, value) {\n  return [value.slice(0, index), value.slice(index)];\n};\n\nexport const zipWith = (f, xs, ys) => xs.map((n, i) => f(n, ys[i]));\n\nexport const clamp = (num, min, max) => Math.min(Math.max(num, min), max);\n\n/* solmization, not used yet */\nconst solfeggio = ['Do', 'Reb', 'Re', 'Mib', 'Mi', 'Fa', 'Solb', 'Sol', 'Lab', 'La', 'Sib', 'Si']; /*solffegio notes*/\nconst indian = [\n  'Sa',\n  'Re',\n  'Ga',\n  'Ma',\n  'Pa',\n  'Dha',\n  'Ni',\n]; /*indian musical notes,  seems like they do not use flats or sharps*/\nconst german = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Hb', 'H']; /*german & dutch musical notes*/\nconst byzantine = [\n  'Ni',\n  'Pab',\n  'Pa',\n  'Voub',\n  'Vou',\n  'Ga',\n  'Dib',\n  'Di',\n  'Keb',\n  'Ke',\n  'Zob',\n  'Zo',\n]; /*byzantine musical notes*/\nconst japanese = [\n  'I',\n  'Ro',\n  'Ha',\n  'Ni',\n  'Ho',\n  'He',\n  'To',\n]; /*traditional japanese musical notes, seems like they do not use falts or sharps*/\n\nconst english = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\n\nexport const sol2note = (n, notation = 'letters') => {\n  const pc =\n    notation === 'solfeggio'\n      ? solfeggio /*check if its is any of the following*/\n      : notation === 'indian'\n      ? indian\n      : notation === 'german'\n      ? german\n      : notation === 'byzantine'\n      ? byzantine\n      : notation === 'japanese'\n      ? japanese\n      : english; /*if not use standard version*/\n  const note = pc[n % 12]; /*calculating the midi value to the note*/\n  const oct = Math.floor(n / 12) - 1;\n  return note + oct;\n};\n\n// code hashing helpers\n\nexport function unicodeToBase64(text) {\n  const utf8Bytes = new TextEncoder().encode(text);\n  const base64String = btoa(String.fromCharCode(...utf8Bytes));\n  return base64String;\n}\n\nexport function base64ToUnicode(base64String) {\n  const utf8Bytes = new Uint8Array(\n    atob(base64String)\n      .split('')\n      .map((char) => char.charCodeAt(0)),\n  );\n  const decodedText = new TextDecoder().decode(utf8Bytes);\n  return decodedText;\n}\n\nexport function code2hash(code) {\n  return encodeURIComponent(unicodeToBase64(code));\n  //return '#' + encodeURIComponent(btoa(code));\n}\n\nexport function hash2code(hash) {\n  return base64ToUnicode(decodeURIComponent(hash));\n  //return atob(decodeURIComponent(codeParam || ''));\n}\n","/*\nvalue.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/value.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { curry } from './util.mjs';\n\nexport function unionWithObj(a, b, func) {\n  if (typeof b?.value === 'number') {\n    // https://github.com/tidalcycles/strudel/issues/262\n    const numKeys = Object.keys(a).filter((k) => typeof a[k] === 'number');\n    const numerals = Object.fromEntries(numKeys.map((k) => [k, b.value]));\n    b = Object.assign(b, numerals);\n    delete b.value;\n  }\n  const common = Object.keys(a).filter((k) => Object.keys(b).includes(k));\n  return Object.assign({}, a, b, Object.fromEntries(common.map((k) => [k, func(a[k], b[k])])));\n}\n\nexport const mul = curry((a, b) => a * b);\n\nexport const valued = (value) => {\n  if (value?.constructor?.name === 'Value') {\n    return value;\n  }\n  return Value.of(value);\n};\n\nexport class Value {\n  constructor(value) {\n    this.value = value;\n  }\n  static of(x) {\n    return new Value(x);\n  }\n  get isNothing() {\n    return this.value === null || this.value === undefined;\n  }\n  map(f) {\n    if (this.isNothing) {\n      return this;\n    }\n    return Value.of(f(this.value));\n  }\n  mul(n) {\n    return this.map(mul).ap(n);\n  }\n  ap(other) {\n    return valued(other).map(this.value);\n  }\n  unionWith(other, func) {\n    const type = typeof this.value;\n    other = valued(other);\n    if (type !== typeof other.value) {\n      throw new Error('unionWith: both Values must have same type!');\n    }\n    if (Array.isArray(type) || type !== 'object') {\n      throw new Error('unionWith: expected objects');\n    }\n    return this.map((v) => unionWithObj(v, other.value, func));\n  }\n}\n\nexport const map = curry((f, anyFunctor) => anyFunctor.map(f));\n","/*\ndrawLine.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/drawLine.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport Fraction, { gcd } from './fraction.mjs';\n\n/**\n * Intended for a debugging, drawLine renders the pattern as a string, where each character represents the same time span.\n * Should only be used with single characters as values, otherwise the character slots will be messed up.\n * Character legend:\n *\n * - \"|\" cycle separator\n * - \"-\" hold previous value\n * - \".\" silence\n *\n * @param {Pattern} pattern the pattern to use\n * @param {number} chars max number of characters (approximately)\n * @returns string\n * @example\n * const line = drawLine(\"0 [1 2 3]\", 10); // |0--123|0--123\n * console.log(line);\n * silence;\n */\nfunction drawLine(pat, chars = 60) {\n  let cycle = 0;\n  let pos = Fraction(0);\n  let lines = [''];\n  let emptyLine = ''; // this will be the \"reference\" empty line, which will be copied into extra lines\n  while (lines[0].length < chars) {\n    const haps = pat.queryArc(cycle, cycle + 1);\n    const durations = haps.filter((hap) => hap.hasOnset()).map((hap) => hap.duration);\n    const charFraction = gcd(...durations);\n    const totalSlots = charFraction.inverse(); // number of character slots for the current cycle\n    lines = lines.map((line) => line + '|'); // add pipe character before each cycle\n    emptyLine += '|';\n    for (let i = 0; i < totalSlots; i++) {\n      const [begin, end] = [pos, pos.add(charFraction)];\n      const matches = haps.filter((hap) => hap.whole.begin.lte(begin) && hap.whole.end.gte(end));\n      const missingLines = matches.length - lines.length;\n      if (missingLines > 0) {\n        lines = lines.concat(Array(missingLines).fill(emptyLine));\n      }\n      lines = lines.map((line, i) => {\n        const hap = matches[i];\n        if (hap) {\n          const isOnset = hap.whole.begin.eq(begin);\n          const char = isOnset ? '' + hap.value : '-';\n          return line + char;\n        }\n        return line + '.';\n      });\n      emptyLine += '.';\n      pos = pos.add(charFraction);\n    }\n    cycle++;\n  }\n  return lines.join('\\n');\n}\n\nexport default drawLine;\n","export const logKey = 'strudel.log';\n\nexport function logger(message, type, data = {}) {\n  console.log(`%c${message}`, 'background-color: black;color:white;border-radius:15px');\n  if (typeof document !== 'undefined' && typeof CustomEvent !== 'undefined') {\n    document.dispatchEvent(\n      new CustomEvent(logKey, {\n        detail: {\n          message,\n          type,\n          data,\n        },\n      }),\n    );\n  }\n}\n\nlogger.key = logKey;\n","/*\npattern.mjs - Core pattern representation for strudel\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/pattern.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport TimeSpan from './timespan.mjs';\nimport Fraction from './fraction.mjs';\nimport Hap from './hap.mjs';\nimport State from './state.mjs';\nimport { unionWithObj } from './value.mjs';\n\nimport { compose, removeUndefineds, flatten, id, listRange, curry, _mod, numeralArgs, parseNumeral } from './util.mjs';\nimport drawLine from './drawLine.mjs';\nimport { logger } from './logger.mjs';\n\nlet stringParser;\n\n// parser is expected to turn a string into a pattern\n// if set, the reify function will parse all strings with it\n// intended to use with mini to automatically interpret all strings as mini notation\nexport const setStringParser = (parser) => (stringParser = parser);\n\n/** @class Class representing a pattern. */\nexport class Pattern {\n  /**\n   * Create a pattern. As an end user, you will most likely not create a Pattern directly.\n   *\n   * @param {function} query - The function that maps a {@link State} to an array of {@link Hap}.\n   * @noAutocomplete\n   */\n  constructor(query) {\n    this.query = query;\n    this._Pattern = true; // this property is used to detect if a pattern that fails instanceof Pattern is an instance of another Pattern\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  // Haskell-style functor, applicative and monadic operations\n\n  /**\n   * Returns a new pattern, with the function applied to the value of\n   * each hap. It has the alias {@link Pattern#fmap}.\n   * @synonyms fmap\n   * @param {Function} func to to apply to the value\n   * @returns Pattern\n   * @example\n   * \"0 1 2\".withValue(v => v + 10).log()\n   */\n  withValue(func) {\n    return new Pattern((state) => this.query(state).map((hap) => hap.withValue(func)));\n  }\n\n  /**\n   * see {@link Pattern#withValue}\n   * @noAutocomplete\n   */\n  fmap(func) {\n    return this.withValue(func);\n  }\n\n  /**\n   * Assumes 'this' is a pattern of functions, and given a function to\n   * resolve wholes, applies a given pattern of values to that\n   * pattern of functions.\n   * @param {Function} whole_func\n   * @param {Function} func\n   * @noAutocomplete\n   * @returns Pattern\n   */\n  appWhole(whole_func, pat_val) {\n    const pat_func = this;\n    const query = function (state) {\n      const hap_funcs = pat_func.query(state);\n      const hap_vals = pat_val.query(state);\n      const apply = function (hap_func, hap_val) {\n        const s = hap_func.part.intersection(hap_val.part);\n        if (s == undefined) {\n          return undefined;\n        }\n        return new Hap(\n          whole_func(hap_func.whole, hap_val.whole),\n          s,\n          hap_func.value(hap_val.value),\n          hap_val.combineContext(hap_func),\n        );\n      };\n      return flatten(\n        hap_funcs.map((hap_func) => removeUndefineds(hap_vals.map((hap_val) => apply(hap_func, hap_val)))),\n      );\n    };\n    return new Pattern(query);\n  }\n\n  /**\n   * When this method is called on a pattern of functions, it matches its haps\n   * with those in the given pattern of values.  A new pattern is returned, with\n   * each matching value applied to the corresponding function.\n   *\n   * In this `_appBoth` variant, where timespans of the function and value haps\n   * are not the same but do intersect, the resulting hap has a timespan of the\n   * intersection. This applies to both the part and the whole timespan.\n   * @param {Pattern} pat_val\n   * @noAutocomplete\n   * @returns Pattern\n   */\n  appBoth(pat_val) {\n    // Tidal's <*>\n    const whole_func = function (span_a, span_b) {\n      if (span_a == undefined || span_b == undefined) {\n        return undefined;\n      }\n      return span_a.intersection_e(span_b);\n    };\n    return this.appWhole(whole_func, pat_val);\n  }\n\n  /**\n   * As with {@link Pattern#appBoth}, but the `whole` timespan is not the intersection,\n   * but the timespan from the function of patterns that this method is called\n   * on. In practice, this means that the pattern structure, including onsets,\n   * are preserved from the pattern of functions (often referred to as the left\n   * hand or inner pattern).\n   * @param {Pattern} pat_val\n   * @noAutocomplete\n   * @returns Pattern\n   */\n  appLeft(pat_val) {\n    const pat_func = this;\n\n    const query = function (state) {\n      const haps = [];\n      for (const hap_func of pat_func.query(state)) {\n        const hap_vals = pat_val.query(state.setSpan(hap_func.wholeOrPart()));\n        for (const hap_val of hap_vals) {\n          const new_whole = hap_func.whole;\n          const new_part = hap_func.part.intersection(hap_val.part);\n          if (new_part) {\n            const new_value = hap_func.value(hap_val.value);\n            const new_context = hap_val.combineContext(hap_func);\n            const hap = new Hap(new_whole, new_part, new_value, new_context);\n            haps.push(hap);\n          }\n        }\n      }\n      return haps;\n    };\n    return new Pattern(query);\n  }\n\n  /**\n   * As with {@link Pattern#appLeft}, but `whole` timespans are instead taken from the\n   * pattern of values, i.e. structure is preserved from the right hand/outer\n   * pattern.\n   * @param {Pattern} pat_val\n   * @noAutocomplete\n   * @returns Pattern\n   */\n  appRight(pat_val) {\n    const pat_func = this;\n\n    const query = function (state) {\n      const haps = [];\n      for (const hap_val of pat_val.query(state)) {\n        const hap_funcs = pat_func.query(state.setSpan(hap_val.wholeOrPart()));\n        for (const hap_func of hap_funcs) {\n          const new_whole = hap_val.whole;\n          const new_part = hap_func.part.intersection(hap_val.part);\n          if (new_part) {\n            const new_value = hap_func.value(hap_val.value);\n            const new_context = hap_val.combineContext(hap_func);\n            const hap = new Hap(new_whole, new_part, new_value, new_context);\n            haps.push(hap);\n          }\n        }\n      }\n      return haps;\n    };\n    return new Pattern(query);\n  }\n\n  bindWhole(choose_whole, func) {\n    const pat_val = this;\n    const query = function (state) {\n      const withWhole = function (a, b) {\n        return new Hap(\n          choose_whole(a.whole, b.whole),\n          b.part,\n          b.value,\n          Object.assign({}, a.context, b.context, {\n            locations: (a.context.locations || []).concat(b.context.locations || []),\n          }),\n        );\n      };\n      const match = function (a) {\n        return func(a.value)\n          .query(state.setSpan(a.part))\n          .map((b) => withWhole(a, b));\n      };\n      return flatten(pat_val.query(state).map((a) => match(a)));\n    };\n    return new Pattern(query);\n  }\n\n  bind(func) {\n    const whole_func = function (a, b) {\n      if (a == undefined || b == undefined) {\n        return undefined;\n      }\n      return a.intersection_e(b);\n    };\n    return this.bindWhole(whole_func, func);\n  }\n\n  join() {\n    // Flattens a pattern of patterns into a pattern, where wholes are\n    // the intersection of matched inner and outer haps.\n    return this.bind(id);\n  }\n\n  outerBind(func) {\n    return this.bindWhole((a) => a, func);\n  }\n\n  outerJoin() {\n    // Flattens a pattern of patterns into a pattern, where wholes are\n    // taken from inner haps.\n    return this.outerBind(id);\n  }\n\n  innerBind(func) {\n    return this.bindWhole((_, b) => b, func);\n  }\n\n  innerJoin() {\n    // Flattens a pattern of patterns into a pattern, where wholes are\n    // taken from inner haps.\n    return this.innerBind(id);\n  }\n\n  // Flatterns patterns of patterns, by retriggering/resetting inner patterns at onsets of outer pattern haps\n  trigJoin(cycleZero = false) {\n    const pat_of_pats = this;\n    return new Pattern((state) => {\n      return (\n        pat_of_pats\n          // drop continuous haps from the outer pattern.\n          .discreteOnly()\n          .query(state)\n          .map((outer_hap) => {\n            return (\n              outer_hap.value\n                // trig = align the inner pattern cycle start to outer pattern haps\n                // Trigzero = align the inner pattern cycle zero to outer pattern haps\n                .late(cycleZero ? outer_hap.whole.begin : outer_hap.whole.begin.cyclePos())\n                .query(state)\n                .map((inner_hap) =>\n                  new Hap(\n                    // Supports continuous haps in the inner pattern\n                    inner_hap.whole ? inner_hap.whole.intersection(outer_hap.whole) : undefined,\n                    inner_hap.part.intersection(outer_hap.part),\n                    inner_hap.value,\n                  ).setContext(outer_hap.combineContext(inner_hap)),\n                )\n                // Drop haps that didn't intersect\n                .filter((hap) => hap.part)\n            );\n          })\n          .flat()\n      );\n    });\n  }\n\n  trigzeroJoin() {\n    return this.trigJoin(true);\n  }\n\n  // Like the other joins above, joins a pattern of patterns of values, into a flatter\n  // pattern of values. In this case it takes whole cycles of the inner pattern to fit each event\n  // in the outer pattern.\n  squeezeJoin() {\n    // A pattern of patterns, which we call the 'outer' pattern, with patterns\n    // as values which we call the 'inner' patterns.\n    const pat_of_pats = this;\n    function query(state) {\n      // Get the events with the inner patterns. Ignore continuous events (without 'wholes')\n      const haps = pat_of_pats.discreteOnly().query(state);\n      // A function to map over the events from the outer pattern.\n      function flatHap(outerHap) {\n        // Get the inner pattern, slowed and shifted so that the 'whole'\n        // timespan of the outer event corresponds to the first cycle of the\n        // inner event\n        const inner_pat = outerHap.value._focusSpan(outerHap.wholeOrPart());\n        // Get the inner events, from the timespan of the outer event's part\n        const innerHaps = inner_pat.query(state.setSpan(outerHap.part));\n        // A function to map over the inner events, to combine them with the\n        // outer event\n        function munge(outer, inner) {\n          let whole = undefined;\n          if (inner.whole && outer.whole) {\n            whole = inner.whole.intersection(outer.whole);\n            if (!whole) {\n              // The wholes are present, but don't intersect\n              return undefined;\n            }\n          }\n          const part = inner.part.intersection(outer.part);\n          if (!part) {\n            // The parts don't intersect\n            return undefined;\n          }\n          const context = inner.combineContext(outer);\n          return new Hap(whole, part, inner.value, context);\n        }\n        return innerHaps.map((innerHap) => munge(outerHap, innerHap));\n      }\n      const result = flatten(haps.map(flatHap));\n      // remove undefineds\n      return result.filter((x) => x);\n    }\n    return new Pattern(query);\n  }\n\n  squeezeBind(func) {\n    return this.fmap(func).squeezeJoin();\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  // Utility methods mainly for internal use\n\n  /**\n   * Query haps inside the given time span.\n   *\n   * @param {Fraction | number} begin from time\n   * @param {Fraction | number} end to time\n   * @returns Hap[]\n   * @example\n   * const pattern = sequence('a', ['b', 'c'])\n   * const haps = pattern.queryArc(0, 1)\n   * console.log(haps)\n   * silence\n   * @noAutocomplete\n   */\n  queryArc(begin, end) {\n    try {\n      return this.query(new State(new TimeSpan(begin, end)));\n    } catch (err) {\n      logger(`[query]: ${err.message}`, 'error');\n      return [];\n    }\n  }\n\n  /**\n   * Returns a new pattern, with queries split at cycle boundaries. This makes\n   * some calculations easier to express, as all haps are then constrained to\n   * happen within a cycle.\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  splitQueries() {\n    const pat = this;\n    const q = (state) => {\n      return flatten(state.span.spanCycles.map((subspan) => pat.query(state.setSpan(subspan))));\n    };\n    return new Pattern(q);\n  }\n\n  /**\n   * Returns a new pattern, where the given function is applied to the query\n   * timespan before passing it to the original pattern.\n   * @param {Function} func the function to apply\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withQuerySpan(func) {\n    return new Pattern((state) => this.query(state.withSpan(func)));\n  }\n\n  withQuerySpanMaybe(func) {\n    const pat = this;\n    return new Pattern((state) => {\n      const newState = state.withSpan(func);\n      if (!newState.span) {\n        return [];\n      }\n      return pat.query(newState);\n    });\n  }\n\n  /**\n   * As with {@link Pattern#withQuerySpan}, but the function is applied to both the\n   * begin and end time of the query timespan.\n   * @param {Function} func the function to apply\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withQueryTime(func) {\n    return new Pattern((state) => this.query(state.withSpan((span) => span.withTime(func))));\n  }\n\n  /**\n   * Similar to {@link Pattern#withQuerySpan}, but the function is applied to the timespans\n   * of all haps returned by pattern queries (both `part` timespans, and where\n   * present, `whole` timespans).\n   * @param {Function} func\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withHapSpan(func) {\n    return new Pattern((state) => this.query(state).map((hap) => hap.withSpan(func)));\n  }\n\n  /**\n   * As with {@link Pattern#withHapSpan}, but the function is applied to both the\n   * begin and end time of the hap timespans.\n   * @param {Function} func the function to apply\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withHapTime(func) {\n    return this.withHapSpan((span) => span.withTime(func));\n  }\n\n  /**\n   * Returns a new pattern with the given function applied to the list of haps returned by every query.\n   * @param {Function} func\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withHaps(func) {\n    return new Pattern((state) => func(this.query(state)));\n  }\n\n  /**\n   * As with {@link Pattern#withHaps}, but applies the function to every hap, rather than every list of haps.\n   * @param {Function} func\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withHap(func) {\n    return this.withHaps((haps) => haps.map(func));\n  }\n\n  /**\n   * Returns a new pattern with the context field set to every hap set to the given value.\n   * @param {*} context\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  setContext(context) {\n    return this.withHap((hap) => hap.setContext(context));\n  }\n\n  /**\n   * Returns a new pattern with the given function applied to the context field of every hap.\n   * @param {Function} func\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withContext(func) {\n    return this.withHap((hap) => hap.setContext(func(hap.context)));\n  }\n\n  /**\n   * Returns a new pattern with the context field of every hap set to an empty object.\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  stripContext() {\n    return this.withHap((hap) => hap.setContext({}));\n  }\n\n  /**\n   * Returns a new pattern with the given location information added to the\n   * context of every hap.\n   * @param {Number} start start offset\n   * @param {Number} end end offset\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  withLoc(start, end) {\n    const location = {\n      start,\n      end,\n    };\n    return this.withContext((context) => {\n      const locations = (context.locations || []).concat([location]);\n      return { ...context, locations };\n    });\n  }\n\n  /**\n   * Returns a new Pattern, which only returns haps that meet the given test.\n   * @param {Function} hap_test - a function which returns false for haps to be removed from the pattern\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  filterHaps(hap_test) {\n    return new Pattern((state) => this.query(state).filter(hap_test));\n  }\n\n  /**\n   * As with {@link Pattern#filterHaps}, but the function is applied to values\n   * inside haps.\n   * @param {Function} value_test\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  filterValues(value_test) {\n    return new Pattern((state) => this.query(state).filter((hap) => value_test(hap.value)));\n  }\n\n  /**\n   * Returns a new pattern, with haps containing undefined values removed from\n   * query results.\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  removeUndefineds() {\n    return this.filterValues((val) => val != undefined);\n  }\n\n  /**\n   * Returns a new pattern, with all haps without onsets filtered out. A hap\n   * with an onset is one with a `whole` timespan that begins at the same time\n   * as its `part` timespan.\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  onsetsOnly() {\n    // Returns a new pattern that will only return haps where the start\n    // of the 'whole' timespan matches the start of the 'part'\n    // timespan, i.e. the haps that include their 'onset'.\n    return this.filterHaps((hap) => hap.hasOnset());\n  }\n\n  /**\n   * Returns a new pattern, with 'continuous' haps (those without 'whole'\n   * timespans) removed from query results.\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  discreteOnly() {\n    // removes continuous haps that don't have a 'whole' timespan\n    return this.filterHaps((hap) => hap.whole);\n  }\n\n  /**\n   * Combines adjacent haps with the same value and whole.  Only\n   * intended for use in tests.\n   * @noAutocomplete\n   */\n  defragmentHaps() {\n    // remove continuous haps\n    const pat = this.discreteOnly();\n\n    return pat.withHaps((haps) => {\n      const result = [];\n      for (var i = 0; i < haps.length; ++i) {\n        var searching = true;\n        var a = haps[i];\n        while (searching) {\n          const a_value = JSON.stringify(haps[i].value);\n          var found = false;\n\n          for (var j = i + 1; j < haps.length; j++) {\n            const b = haps[j];\n\n            if (a.whole.equals(b.whole)) {\n              if (a.part.begin.eq(b.part.end)) {\n                if (a_value === JSON.stringify(b.value)) {\n                  // eat the matching hap into 'a'\n                  a = new Hap(a.whole, new TimeSpan(b.part.begin, a.part.end), a.value);\n                  haps.splice(j, 1);\n                  // restart the search\n                  found = true;\n                  break;\n                }\n              } else if (b.part.begin.eq(a.part.end)) {\n                if (a_value == JSON.stringify(b.value)) {\n                  // eat the matching hap into 'a'\n                  a = new Hap(a.whole, new TimeSpan(a.part.begin, b.part.end), a.value);\n                  haps.splice(j, 1);\n                  // restart the search\n                  found = true;\n                  break;\n                }\n              }\n            }\n          }\n\n          searching = found;\n        }\n        result.push(a);\n      }\n      return result;\n    });\n  }\n\n  /**\n   * Queries the pattern for the first cycle, returning Haps. Mainly of use when\n   * debugging a pattern.\n   * @param {Boolean} with_context - set to true, otherwise the context field\n   * will be stripped from the resulting haps.\n   * @returns [Hap]\n   * @noAutocomplete\n   */\n  firstCycle(with_context = false) {\n    var self = this;\n    if (!with_context) {\n      self = self.stripContext();\n    }\n    return self.query(new State(new TimeSpan(Fraction(0), Fraction(1))));\n  }\n\n  /**\n   * Accessor for a list of values returned by querying the first cycle.\n   * @noAutocomplete\n   */\n  get firstCycleValues() {\n    return this.firstCycle().map((hap) => hap.value);\n  }\n\n  /**\n   * More human-readable version of the {@link Pattern#firstCycleValues} accessor.\n   * @noAutocomplete\n   */\n  get showFirstCycle() {\n    return this.firstCycle().map(\n      (hap) => `${hap.value}: ${hap.whole.begin.toFraction()} - ${hap.whole.end.toFraction()}`,\n    );\n  }\n\n  /**\n   * Returns a new pattern, which returns haps sorted in temporal order. Mainly\n   * of use when comparing two patterns for equality, in tests.\n   * @returns Pattern\n   * @noAutocomplete\n   */\n  sortHapsByPart() {\n    return this.withHaps((haps) =>\n      haps.sort((a, b) =>\n        a.part.begin\n          .sub(b.part.begin)\n          .or(a.part.end.sub(b.part.end))\n          .or(a.whole.begin.sub(b.whole.begin).or(a.whole.end.sub(b.whole.end))),\n      ),\n    );\n  }\n\n  asNumber() {\n    return this.fmap(parseNumeral);\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  // Operators - see 'make composers' later..\n\n  _opIn(other, func) {\n    return this.fmap(func).appLeft(reify(other));\n  }\n  _opOut(other, func) {\n    return this.fmap(func).appRight(reify(other));\n  }\n  _opMix(other, func) {\n    return this.fmap(func).appBoth(reify(other));\n  }\n  _opSqueeze(other, func) {\n    const otherPat = reify(other);\n    return this.fmap((a) => otherPat.fmap((b) => func(a)(b))).squeezeJoin();\n  }\n  _opSqueezeOut(other, func) {\n    const thisPat = this;\n    const otherPat = reify(other);\n    return otherPat.fmap((a) => thisPat.fmap((b) => func(b)(a))).squeezeJoin();\n  }\n  _opTrig(other, func) {\n    const otherPat = reify(other);\n    return otherPat.fmap((b) => this.fmap((a) => func(a)(b))).trigJoin();\n  }\n  _opTrigzero(other, func) {\n    const otherPat = reify(other);\n    return otherPat.fmap((b) => this.fmap((a) => func(a)(b))).trigzeroJoin();\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  // End-user methods.\n  // Those beginning with an underscore (_) are 'patternified',\n  // i.e. versions are created without the underscore, that are\n  // magically transformed to accept patterns for all their arguments.\n\n  //////////////////////////////////////////////////////////////////////\n  // Methods without corresponding toplevel functions\n\n  /**\n   * Layers the result of the given function(s). Like {@link Pattern.superimpose}, but without the original pattern:\n   * @name layer\n   * @memberof Pattern\n   * @synonyms apply\n   * @returns Pattern\n   * @example\n   * \"<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*4\"\n   *   .layer(x=>x.add(\"0,2\"))\n   *   .scale('C minor').note()\n   */\n  layer(...funcs) {\n    return stack(...funcs.map((func) => func(this)));\n  }\n\n  /**\n   * Superimposes the result of the given function(s) on top of the original pattern:\n   * @name superimpose\n   * @memberof Pattern\n   * @returns Pattern\n   * @example\n   * \"<0 2 4 6 ~ 4 ~ 2 0!3 ~!5>*4\"\n   *   .superimpose(x=>x.add(2))\n   *   .scale('C minor').note()\n   */\n  superimpose(...funcs) {\n    return this.stack(...funcs.map((func) => func(this)));\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  // Multi-pattern functions\n\n  /**\n   * Stacks the given pattern(s) to the current pattern.\n   * @name stack\n   * @memberof Pattern\n   * @example\n   * s(\"hh*2\").stack(\n   *   note(\"c2(3,8)\")\n   * )\n   */\n  stack(...pats) {\n    return stack(this, ...pats);\n  }\n\n  sequence(...pats) {\n    return sequence(this, ...pats);\n  }\n\n  /**\n   * Appends the given pattern(s) to the current pattern.\n   * @name seq\n   * @memberof Pattern\n   * @synonyms sequence, fastcat\n   * @example\n   * s(\"hh*2\").seq(\n   *   note(\"c2(3,8)\")\n   * )\n   */\n  seq(...pats) {\n    return sequence(this, ...pats);\n  }\n\n  /**\n   * Appends the given pattern(s) to the next cycle.\n   * @name cat\n   * @memberof Pattern\n   * @synonyms slowcat\n   * @example\n   * s(\"hh*2\").cat(\n   *   note(\"c2(3,8)\")\n   * )\n   */\n  cat(...pats) {\n    return cat(this, ...pats);\n  }\n\n  fastcat(...pats) {\n    return fastcat(this, ...pats);\n  }\n\n  slowcat(...pats) {\n    return slowcat(this, ...pats);\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  // Context methods - ones that deal with metadata\n\n  onTrigger(onTrigger, dominant = true) {\n    return this.withHap((hap) =>\n      hap.setContext({\n        ...hap.context,\n        onTrigger: (...args) => {\n          // run previously set trigger, if it exists\n          hap.context.onTrigger?.(...args);\n          onTrigger(...args);\n        },\n        // if dominantTrigger is set to true, the default output (webaudio) will be disabled\n        // when using multiple triggers, you cannot flip this flag to false again!\n        // example: x.csound('CooLSynth').log() as well as x.log().csound('CooLSynth') should work the same\n        dominantTrigger: hap.context.dominantTrigger || dominant,\n      }),\n    );\n  }\n\n  log(func = (_, hap) => `[hap] ${hap.showWhole(true)}`, getData = (_, hap) => ({ hap })) {\n    return this.onTrigger((...args) => {\n      logger(func(...args), undefined, getData(...args));\n    }, false);\n  }\n\n  logValues(func = id) {\n    return this.log((_, hap) => func(hap.value));\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  // Visualisation\n\n  drawLine() {\n    console.log(drawLine(this));\n    return this;\n  }\n}\n\n//////////////////////////////////////////////////////////////////////\n// functions relating to chords/patterns of lists/lists of patterns\n\n// returns Array<Hap[]> where each list of haps satisfies eq\nfunction groupHapsBy(eq, haps) {\n  let groups = [];\n  haps.forEach((hap) => {\n    const match = groups.findIndex(([other]) => eq(hap, other));\n    if (match === -1) {\n      groups.push([hap]);\n    } else {\n      groups[match].push(hap);\n    }\n  });\n  return groups;\n}\n\n// congruent haps = haps with equal spans\nconst congruent = (a, b) => a.spanEquals(b);\n// Pattern<Hap<T>> -> Pattern<Hap<T[]>>\n// returned pattern contains arrays of congruent haps\nPattern.prototype.collect = function () {\n  return this.withHaps((haps) =>\n    groupHapsBy(congruent, haps).map((_haps) => new Hap(_haps[0].whole, _haps[0].part, _haps, {})),\n  );\n};\n\n/**\n * Selects indices in in stacked notes.\n * @example\n * note(\"<[c,eb,g]!2 [c,f,ab] [d,f,ab]>\")\n * .arpWith(haps => haps[2])\n * */\nPattern.prototype.arpWith = function (func) {\n  return this.collect()\n    .fmap((v) => reify(func(v)))\n    .innerJoin()\n    .withHap((h) => new Hap(h.whole, h.part, h.value.value, h.combineContext(h.value)));\n};\n\n/**\n * Selects indices in in stacked notes.\n * @example\n * note(\"<[c,eb,g]!2 [c,f,ab] [d,f,ab]>\")\n * .arp(\"0 [0,2] 1 [0,2]\").slow(2)\n * */\nPattern.prototype.arp = function (pat) {\n  return this.arpWith((haps) => pat.fmap((i) => haps[i % haps.length]));\n};\n\n/*\n * Takes a time duration followed by one or more patterns, and shifts the given patterns in time, so they are\n * distributed equally over the given time duration. They are then combined with the pattern 'weave' is called on, after it has been stretched out (i.e. slowed down by) the time duration.\n * @name weave\n * @memberof Pattern\n * @example pan(saw).weave(4, s(\"bd(3,8)\"), s(\"~ sd\"))\n * @example n(\"0 1 2 3 4 5 6 7\").weave(8, s(\"bd(3,8)\"), s(\"~ sd\"))\n\naddToPrototype('weave', function (t, ...pats) {\n  return this.weaveWith(t, ...pats.map((x) => set.out(x)));\n});\n\n*/\n/*\n * Like 'weave', but accepts functions rather than patterns, which are applied to the pattern.\n * @name weaveWith\n * @memberof Pattern\n\naddToPrototype('weaveWith', function (t, ...funcs) {\n  const pat = this;\n  const l = funcs.length;\n  t = Fraction(t);\n  if (l == 0) {\n    return silence;\n  }\n  return stack(...funcs.map((func, i) => pat.inside(t, func).early(Fraction(i).div(l))))._slow(t);\n});\n*/\n\n//////////////////////////////////////////////////////////////////////\n// compose matrix functions\n\n// TODO - adopt value.mjs fully..\nfunction _composeOp(a, b, func) {\n  function _nonFunctionObject(x) {\n    return x instanceof Object && !(x instanceof Function);\n  }\n  if (_nonFunctionObject(a) || _nonFunctionObject(b)) {\n    if (!_nonFunctionObject(a)) {\n      a = { value: a };\n    }\n    if (!_nonFunctionObject(b)) {\n      b = { value: b };\n    }\n    return unionWithObj(a, b, func);\n  }\n  return func(a, b);\n}\n\n// Make composers\n(function () {\n  // pattern composers\n  const composers = {\n    set: [(a, b) => b],\n    keep: [(a) => a],\n    keepif: [(a, b) => (b ? a : undefined)],\n\n    // numerical functions\n    /**\n     *\n     * Assumes a pattern of numbers. Adds the given number to each item in the pattern.\n     * @name add\n     * @memberof Pattern\n     * @example\n     * // Here, the triad 0, 2, 4 is shifted by different amounts\n     * \"0 2 4\".add(\"<0 3 4 0>\").scale('C major').note()\n     * // Without add, the equivalent would be:\n     * // \"<[0 2 4] [3 5 7] [4 6 8] [0 2 4]>\".scale('C major').note()\n     * @example\n     * // You can also use add with notes:\n     * \"c3 e3 g3\".add(\"<0 5 7 0>\").note()\n     * // Behind the scenes, the notes are converted to midi numbers:\n     * // \"48 52 55\".add(\"<0 5 7 0>\").note()\n     */\n    add: [numeralArgs((a, b) => a + b)], // support string concatenation\n    /**\n     *\n     * Like add, but the given numbers are subtracted.\n     * @name sub\n     * @memberof Pattern\n     * @example\n     * \"0 2 4\".sub(\"<0 1 2 3>\").scale('C4 minor').note()\n     * // See add for more information.\n     */\n    sub: [numeralArgs((a, b) => a - b)],\n    /**\n     *\n     * Multiplies each number by the given factor.\n     * @name mul\n     * @memberof Pattern\n     * @example\n     * \"1 1.5 [1.66, <2 2.33>]\".mul(150).freq()\n     */\n    mul: [numeralArgs((a, b) => a * b)],\n    /**\n     *\n     * Divides each number by the given factor.\n     * @name div\n     * @memberof Pattern\n     */\n    div: [numeralArgs((a, b) => a / b)],\n    mod: [numeralArgs(_mod)],\n    pow: [numeralArgs(Math.pow)],\n    band: [numeralArgs((a, b) => a & b)],\n    bor: [numeralArgs((a, b) => a | b)],\n    bxor: [numeralArgs((a, b) => a ^ b)],\n    blshift: [numeralArgs((a, b) => a << b)],\n    brshift: [numeralArgs((a, b) => a >> b)],\n\n    // TODO - force numerical comparison if both look like numbers?\n    lt: [(a, b) => a < b],\n    gt: [(a, b) => a > b],\n    lte: [(a, b) => a <= b],\n    gte: [(a, b) => a >= b],\n    eq: [(a, b) => a == b],\n    eqt: [(a, b) => a === b],\n    ne: [(a, b) => a != b],\n    net: [(a, b) => a !== b],\n    and: [(a, b) => a && b],\n    or: [(a, b) => a || b],\n\n    //  bitwise ops\n    func: [(a, b) => b(a)],\n  };\n\n  const hows = ['In', 'Out', 'Mix', 'Squeeze', 'SqueezeOut', 'Trig', 'Trigzero'];\n\n  // generate methods to do what and how\n  for (const [what, [op, preprocess]] of Object.entries(composers)) {\n    // make plain version, e.g. pat._add(value) adds that plain value\n    // to all the values in pat\n    Pattern.prototype['_' + what] = function (value) {\n      return this.fmap((x) => op(x, value));\n    };\n\n    // make patternified monster version\n    Object.defineProperty(Pattern.prototype, what, {\n      // a getter that returns a function, so 'pat' can be\n      // accessed by closures that are methods of that function..\n      get: function () {\n        const pat = this;\n\n        // wrap the 'in' function as default behaviour\n        const wrapper = (...other) => pat[what]['in'](...other);\n\n        // add methods to that function for each behaviour\n        for (const how of hows) {\n          wrapper[how.toLowerCase()] = function (...other) {\n            var howpat = pat;\n            other = sequence(other);\n            if (preprocess) {\n              howpat = preprocess(howpat);\n              other = preprocess(other);\n            }\n            var result;\n            // hack to remove undefs when doing 'keepif'\n            if (what === 'keepif') {\n              // avoid union, as we want to throw away the value of 'b' completely\n              result = howpat['_op' + how](other, (a) => (b) => op(a, b));\n              result = result.removeUndefineds();\n            } else {\n              result = howpat['_op' + how](other, (a) => (b) => _composeOp(a, b, op));\n            }\n            return result;\n          };\n        }\n        wrapper.squeezein = wrapper.squeeze;\n\n        return wrapper;\n      },\n    });\n\n    // Default op to 'set', e.g. pat.squeeze(pat2) = pat.set.squeeze(pat2)\n    for (const how of hows) {\n      Pattern.prototype[how.toLowerCase()] = function (...args) {\n        return this.set[how.toLowerCase()](args);\n      };\n    }\n  }\n\n  // binary composers\n  /**\n   * Applies the given structure to the pattern:\n   *\n   * @example\n   * note(\"c3,eb3,g3\")\n   *   .struct(\"x ~ x ~ ~ x ~ x ~ ~ ~ x ~ x ~ ~\")\n   *   .slow(4)\n   */\n  Pattern.prototype.struct = function (...args) {\n    return this.keepif.out(...args);\n  };\n  Pattern.prototype.structAll = function (...args) {\n    return this.keep.out(...args);\n  };\n  /**\n   * Returns silence when mask is 0 or \"~\"\n   *\n   * @example\n   * note(\"c [eb,g] d [eb,g]\").mask(\"<1 [0 1]>\").slow(2)\n   */\n  Pattern.prototype.mask = function (...args) {\n    return this.keepif.in(...args);\n  };\n  Pattern.prototype.maskAll = function (...args) {\n    return this.keep.in(...args);\n  };\n  /**\n   * Resets the pattern to the start of the cycle for each onset of the reset pattern.\n   *\n   * @example\n   * s(\"<bd lt> sd, hh*4\").reset(\"<x@3 x(3,8)>\")\n   */\n  Pattern.prototype.reset = function (...args) {\n    return this.keepif.trig(...args);\n  };\n  Pattern.prototype.resetAll = function (...args) {\n    return this.keep.trig(...args);\n  };\n  /**\n   * Restarts the pattern for each onset of the restart pattern.\n   * While reset will only reset the current cycle, restart will start from cycle 0.\n   *\n   * @example\n   * s(\"<bd lt> sd, hh*4\").restart(\"<x@3 x(3,8)>\")\n   */\n  Pattern.prototype.restart = function (...args) {\n    return this.keepif.trigzero(...args);\n  };\n  Pattern.prototype.restartAll = function (...args) {\n    return this.keep.trigzero(...args);\n  };\n})();\n\n// aliases\nexport const polyrhythm = stack;\nexport const pr = stack;\n\nexport const pm = polymeter;\n\n// methods that create patterns, which are added to patternified Pattern methods\n// TODO: remove? this is only used in old transpiler (shapeshifter)\nPattern.prototype.factories = {\n  pure,\n  stack,\n  slowcat,\n  fastcat,\n  cat,\n  timeCat,\n  sequence,\n  seq,\n  polymeter,\n  pm,\n  polyrhythm,\n  pr,\n};\n// the magic happens in Pattern constructor. Keeping this in prototype enables adding methods from the outside (e.g. see tonal.ts)\n\n// Elemental patterns\n\n/**\n * Does absolutely nothing..\n * @name silence\n * @example\n * silence // \"~\"\n */\nexport const silence = new Pattern(() => []);\n\n/** A discrete value that repeats once per cycle.\n *\n * @returns {Pattern}\n * @example\n * pure('e4') // \"e4\"\n * @noAutocomplete\n */\nexport function pure(value) {\n  function query(state) {\n    return state.span.spanCycles.map((subspan) => new Hap(Fraction(subspan.begin).wholeCycle(), subspan, value));\n  }\n  return new Pattern(query);\n}\n\nexport function isPattern(thing) {\n  // thing?.constructor?.name !== 'Pattern' // <- this will fail when code is mangled\n  const is = thing instanceof Pattern || thing?._Pattern;\n  // TODO: find out how to check wrong core dependency. below will never work !thing === 'undefined'\n  // wrapping it in (..) will result other checks to log that warning (e.g. isPattern('kalimba'))\n  /* if (!thing instanceof Pattern) {\n    console.warn(\n      `Found Pattern that fails \"instanceof Pattern\" check.\n      This may happen if you are using multiple versions of @strudel.cycles/core. \n      Please check by running \"npm ls @strudel.cycles/core\".`,\n    );\n    console.log(thing);\n  } */\n  return is;\n}\n\nexport function reify(thing) {\n  // Turns something into a pattern, unless it's already a pattern\n  if (isPattern(thing)) {\n    return thing;\n  }\n  if (stringParser && typeof thing === 'string') {\n    return stringParser(thing);\n  }\n  return pure(thing);\n}\n\n/** The given items are played at the same time at the same length.\n *\n * @return {Pattern}\n * @synonyms polyrhythm, pr\n * @example\n * stack(\"g3\", \"b3\", [\"e4\", \"d4\"]).note() // \"g3,b3,[e4,d4]\".note()\n */\nexport function stack(...pats) {\n  // Array test here is to avoid infinite recursions..\n  pats = pats.map((pat) => (Array.isArray(pat) ? sequence(...pat) : reify(pat)));\n  const query = (state) => flatten(pats.map((pat) => pat.query(state)));\n  return new Pattern(query);\n}\n\n/** Concatenation: combines a list of patterns, switching between them successively, one per cycle:\n *\n * synonyms: {@link cat}\n *\n * @return {Pattern}\n * @example\n * slowcat(\"e5\", \"b4\", [\"d5\", \"c5\"])\n *\n */\nexport function slowcat(...pats) {\n  // Array test here is to avoid infinite recursions..\n  pats = pats.map((pat) => (Array.isArray(pat) ? sequence(...pat) : reify(pat)));\n\n  const query = function (state) {\n    const span = state.span;\n    const pat_n = _mod(span.begin.sam(), pats.length);\n    const pat = pats[pat_n];\n    if (!pat) {\n      // pat_n can be negative, if the span is in the past..\n      return [];\n    }\n    // A bit of maths to make sure that cycles from constituent patterns aren't skipped.\n    // For example if three patterns are slowcat-ed, the fourth cycle of the result should\n    // be the second (rather than fourth) cycle from the first pattern.\n    const offset = span.begin.floor().sub(span.begin.div(pats.length).floor());\n    return pat.withHapTime((t) => t.add(offset)).query(state.setSpan(span.withTime((t) => t.sub(offset))));\n  };\n  return new Pattern(query).splitQueries();\n}\n\n/** Concatenation: combines a list of patterns, switching between them successively, one per cycle. Unlike slowcat, this version will skip cycles.\n * @param {...any} items - The items to concatenate\n * @return {Pattern}\n */\nexport function slowcatPrime(...pats) {\n  pats = pats.map(reify);\n  const query = function (state) {\n    const pat_n = Math.floor(state.span.begin) % pats.length;\n    const pat = pats[pat_n]; // can be undefined for same cases e.g. /#cHVyZSg0MikKICAuZXZlcnkoMyxhZGQoNykpCiAgLmxhdGUoLjUp\n    return pat?.query(state) || [];\n  };\n  return new Pattern(query).splitQueries();\n}\n\n/** The given items are con**cat**enated, where each one takes one cycle.\n *\n * @param {...any} items - The items to concatenate\n * @synonyms slowcat\n * @return {Pattern}\n * @example\n * cat(\"e5\", \"b4\", [\"d5\", \"c5\"]).note() // \"<e5 b4 [d5 c5]>\".note()\n *\n */\nexport function cat(...pats) {\n  return slowcat(...pats);\n}\n\n/** Like {@link Pattern.seq}, but each step has a length, relative to the whole.\n * @return {Pattern}\n * @example\n * timeCat([3,\"e3\"],[1, \"g3\"]).note() // \"e3@3 g3\".note()\n */\nexport function timeCat(...timepats) {\n  const total = timepats.map((a) => a[0]).reduce((a, b) => a.add(b), Fraction(0));\n  let begin = Fraction(0);\n  const pats = [];\n  for (const [time, pat] of timepats) {\n    const end = begin.add(time);\n    pats.push(reify(pat)._compress(begin.div(total), end.div(total)));\n    begin = end;\n  }\n  return stack(...pats);\n}\n\n/**\n * Allows to arrange multiple patterns together over multiple cycles.\n * Takes a variable number of arrays with two elements specifying the number of cycles and the pattern to use.\n *\n * @return {Pattern}\n * @example\n * arrange([4, \"<c a f e>(3,8)\"],[2, \"<g a>(5,8)\"]).note()\n */\nexport function arrange(...sections) {\n  const total = sections.reduce((sum, [cycles]) => sum + cycles, 0);\n  sections = sections.map(([cycles, section]) => [cycles, section.fast(cycles)]);\n  return timeCat(...sections).slow(total);\n}\n\nexport function fastcat(...pats) {\n  return slowcat(...pats)._fast(pats.length);\n}\n\n/** See {@link fastcat} */\nexport function sequence(...pats) {\n  return fastcat(...pats);\n}\n\n/** Like **cat**, but the items are crammed into one cycle.\n * @synonyms fastcat, sequence\n * @example\n * seq(\"e5\", \"b4\", [\"d5\", \"c5\"]).note() // \"e5 b4 [d5 c5]\".note()\n *\n */\nexport function seq(...pats) {\n  return fastcat(...pats);\n}\n\nfunction _sequenceCount(x) {\n  if (Array.isArray(x)) {\n    if (x.length == 0) {\n      return [silence, 0];\n    }\n    if (x.length == 1) {\n      return _sequenceCount(x[0]);\n    }\n    return [fastcat(...x.map((a) => _sequenceCount(a)[0])), x.length];\n  }\n  return [reify(x), 1];\n}\n/**\n * Aligns one or more given sequences to the given number of steps per cycle.\n *\n * @name polymeterSteps\n * @param  {number} steps how many items are placed in one cycle\n * @param  {any[]} sequences one or more arrays of Patterns / values\n * @example\n * polymeterSteps(2, [\"c\", \"d\", \"e\", \"f\", \"g\", \"f\", \"e\", \"d\"])\n * .note().stack(s(\"bd\")) // 1 cycle = 1 bd = 2 notes\n * // note(\"{c d e f g f e d}%2\").stack(s(\"bd\"))\n */\nexport function polymeterSteps(steps, ...args) {\n  const seqs = args.map((a) => _sequenceCount(a));\n  if (seqs.length == 0) {\n    return silence;\n  }\n  if (steps == 0) {\n    steps = seqs[0][1];\n  }\n  const pats = [];\n  for (const seq of seqs) {\n    if (seq[1] == 0) {\n      continue;\n    }\n    if (steps == seq[1]) {\n      pats.push(seq[0]);\n    } else {\n      pats.push(seq[0]._fast(Fraction(steps).div(Fraction(seq[1]))));\n    }\n  }\n  return stack(...pats);\n}\n\n/**\n * Combines the given lists of patterns with the same pulse. This will create so called polymeters when different sized sequences are used.\n * @synonyms pm\n * @example\n * polymeter([\"c\", \"eb\", \"g\"], [\"c2\", \"g2\"]).note()\n * // \"{c eb g, c2 g2}\".note()\n *\n */\nexport function polymeter(...args) {\n  return polymeterSteps(0, ...args);\n}\n\nexport const mask = curry((a, b) => reify(b).mask(a));\nexport const struct = curry((a, b) => reify(b).struct(a));\nexport const superimpose = curry((a, b) => reify(b).superimpose(...a));\n\n// operators\nexport const set = curry((a, b) => reify(b).set(a));\nexport const keep = curry((a, b) => reify(b).keep(a));\nexport const keepif = curry((a, b) => reify(b).keepif(a));\nexport const add = curry((a, b) => reify(b).add(a));\nexport const sub = curry((a, b) => reify(b).sub(a));\nexport const mul = curry((a, b) => reify(b).mul(a));\nexport const div = curry((a, b) => reify(b).div(a));\nexport const mod = curry((a, b) => reify(b).mod(a));\nexport const pow = curry((a, b) => reify(b).pow(a));\nexport const band = curry((a, b) => reify(b).band(a));\nexport const bor = curry((a, b) => reify(b).bor(a));\nexport const bxor = curry((a, b) => reify(b).bxor(a));\nexport const blshift = curry((a, b) => reify(b).blshift(a));\nexport const brshift = curry((a, b) => reify(b).brshift(a));\nexport const lt = curry((a, b) => reify(b).lt(a));\nexport const gt = curry((a, b) => reify(b).gt(a));\nexport const lte = curry((a, b) => reify(b).lte(a));\nexport const gte = curry((a, b) => reify(b).gte(a));\nexport const eq = curry((a, b) => reify(b).eq(a));\nexport const eqt = curry((a, b) => reify(b).eqt(a));\nexport const ne = curry((a, b) => reify(b).ne(a));\nexport const net = curry((a, b) => reify(b).net(a));\nexport const and = curry((a, b) => reify(b).and(a));\nexport const or = curry((a, b) => reify(b).or(a));\nexport const func = curry((a, b) => reify(b).func(a));\n\n/**\n * Registers a new pattern method. The method is added to the Pattern class + the standalone function is returned from register.\n *\n * @param {string} name name of the function\n * @param {function} func function with 1 or more params, where last is the current pattern\n * @noAutocomplete\n *\n */\nexport function register(name, func, patternify = true) {\n  if (Array.isArray(name)) {\n    const result = {};\n    for (const name_item of name) {\n      result[name_item] = register(name_item, func, patternify);\n    }\n    return result;\n  }\n  const arity = func.length;\n  var pfunc; // the patternified function\n\n  if (patternify) {\n    pfunc = function (...args) {\n      args = args.map(reify);\n      const pat = args[args.length - 1];\n      if (arity === 1) {\n        return func(pat);\n      }\n      const [left, ...right] = args.slice(0, -1);\n      let mapFn = (...args) => {\n        // make sure to call func with the correct argument count\n        // args.length is expected to be <= arity-1\n        // so we set undefined args explicitly undefined\n        Array(arity - 1)\n          .fill()\n          .map((_, i) => args[i] ?? undefined);\n        return func(...args, pat);\n      };\n      mapFn = curry(mapFn, null, arity - 1);\n      return right.reduce((acc, p) => acc.appLeft(p), left.fmap(mapFn)).innerJoin();\n    };\n  } else {\n    pfunc = function (...args) {\n      args = args.map(reify);\n      return func(...args);\n    };\n  }\n\n  Pattern.prototype[name] = function (...args) {\n    // For methods that take a single argument (plus 'this'), allow\n    // multiple arguments but sequence them\n    if (arity === 2 && args.length !== 1) {\n      args = [sequence(...args)];\n    } else if (arity !== args.length + 1) {\n      throw new Error(`.${name}() expects ${arity - 1} inputs but got ${args.length}.`);\n    }\n    args = args.map(reify);\n    return pfunc(...args, this);\n  };\n\n  if (arity > 1) {\n    // There are patternified args, so lets make an unpatternified\n    // version, prefixed by '_'\n    Pattern.prototype['_' + name] = function (...args) {\n      return func(...args, this);\n    };\n  }\n\n  // toplevel functions get curried as well as patternified\n  // because pfunc uses spread args, we need to state the arity explicitly!\n  return curry(pfunc, null, arity);\n}\n\n//////////////////////////////////////////////////////////////////////\n// Numerical transformations\n\n/**\n * Assumes a numerical pattern. Returns a new pattern with all values rounded\n * to the nearest integer.\n * @name round\n * @memberof Pattern\n * @returns Pattern\n * @example\n * \"0.5 1.5 2.5\".round().scale('C major').note()\n */\nexport const round = register('round', function (pat) {\n  return pat.asNumber().fmap((v) => Math.round(v));\n});\n\n/**\n * Assumes a numerical pattern. Returns a new pattern with all values set to\n * their mathematical floor. E.g. `3.7` replaced with to `3`, and `-4.2`\n * replaced with `-5`.\n * @name floor\n * @memberof Pattern\n * @returns Pattern\n * @example\n * \"42 42.1 42.5 43\".floor().note()\n */\nexport const floor = register('floor', function (pat) {\n  return pat.asNumber().fmap((v) => Math.floor(v));\n});\n\n/**\n * Assumes a numerical pattern. Returns a new pattern with all values set to\n * their mathematical ceiling. E.g. `3.2` replaced with `4`, and `-4.2`\n * replaced with `-4`.\n * @name ceil\n * @memberof Pattern\n * @returns Pattern\n * @example\n * \"42 42.1 42.5 43\".ceil().note()\n */\nexport const ceil = register('ceil', function (pat) {\n  return pat.asNumber().fmap((v) => Math.ceil(v));\n});\n/**\n * Assumes a numerical pattern, containing unipolar values in the range 0 ..\n * 1. Returns a new pattern with values scaled to the bipolar range -1 .. 1\n * @returns Pattern\n * @noAutocomplete\n */\nexport const toBipolar = register('toBipolar', function (pat) {\n  return pat.fmap((x) => x * 2 - 1);\n});\n\n/**\n * Assumes a numerical pattern, containing bipolar values in the range -1 .. 1\n * Returns a new pattern with values scaled to the unipolar range 0 .. 1\n * @returns Pattern\n * @noAutocomplete\n */\nexport const fromBipolar = register('fromBipolar', function (pat) {\n  return pat.fmap((x) => (x + 1) / 2);\n});\n\n/**\n * Assumes a numerical pattern, containing unipolar values in the range 0 .. 1.\n * Returns a new pattern with values scaled to the given min/max range.\n * Most useful in combination with continuous patterns.\n * @name range\n * @memberof Pattern\n * @returns Pattern\n * @example\n * s(\"bd sd,hh*4\").cutoff(sine.range(500,2000).slow(4))\n */\nexport const range = register('range', function (min, max, pat) {\n  return pat.mul(max - min).add(min);\n});\n\n/**\n * Assumes a numerical pattern, containing unipolar values in the range 0 .. 1\n * Returns a new pattern with values scaled to the given min/max range,\n * following an exponential curve.\n * @name rangex\n * @memberof Pattern\n * @returns Pattern\n * @example\n * s(\"bd sd,hh*4\").cutoff(sine.rangex(500,2000).slow(4))\n */\nexport const rangex = register('rangex', function (min, max, pat) {\n  return pat._range(Math.log(min), Math.log(max)).fmap(Math.exp);\n});\n\n/**\n * Assumes a numerical pattern, containing bipolar values in the range -1 .. 1\n * Returns a new pattern with values scaled to the given min/max range.\n * @name range2\n * @memberof Pattern\n * @returns Pattern\n * @example\n * s(\"bd sd,hh*4\").cutoff(sine2.range2(500,2000).slow(4))\n */\nexport const range2 = register('range2', function (min, max, pat) {\n  return pat.fromBipolar()._range(min, max);\n});\n\n/**\n * Allows dividing numbers via list notation using \":\".\n * Returns a new pattern with just numbers.\n * @name ratio\n * @memberof Pattern\n * @returns Pattern\n * @example\n * ratio(\"1, 5:4, 3:2\").mul(110).freq().s(\"piano\").slow(2)\n */\nexport const ratio = register('ratio', (pat) =>\n  pat.fmap((v) => {\n    if (!Array.isArray(v)) {\n      return v;\n    }\n    return v.slice(1).reduce((acc, n) => acc / n, v[0]);\n  }),\n);\n\n//////////////////////////////////////////////////////////////////////\n// Structural and temporal transformations\n\n/** Compress each cycle into the given timespan, leaving a gap\n * @example\n * cat(\n *   s(\"bd sd\").compress(.25,.75),\n *   s(\"~ bd sd ~\")\n * )\n */\nexport const compress = register('compress', function (b, e, pat) {\n  b = Fraction(b);\n  e = Fraction(e);\n  if (b.gt(e) || b.gt(1) || e.gt(1) || b.lt(0) || e.lt(0)) {\n    return silence;\n  }\n  return pat._fastGap(Fraction(1).div(e.sub(b)))._late(b);\n});\n\nexport const { compressSpan, compressspan } = register(['compressSpan', 'compressspan'], function (span, pat) {\n  return pat._compress(span.begin, span.end);\n});\n\n/**\n * speeds up a pattern like fast, but rather than it playing multiple times as fast would it instead leaves a gap in the remaining space of the cycle. For example, the following will play the sound pattern \"bd sn\" only once but compressed into the first half of the cycle, i.e. twice as fast.\n * @name fastGap\n * @synonyms fastgap\n * @example\n * s(\"bd sd\").fastGap(2)\n */\nexport const { fastGap, fastgap } = register(['fastGap', 'fastgap'], function (factor, pat) {\n  // A bit fiddly, to drop zero-width queries at the start of the next cycle\n  const qf = function (span) {\n    const cycle = span.begin.sam();\n    const bpos = span.begin.sub(cycle).mul(factor).min(1);\n    const epos = span.end.sub(cycle).mul(factor).min(1);\n    if (bpos >= 1) {\n      return undefined;\n    }\n    return new TimeSpan(cycle.add(bpos), cycle.add(epos));\n  };\n  // Also fiddly, to maintain the right 'whole' relative to the part\n  const ef = function (hap) {\n    const begin = hap.part.begin;\n    const end = hap.part.end;\n    const cycle = begin.sam();\n    const beginPos = begin.sub(cycle).div(factor).min(1);\n    const endPos = end.sub(cycle).div(factor).min(1);\n    const newPart = new TimeSpan(cycle.add(beginPos), cycle.add(endPos));\n    const newWhole = !hap.whole\n      ? undefined\n      : new TimeSpan(\n          newPart.begin.sub(begin.sub(hap.whole.begin).div(factor)),\n          newPart.end.add(hap.whole.end.sub(end).div(factor)),\n        );\n    return new Hap(newWhole, newPart, hap.value, hap.context);\n  };\n  return pat.withQuerySpanMaybe(qf).withHap(ef).splitQueries();\n});\n\n/**\n * Similar to compress, but doesn't leave gaps, and the 'focus' can be bigger than a cycle\n * @example\n * s(\"bd hh sd hh\").focus(1/4, 3/4)\n */\nexport const focus = register('focus', function (b, e, pat) {\n  b = Fraction(b);\n  e = Fraction(e);\n  return pat._fast(Fraction(1).div(e.sub(b))).late(b.cyclePos());\n});\n\nexport const { focusSpan, focusspan } = register(['focusSpan', 'focusspan'], function (span, pat) {\n  return pat._focus(span.begin, span.end);\n});\n\n/** The ply function repeats each event the given number of times.\n * @example\n * s(\"bd ~ sd cp\").ply(\"<1 2 3>\")\n */\nexport const ply = register('ply', function (factor, pat) {\n  return pat.fmap((x) => pure(x)._fast(factor)).squeezeJoin();\n});\n\n/**\n * Speed up a pattern by the given factor. Used by \"*\" in mini notation.\n *\n * @name fast\n * @synonyms density\n * @memberof Pattern\n * @param {number | Pattern} factor speed up factor\n * @returns Pattern\n * @example\n * s(\"<bd sd> hh\").fast(2) // s(\"[<bd sd> hh]*2\")\n */\nexport const { fast, density } = register(['fast', 'density'], function (factor, pat) {\n  if (factor === 0) {\n    return silence;\n  }\n  factor = Fraction(factor);\n  const fastQuery = pat.withQueryTime((t) => t.mul(factor));\n  return fastQuery.withHapTime((t) => t.div(factor));\n});\n\n/**\n * Both speeds up the pattern (like 'fast') and the sample playback (like 'speed').\n * @example\n * s(\"bd sd:2\").hurry(\"<1 2 4 3>\").slow(1.5)\n */\nexport const hurry = register('hurry', function (r, pat) {\n  return pat._fast(r).mul(pure({ speed: r }));\n});\n\n/**\n * Slow down a pattern over the given number of cycles. Like the \"/\" operator in mini notation.\n *\n * @name slow\n * @synonyms sparsity\n * @memberof Pattern\n * @param {number | Pattern} factor slow down factor\n * @returns Pattern\n * @example\n * s(\"<bd sd> hh\").slow(2) // s(\"[<bd sd> hh]/2\")\n */\nexport const { slow, sparsity } = register(['slow', 'sparsity'], function (factor, pat) {\n  if (factor === 0) {\n    return silence;\n  }\n  return pat._fast(Fraction(1).div(factor));\n});\n\n/**\n * Carries out an operation 'inside' a cycle.\n * @example\n * \"0 1 2 3 4 3 2 1\".inside(4, rev).scale('C major').note()\n * // \"0 1 2 3 4 3 2 1\".slow(4).rev().fast(4).scale('C major').note()\n */\nexport const inside = register('inside', function (factor, f, pat) {\n  return f(pat._slow(factor))._fast(factor);\n});\n\n/**\n * Carries out an operation 'outside' a cycle.\n * @example\n * \"<[0 1] 2 [3 4] 5>\".outside(4, rev).scale('C major').note()\n * // \"<[0 1] 2 [3 4] 5>\".fast(4).rev().slow(4).scale('C major').note()\n */\nexport const outside = register('outside', function (factor, f, pat) {\n  return f(pat._fast(factor))._slow(factor);\n});\n\n/**\n * Applies the given function every n cycles, starting from the last cycle.\n * @name lastOf\n * @memberof Pattern\n * @param {number} n how many cycles\n * @param {function} func function to apply\n * @returns Pattern\n * @example\n * note(\"c3 d3 e3 g3\").lastOf(4, x=>x.rev())\n */\nexport const lastOf = register('lastOf', function (n, func, pat) {\n  const pats = Array(n - 1).fill(pat);\n  pats.push(func(pat));\n  return slowcatPrime(...pats);\n});\n\n/**\n * Applies the given function every n cycles, starting from the first cycle.\n * @name firstOf\n * @memberof Pattern\n * @param {number} n how many cycles\n * @param {function} func function to apply\n * @returns Pattern\n * @example\n * note(\"c3 d3 e3 g3\").firstOf(4, x=>x.rev())\n */\n\n/**\n * An alias for {@link firstOf}\n * @name every\n * @memberof Pattern\n * @param {number} n how many cycles\n * @param {function} func function to apply\n * @returns Pattern\n * @example\n * note(\"c3 d3 e3 g3\").every(4, x=>x.rev())\n */\nexport const { firstOf, every } = register(['firstOf', 'every'], function (n, func, pat) {\n  const pats = Array(n - 1).fill(pat);\n  pats.unshift(func(pat));\n  return slowcatPrime(...pats);\n});\n\n/**\n * Like layer, but with a single function:\n * @name apply\n * @memberof Pattern\n * @example\n * \"<c3 eb3 g3>\".scale('C minor').apply(scaleTranspose(\"0,2,4\")).note()\n */\n// TODO: remove or dedupe with layer?\nexport const apply = register('apply', function (func, pat) {\n  return func(pat);\n});\n\n/**\n * Plays the pattern at the given cycles per minute.\n * @example\n * s(\"<bd sd>,hh*2\").cpm(90) // = 90 bpm\n */\n// TODO - global clock\nexport const cpm = register('cpm', function (cpm, pat) {\n  return pat._fast(cpm / 60);\n});\n\n/**\n * Nudge a pattern to start earlier in time. Equivalent of Tidal's <~ operator\n *\n * @name early\n * @memberof Pattern\n * @param {number | Pattern} cycles number of cycles to nudge left\n * @returns Pattern\n * @example\n * \"bd ~\".stack(\"hh ~\".early(.1)).s()\n */\nexport const early = register('early', function (offset, pat) {\n  offset = Fraction(offset);\n  return pat.withQueryTime((t) => t.add(offset)).withHapTime((t) => t.sub(offset));\n});\n\n/**\n * Nudge a pattern to start later in time. Equivalent of Tidal's ~> operator\n *\n * @name late\n * @memberof Pattern\n * @param {number | Pattern} cycles number of cycles to nudge right\n * @returns Pattern\n * @example\n * \"bd ~\".stack(\"hh ~\".late(.1)).s()\n */\nexport const late = register('late', function (offset, pat) {\n  offset = Fraction(offset);\n  return pat._early(Fraction(0).sub(offset));\n});\n\n/**\n * Plays a portion of a pattern, specified by the beginning and end of a time span. The new resulting pattern is played over the time period of the original pattern:\n *\n * @example\n * s(\"bd*2 hh*3 [sd bd]*2 perc\").zoom(0.25, 0.75)\n * // s(\"hh*3 [sd bd]*2\") // equivalent\n */\nexport const zoom = register('zoom', function (s, e, pat) {\n  e = Fraction(e);\n  s = Fraction(s);\n  const d = e.sub(s);\n  return pat\n    .withQuerySpan((span) => span.withCycle((t) => t.mul(d).add(s)))\n    .withHapSpan((span) => span.withCycle((t) => t.sub(s).div(d)))\n    .splitQueries();\n});\n\nexport const { zoomArc, zoomarc } = register(['zoomArc', 'zoomarc'], function (a, pat) {\n  return pat.zoom(a.begin, a.end);\n});\n\n/**\n * Selects the given fraction of the pattern and repeats that part to fill the remainder of the cycle.\n * @param {number} fraction fraction to select\n * @example\n * s(\"lt ht mt cp, [hh oh]*2\").linger(\"<1 .5 .25 .125>\")\n */\nexport const linger = register('linger', function (t, pat) {\n  if (t == 0) {\n    return silence;\n  } else if (t < 0) {\n    return pat._zoom(t.add(1), 1)._slow(t);\n  }\n  return pat._zoom(0, t)._slow(t);\n});\n\n/**\n * Samples the pattern at a rate of n events per cycle. Useful for turning a continuous pattern into a discrete one.\n * @param {number} segments number of segments per cycle\n * @example\n * note(saw.range(0,12).segment(24)).add(40)\n */\nexport const segment = register('segment', function (rate, pat) {\n  return pat.struct(pure(true)._fast(rate));\n});\n\n/**\n * Swaps 1s and 0s in a binary pattern.\n * @name invert\n * @synonyms inv\n * @example\n * s(\"bd\").struct(\"1 0 0 1 0 0 1 0\".lastOf(4, invert))\n */\nexport const { invert, inv } = register(['invert', 'inv'], function (pat) {\n  // Swap true/false in a binary pattern\n  return pat.fmap((x) => !x);\n});\n\n/**\n * Applies the given function whenever the given pattern is in a true state.\n * @name when\n * @memberof Pattern\n * @param {Pattern} binary_pat\n * @param {function} func\n * @returns Pattern\n * @example\n * \"c3 eb3 g3\".when(\"<0 1>/2\", x=>x.sub(5)).note()\n */\nexport const when = register('when', function (on, func, pat) {\n  return on ? func(pat) : pat;\n});\n\n/**\n * Superimposes the function result on top of the original pattern, delayed by the given time.\n * @name off\n * @memberof Pattern\n * @param {Pattern | number} time offset time\n * @param {function} func function to apply\n * @returns Pattern\n * @example\n * \"c3 eb3 g3\".off(1/8, x=>x.add(7)).note()\n */\nexport const off = register('off', function (time_pat, func, pat) {\n  return stack(pat, func(pat.late(time_pat)));\n});\n\n/**\n * Returns a new pattern where every other cycle is played once, twice as\n * fast, and offset in time by one quarter of a cycle. Creates a kind of\n * breakbeat feel.\n * @returns Pattern\n */\nexport const brak = register('brak', function (pat) {\n  return pat.when(slowcat(false, true), (x) => fastcat(x, silence)._late(0.25));\n});\n\n/**\n * Reverse all haps in a pattern\n *\n * @name rev\n * @memberof Pattern\n * @returns Pattern\n * @example\n * note(\"c3 d3 e3 g3\").rev()\n */\nexport const rev = register('rev', function (pat) {\n  const query = function (state) {\n    const span = state.span;\n    const cycle = span.begin.sam();\n    const next_cycle = span.begin.nextSam();\n    const reflect = function (to_reflect) {\n      const reflected = to_reflect.withTime((time) => cycle.add(next_cycle.sub(time)));\n      // [reflected.begin, reflected.end] = [reflected.end, reflected.begin] -- didn't work\n      const tmp = reflected.begin;\n      reflected.begin = reflected.end;\n      reflected.end = tmp;\n      return reflected;\n    };\n    const haps = pat.query(state.setSpan(reflect(span)));\n    return haps.map((hap) => hap.withSpan(reflect));\n  };\n  return new Pattern(query).splitQueries();\n});\n\n/** Like press, but allows you to specify the amount by which each\n * event is shifted. pressBy(0.5) is the same as press, while\n * pressBy(1/3) shifts each event by a third of its timespan.\n * @example\n * stack(s(\"hh*4\"),\n *       s(\"bd mt sd ht\").pressBy(\"<0 0.5 0.25>\")\n *      ).slow(2)\n */\nexport const pressBy = register('pressBy', function (r, pat) {\n  return pat.fmap((x) => pure(x).compress(r, 1)).squeezeJoin();\n});\n\n/**\n * Syncopates a rhythm, by shifting each event halfway into its timespan.\n * @example\n * stack(s(\"hh*4\"),\n *       s(\"bd mt sd ht\").every(4, press)\n *      ).slow(2)\n */\nexport const press = register('press', function (pat) {\n  return pat._pressBy(0.5);\n});\n\n/**\n * Silences a pattern.\n * @example\n * stack(\n *   s(\"bd\").hush(),\n *   s(\"hh*3\")\n * )\n */\nPattern.prototype.hush = function () {\n  return silence;\n};\n\n/**\n * Applies `rev` to a pattern every other cycle, so that the pattern alternates between forwards and backwards.\n * @example\n * note(\"c d e g\").palindrome()\n */\nexport const palindrome = register('palindrome', function (pat) {\n  return pat.lastOf(2, rev);\n});\n\n/**\n * Jux with adjustable stereo width. 0 = mono, 1 = full stereo.\n * @name juxBy\n * @synonyms juxby\n * @example\n * s(\"lt ht mt ht hh\").juxBy(\"<0 .5 1>/2\", rev)\n */\nexport const { juxBy, juxby } = register(['juxBy', 'juxby'], function (by, func, pat) {\n  by /= 2;\n  const elem_or = function (dict, key, dflt) {\n    if (key in dict) {\n      return dict[key];\n    }\n    return dflt;\n  };\n  const left = pat.withValue((val) => Object.assign({}, val, { pan: elem_or(val, 'pan', 0.5) - by }));\n  const right = pat.withValue((val) => Object.assign({}, val, { pan: elem_or(val, 'pan', 0.5) + by }));\n\n  return stack(left, func(right));\n});\n\n/**\n * The jux function creates strange stereo effects, by applying a function to a pattern, but only in the right-hand channel.\n * @example\n * s(\"lt ht mt ht hh\").jux(rev)\n */\nexport const jux = register('jux', function (func, pat) {\n  return pat._juxBy(1, func, pat);\n});\n\n/**\n * Superimpose and offset multiple times, applying the given function each time.\n * @name echoWith\n * @synonyms echowith, stutWith, stutwith\n * @param {number} times how many times to repeat\n * @param {number} time cycle offset between iterations\n * @param {function} func function to apply, given the pattern and the iteration index\n * @example\n * \"<0 [2 4]>\"\n * .echoWith(4, 1/8, (p,n) => p.add(n*2))\n * .scale('C minor').note().clip(.2)\n */\nexport const { echoWith, echowith, stutWith, stutwith } = register(\n  ['echoWith', 'echowith', 'stutWith', 'stutwith'],\n  function (times, time, func, pat) {\n    return stack(...listRange(0, times - 1).map((i) => func(pat.late(Fraction(time).mul(i)), i)));\n  },\n);\n\n/**\n * Superimpose and offset multiple times, gradually decreasing the velocity\n * @name echo\n * @memberof Pattern\n * @returns Pattern\n * @param {number} times how many times to repeat\n * @param {number} time cycle offset between iterations\n * @param {number} feedback velocity multiplicator for each iteration\n * @example\n * s(\"bd sd\").echo(3, 1/6, .8)\n */\nexport const echo = register('echo', function (times, time, feedback, pat) {\n  return pat._echoWith(times, time, (pat, i) => pat.velocity(Math.pow(feedback, i)));\n});\n\n/**\n * Deprecated. Like echo, but the last 2 parameters are flipped.\n * @name stut\n * @param {number} times how many times to repeat\n * @param {number} feedback velocity multiplicator for each iteration\n * @param {number} time cycle offset between iterations\n * @example\n * s(\"bd sd\").stut(3, .8, 1/6)\n */\nexport const stut = register('stut', function (times, feedback, time, pat) {\n  return pat._echoWith(times, time, (pat, i) => pat.velocity(Math.pow(feedback, i)));\n});\n\n/**\n * Divides a pattern into a given number of subdivisions, plays the subdivisions in order, but increments the starting subdivision each cycle. The pattern wraps to the first subdivision after the last subdivision is played.\n * @name iter\n * @memberof Pattern\n * @returns Pattern\n * @example\n * note(\"0 1 2 3\".scale('A minor')).iter(4)\n */\n\nconst _iter = function (times, pat, back = false) {\n  times = Fraction(times);\n  return slowcat(\n    ...listRange(0, times.sub(1)).map((i) =>\n      back ? pat.late(Fraction(i).div(times)) : pat.early(Fraction(i).div(times)),\n    ),\n  );\n};\n\nexport const iter = register('iter', function (times, pat) {\n  return _iter(times, pat, false);\n});\n\n/**\n * Like `iter`, but plays the subdivisions in reverse order. Known as iter' in tidalcycles\n * @name iterBack\n * @synonyms iterback\n * @memberof Pattern\n * @returns Pattern\n * @example\n * note(\"0 1 2 3\".scale('A minor')).iterBack(4)\n */\nexport const { iterBack, iterback } = register(['iterBack', 'iterback'], function (times, pat) {\n  return _iter(times, pat, true);\n});\n\n/**\n * Repeats each cycle the given number of times.\n * @name repeatCycles\n * @memberof Pattern\n * @returns Pattern\n * @example\n * note(irand(12).add(34)).segment(4).repeatCycles(2).s(\"gm_acoustic_guitar_nylon\")\n */\nconst _repeatCycles = function (n, pat) {\n  return slowcat(...Array(n).fill(pat));\n};\n\nconst { repeatCycles } = register('repeatCycles', _repeatCycles);\n\n/**\n * Divides a pattern into a given number of parts, then cycles through those parts in turn, applying the given function to each part in turn (one part per cycle).\n * @name chunk\n * @synonyms slowChunk, slowchunk\n * @memberof Pattern\n * @returns Pattern\n * @example\n * \"0 1 2 3\".chunk(4, x=>x.add(7)).scale('A minor').note()\n */\nconst _chunk = function (n, func, pat, back = false, fast = false) {\n  const binary = Array(n - 1).fill(false);\n  binary.unshift(true);\n  // Invert the 'back' because we want to shift the pattern forwards,\n  // and so time backwards\n  const binary_pat = _iter(n, sequence(...binary), !back);\n  if (!fast) {\n    pat = pat.repeatCycles(n);\n  }\n  return pat.when(binary_pat, func);\n};\n\nconst { chunk, slowchunk, slowChunk } = register(['chunk', 'slowchunk', 'slowChunk'], function (n, func, pat) {\n  return _chunk(n, func, pat, false, false);\n});\n\n/**\n * Like `chunk`, but cycles through the parts in reverse order. Known as chunk' in tidalcycles\n * @name chunkBack\n * @synonyms chunkback\n * @memberof Pattern\n * @returns Pattern\n * @example\n * \"0 1 2 3\".chunkBack(4, x=>x.add(7)).scale('A minor').note()\n */\nexport const { chunkBack, chunkback } = register(['chunkBack', 'chunkback'], function (n, func, pat) {\n  return _chunk(n, func, pat, true);\n});\n\n/**\n * Like `chunk`, but the cycles of the source pattern aren't repeated\n * for each set of chunks.\n * @name fastChunk\n * @synonyms fastchunk\n * @memberof Pattern\n * @returns Pattern\n * @example\n * \"<0 8> 1 2 3 4 5 6 7\".fastChunk(4, x => x.color('red')).slow(4).scale(\"C2:major\").note()\n  .s(\"folkharp\")\n */\nconst { fastchunk, fastChunk } = register(['fastchunk', 'fastChunk'], function (n, func, pat) {\n  return _chunk(n, func, pat, false, true);\n});\n\n// TODO - redefine elsewhere in terms of mask\nexport const bypass = register('bypass', function (on, pat) {\n  on = Boolean(parseInt(on));\n  return on ? silence : pat;\n});\n\n/**\n * Loops the pattern inside at `offset` for `cycles`.\n * @param {number} offset start point of loop in cycles\n * @param {number} cycles loop length in cycles\n * @example\n * // Looping a portion of randomness\n * note(irand(8).segment(4).scale('C3 minor')).ribbon(1337, 2)\n */\nexport const ribbon = register('ribbon', (offset, cycles, pat) => pat.early(offset).restart(pure(1).slow(cycles)));\n\n// sets absolute duration of haps\n// TODO - fix\nexport const duration = register('duration', function (value, pat) {\n  return pat.withHapSpan((span) => new TimeSpan(span.begin, span.begin.add(value)));\n});\n\nexport const hsla = register('hsla', (h, s, l, a, pat) => {\n  return pat.color(`hsla(${h}turn,${s * 100}%,${l * 100}%,${a})`);\n});\n\nexport const hsl = register('hsl', (h, s, l, pat) => {\n  return pat.color(`hsl(${h}turn,${s * 100}%,${l * 100}%)`);\n});\n\n/**\n * Sets the color of the hap in visualizations like pianoroll or highlighting.\n * @name color\n * @synonyms colour\n * @param {string} color Hexadecimal or CSS color name\n */\n// TODO: move this to controls https://github.com/tidalcycles/strudel/issues/288\nexport const { color, colour } = register(['color', 'colour'], function (color, pat) {\n  return pat.withContext((context) => ({ ...context, color }));\n});\n\n/**\n *\n * Sets the velocity from 0 to 1. Is multiplied together with gain.\n * @name velocity\n * @example\n * s(\"hh*8\")\n * .gain(\".4!2 1 .4!2 1 .4 1\")\n * .velocity(\".4 1\")\n */\nexport const velocity = register('velocity', function (velocity, pat) {\n  return pat.withContext((context) => ({ ...context, velocity: (context.velocity || 1) * velocity }));\n});\n\n/**\n *\n * Multiplies the hap duration with the given factor.\n * With samples, `clip` might be a better function to use ([more info](https://github.com/tidalcycles/strudel/pull/598))\n * @name legato\n * @memberof Pattern\n * @example\n * note(\"c3 eb3 g3 c4\").legato(\"<.25 .5 1 2>\")\n */\n// TODO - fix\nexport const legato = register('legato', function (value, pat) {\n  value = Fraction(value);\n  return pat.withHapSpan((span) => new TimeSpan(span.begin, span.begin.add(span.end.sub(span.begin).mul(value))));\n});\n\n//////////////////////////////////////////////////////////////////////\n// Control-related functions, i.e. ones that manipulate patterns of\n// objects\n\n/**\n * Cuts each sample into the given number of parts, allowing you to explore a technique known as 'granular synthesis'.\n * It turns a pattern of samples into a pattern of parts of samples.\n * @name chop\n * @memberof Pattern\n * @returns Pattern\n * @example\n * samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\n * s(\"rhodes\")\n *  .chop(4)\n *  .rev() // reverse order of chops\n *  .loopAt(4) // fit sample into 4 cycles\n *\n */\nexport const chop = register('chop', function (n, pat) {\n  const slices = Array.from({ length: n }, (x, i) => i);\n  const slice_objects = slices.map((i) => ({ begin: i / n, end: (i + 1) / n }));\n  const func = function (o) {\n    return sequence(slice_objects.map((slice_o) => Object.assign({}, o, slice_o)));\n  };\n  return pat.squeezeBind(func);\n});\n\n/**\n * Cuts each sample into the given number of parts, triggering progressive portions of each sample at each loop.\n * @name striate\n * @memberof Pattern\n * @returns Pattern\n * @example\n * s(\"numbers:0 numbers:1 numbers:2\").striate(6).slow(6)\n */\nexport const striate = register('striate', function (n, pat) {\n  const slices = Array.from({ length: n }, (x, i) => i);\n  const slice_objects = slices.map((i) => ({ begin: i / n, end: (i + 1) / n }));\n  const slicePat = slowcat(...slice_objects);\n  return pat.set(slicePat)._fast(n);\n});\n\n/**\n * Makes the sample fit the given number of cycles by changing the speed.\n * @name loopAt\n * @memberof Pattern\n * @returns Pattern\n * @example\n * samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\n * s(\"rhodes\").loopAt(4)\n */\n// TODO - global cps clock\nconst _loopAt = function (factor, pat, cps = 1) {\n  return pat\n    .speed((1 / factor) * cps)\n    .unit('c')\n    .slow(factor);\n};\n\n/**\n * Chops samples into the given number of slices, triggering those slices with a given pattern of slice numbers.\n * Instead of a number, it also accepts a list of numbers from 0 to 1 to slice at specific points.\n * @name slice\n * @memberof Pattern\n * @returns Pattern\n * @example\n * await samples('github:tidalcycles/Dirt-Samples/master')\n * s(\"breaks165\").slice(8, \"0 1 <2 2*2> 3 [4 0] 5 6 7\".every(3, rev)).slow(1.5)\n * @example\n * await samples('github:tidalcycles/Dirt-Samples/master')\n * s(\"breaks125/2\").fit().slice([0,.25,.5,.75], \"0 1 1 <2 3>\")\n */\n\nexport const slice = register(\n  'slice',\n  function (npat, ipat, opat) {\n    return npat.innerBind((n) =>\n      ipat.outerBind((i) =>\n        opat.outerBind((o) => {\n          // If it's not an object, assume it's a string and make it a 's' control parameter\n          o = o instanceof Object ? o : { s: o };\n          const begin = Array.isArray(n) ? n[i] : i / n;\n          const end = Array.isArray(n) ? n[i + 1] : (i + 1) / n;\n          return pure({ begin, end, _slices: n, ...o });\n        }),\n      ),\n    );\n  },\n  false, // turns off auto-patternification\n);\n\n/**\n * Works the same as slice, but changes the playback speed of each slice to match the duration of its step.\n * @name splice\n * @example\n * await samples('github:tidalcycles/Dirt-Samples/master')\n * s(\"breaks165\")\n * .splice(8,  \"0 1 [2 3 0]@2 3 0@2 7\")\n * .hurry(0.65)\n */\n\nexport const splice = register(\n  'splice',\n  function (npat, ipat, opat) {\n    const sliced = slice(npat, ipat, opat);\n    return sliced.withHap(function (hap) {\n      return hap.withValue((v) => ({\n        ...{\n          speed: (1 / v._slices / hap.whole.duration) * (v.speed || 1),\n          unit: 'c',\n        },\n        ...v,\n      }));\n    });\n  },\n  false, // turns off auto-patternification\n);\n\n// this function will be redefined in repl.mjs to use the correct cps value.\n// It is still here to work in cases where repl.mjs is not used\n\nexport const { loopAt, loopat } = register(['loopAt', 'loopat'], function (factor, pat) {\n  return _loopAt(factor, pat, 1);\n});\n\n// the fit function will be redefined in repl.mjs to use the correct cps value.\n// It is still here to work in cases where repl.mjs is not used\n/**\n * Makes the sample fit its event duration. Good for rhythmical loops like drum breaks.\n * Similar to loopAt.\n * @name fit\n * @example\n * samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\n * s(\"rhodes/4\").fit()\n */\nexport const fit = register('fit', (pat) =>\n  pat.withHap((hap) =>\n    hap.withValue((v) => ({\n      ...v,\n      speed: 1 / hap.whole.duration,\n      unit: 'c',\n    })),\n  ),\n);\n\n/**\n * Makes the sample fit the given number of cycles and cps value, by\n * changing the speed. Please note that at some point cps will be\n * given by a global clock and this function will be\n * deprecated/removed.\n * @name loopAtCps\n * @memberof Pattern\n * @returns Pattern\n * @example\n * samples({ rhodes: 'https://cdn.freesound.org/previews/132/132051_316502-lq.mp3' })\n * s(\"rhodes\").loopAtCps(4,1.5).cps(1.5)\n */\n// TODO - global cps clock\nexport const { loopAtCps, loopatcps } = register(['loopAtCps', 'loopatcps'], function (factor, cps, pat) {\n  return _loopAt(factor, pat, cps);\n});\n\n/** exposes a custom value at query time. basically allows mutating state without evaluation */\nexport const ref = (accessor) =>\n  pure(1)\n    .withValue(() => reify(accessor()))\n    .innerJoin();\n\nlet fadeGain = (p) => (p < 0.5 ? 1 : 1 - (p - 0.5) / 0.5);\n\n/**\n * Cross-fades between left and right from 0 to 1:\n * - 0 = (full left, no right)\n * - .5 = (both equal)\n * - 1 = (no left, full right)\n *\n * @name xfade\n * @example\n * xfade(s(\"bd*2\"), \"<0 .25 .5 .75 1>\", s(\"hh*8\"))\n */\nexport let xfade = (a, pos, b) => {\n  pos = reify(pos);\n  a = reify(a);\n  b = reify(b);\n  let gaina = pos.fmap((v) => ({ gain: fadeGain(v) }));\n  let gainb = pos.fmap((v) => ({ gain: fadeGain(1 - v) }));\n  return stack(a.mul(gaina), b.mul(gainb));\n};\n\n// the prototype version is actually flipped so left/right makes sense\nPattern.prototype.xfade = function (pos, b) {\n  return xfade(this, pos, b);\n};\n","/*\ncontrols.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/controls.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Pattern, register, sequence } from './pattern.mjs';\nimport { zipWith } from './util.mjs';\n\nconst controls = {};\nconst generic_params = [\n  /**\n   * Select a sound / sample by name. When using mininotation, you can also optionally supply 'n' and 'gain' parameters\n   * separated by ':'.\n   *\n   * @name s\n   * @param {string | Pattern} sound The sound / pattern of sounds to pick\n   * @synonyms sound\n   * @example\n   * s(\"bd hh\")\n   * @example\n   * s(\"bd:0 bd:1 bd:0:0.3 bd:1:1.4\")\n   *\n   */\n  [['s', 'n', 'gain'], 'sound'],\n  /**\n   * Define a custom webaudio node to use as a sound source.\n   *\n   * @name source\n   * @param {function} getSource\n   * @synonyms src\n   *\n   */\n  ['source', 'src'],\n  /**\n   * Selects the given index from the sample map.\n   * Numbers too high will wrap around.\n   * `n` can also be used to play midi numbers, but it is recommended to use `note` instead.\n   *\n   * @name n\n   * @param {number | Pattern} value sample index starting from 0\n   * @example\n   * s(\"bd sd,hh*3\").n(\"<0 1>\")\n   */\n  // also see https://github.com/tidalcycles/strudel/pull/63\n  ['n'],\n  /**\n   * Plays the given note name or midi number. A note name consists of\n   *\n   * - a letter (a-g or A-G)\n   * - optional accidentals (b or #)\n   * - optional octave number (0-9). Defaults to 3\n   *\n   * Examples of valid note names: `c`, `bb`, `Bb`, `f#`, `c3`, `A4`, `Eb2`, `c#5`\n   *\n   * You can also use midi numbers instead of note names, where 69 is mapped to A4 440Hz in 12EDO.\n   *\n   * @name note\n   * @example\n   * note(\"c a f e\")\n   * @example\n   * note(\"c4 a4 f4 e4\")\n   * @example\n   * note(\"60 69 65 64\")\n   */\n  [['note', 'n']],\n\n  /**\n   * A pattern of numbers that speed up (or slow down) samples while they play. Currently only supported by osc / superdirt.\n   *\n   * @name accelerate\n   * @param {number | Pattern} amount acceleration.\n   * @superdirtOnly\n   * @example\n   * s(\"sax\").accelerate(\"<0 1 2 4 8 16>\").slow(2).osc()\n   *\n   */\n  ['accelerate'],\n  /**\n   * Controls the gain by an exponential amount.\n   *\n   * @name gain\n   * @param {number | Pattern} amount gain.\n   * @example\n   * s(\"hh*8\").gain(\".4!2 1 .4!2 1 .4 1\")\n   *\n   */\n  ['gain'],\n  /**\n   * Gain applied after all effects have been processed.\n   *\n   * @name postgain\n   * @example\n   * s(\"bd sd,hh*4\")\n   * .compressor(\"-20:20:10:.002:.02\").postgain(1.5)\n   *\n   */\n  ['postgain'],\n  /**\n   * Like {@link gain}, but linear.\n   *\n   * @name amp\n   * @param {number | Pattern} amount gain.\n   * @superdirtOnly\n   * @example\n   * s(\"bd*8\").amp(\".1*2 .5 .1*2 .5 .1 .5\").osc()\n   *\n   */\n  ['amp'],\n  /**\n   * Amplitude envelope attack time: Specifies how long it takes for the sound to reach its peak value, relative to the onset.\n   *\n   * @name attack\n   * @param {number | Pattern} attack time in seconds.\n   * @synonyms att\n   * @example\n   * note(\"c3 e3\").attack(\"<0 .1 .5>\")\n   *\n   */\n  ['attack', 'att'],\n\n  /**\n   * Sets the Frequency Modulation Harmonicity Ratio.\n   * Controls the timbre of the sound.\n   * Whole numbers and simple ratios sound more natural,\n   * while decimal numbers and complex ratios sound metallic.\n   *\n   * @name fmh\n   * @param {number | Pattern} harmonicity\n   * @example\n   * note(\"c e g b\")\n   * .fm(4)\n   * .fmh(\"<1 2 1.5 1.61>\")\n   * .scope()\n   *\n   */\n  [['fmh', 'fmi'], 'fmh'],\n  /**\n   * Sets the Frequency Modulation of the synth.\n   * Controls the modulation index, which defines the brightness of the sound.\n   *\n   * @name fm\n   * @param {number | Pattern} brightness modulation index\n   * @synonyms fmi\n   * @example\n   * note(\"c e g b\")\n   * .fm(\"<0 1 2 8 32>\")\n   * .scope()\n   *\n   */\n  [['fmi', 'fmh'], 'fm'],\n  // fm envelope\n  /**\n   * Ramp type of fm envelope. Exp might be a bit broken..\n   *\n   * @name fmenv\n   * @param {number | Pattern} type lin | exp\n   * @example\n   * note(\"c e g b\")\n   * .fm(4)\n   * .fmdecay(.2)\n   * .fmsustain(0)\n   * .fmenv(\"<exp lin>\")\n   * .scope()\n   *\n   */\n  ['fmenv'],\n  /**\n   * Attack time for the FM envelope: time it takes to reach maximum modulation\n   *\n   * @name fmattack\n   * @param {number | Pattern} time attack time\n   * @example\n   * note(\"c e g b\")\n   * .fm(4)\n   * .fmattack(\"<0 .05 .1 .2>\")\n   * .scope()\n   *\n   */\n  ['fmattack'],\n  /**\n   * Decay time for the FM envelope: seconds until the sustain level is reached after the attack phase.\n   *\n   * @name fmdecay\n   * @param {number | Pattern} time decay time\n   * @example\n   * note(\"c e g b\")\n   * .fm(4)\n   * .fmdecay(\"<.01 .05 .1 .2>\")\n   * .fmsustain(.4)\n   * .scope()\n   *\n   */\n  ['fmdecay'],\n  /**\n   * Sustain level for the FM envelope: how much modulation is applied after the decay phase\n   *\n   * @name fmsustain\n   * @param {number | Pattern} level sustain level\n   * @example\n   * note(\"c e g b\")\n   * .fm(4)\n   * .fmdecay(.1)\n   * .fmsustain(\"<1 .75 .5 0>\")\n   * .scope()\n   *\n   */\n  ['fmsustain'],\n  // these are not really useful... skipping for now\n  ['fmrelease'],\n  ['fmvelocity'],\n\n  /**\n   * Select the sound bank to use. To be used together with `s`. The bank name (+ \"_\") will be prepended to the value of `s`.\n   *\n   * @name bank\n   * @param {string | Pattern} bank the name of the bank\n   * @example\n   * s(\"bd sd\").bank('RolandTR909') // = s(\"RolandTR909_bd RolandTR909_sd\")\n   *\n   */\n  ['bank'],\n\n  ['analyze'], // analyser node send amount 0 - 1 (used by scope)\n  ['fft'], // fftSize of analyser\n\n  /**\n   * Amplitude envelope decay time: the time it takes after the attack time to reach the sustain level.\n   * Note that the decay is only audible if the sustain value is lower than 1.\n   *\n   * @name decay\n   * @param {number | Pattern} time decay time in seconds\n   * @example\n   * note(\"c3 e3\").decay(\"<.1 .2 .3 .4>\").sustain(0)\n   *\n   */\n  ['decay'],\n  /**\n   * Amplitude envelope sustain level: The level which is reached after attack / decay, being sustained until the offset.\n   *\n   * @name sustain\n   * @param {number | Pattern} gain sustain level between 0 and 1\n   * @synonyms sus\n   * @example\n   * note(\"c3 e3\").decay(.2).sustain(\"<0 .1 .4 .6 1>\")\n   *\n   */\n  ['sustain', 'sus'],\n  /**\n   * Amplitude envelope release time: The time it takes after the offset to go from sustain level to zero.\n   *\n   * @name release\n   * @param {number | Pattern} time release time in seconds\n   * @synonyms rel\n   * @example\n   * note(\"c3 e3 g3 c4\").release(\"<0 .1 .4 .6 1>/2\")\n   *\n   */\n  ['release', 'rel'],\n  ['hold'],\n  // TODO: in tidal, it seems to be normalized\n  /**\n   * Sets the center frequency of the **b**and-**p**ass **f**ilter. When using mininotation, you\n   * can also optionally supply the 'bpq' parameter separated by ':'.\n   *\n   * @name bpf\n   * @param {number | Pattern} frequency center frequency\n   * @synonyms bandf, bp\n   * @example\n   * s(\"bd sd,hh*3\").bpf(\"<1000 2000 4000 8000>\")\n   *\n   */\n  [['bandf', 'bandq'], 'bpf', 'bp'],\n  // TODO: in tidal, it seems to be normalized\n  /**\n   * Sets the **b**and-**p**ass **q**-factor (resonance).\n   *\n   * @name bpq\n   * @param {number | Pattern} q q factor\n   * @synonyms bandq\n   * @example\n   * s(\"bd sd\").bpf(500).bpq(\"<0 1 2 3>\")\n   *\n   */\n  // currently an alias of 'bandq' https://github.com/tidalcycles/strudel/issues/496\n  // ['bpq'],\n  ['bandq', 'bpq'],\n  /**\n   * a pattern of numbers from 0 to 1. Skips the beginning of each sample, e.g. `0.25` to cut off the first quarter from each sample.\n   *\n   * @memberof Pattern\n   * @name begin\n   * @param {number | Pattern} amount between 0 and 1, where 1 is the length of the sample\n   * @example\n   * samples({ rave: 'rave/AREUREADY.wav' }, 'github:tidalcycles/Dirt-Samples/master/')\n   * s(\"rave\").begin(\"<0 .25 .5 .75>\")\n   *\n   */\n  ['begin'],\n  /**\n   * The same as .begin, but cuts off the end off each sample.\n   *\n   * @memberof Pattern\n   * @name end\n   * @param {number | Pattern} length 1 = whole sample, .5 = half sample, .25 = quarter sample etc..\n   * @example\n   * s(\"bd*2,oh*4\").end(\"<.1 .2 .5 1>\")\n   *\n   */\n  ['end'],\n  /**\n   * Loops the sample.\n   * Note that the tempo of the loop is not synced with the cycle tempo.\n   * To change the loop region, use loopBegin / loopEnd.\n   *\n   * @name loop\n   * @param {number | Pattern} on If 1, the sample is looped\n   * @example\n   * s(\"casio\").loop(1)\n   *\n   */\n  ['loop'],\n  /**\n   * Begin to loop at a specific point in the sample (inbetween `begin` and `end`).\n   * Note that the loop point must be inbetween `begin` and `end`, and before `loopEnd`!\n   * Note: Samples starting with wt_ will automatically loop! (wt = wavetable)\n   *\n   * @name loopBegin\n   * @param {number | Pattern} time between 0 and 1, where 1 is the length of the sample\n   * @synonyms loopb\n   * @example\n   * s(\"space\").loop(1)\n   * .loopBegin(\"<0 .125 .25>\").scope()\n   */\n  ['loopBegin', 'loopb'],\n  /**\n   *\n   * End the looping section at a specific point in the sample (inbetween `begin` and `end`).\n   * Note that the loop point must be inbetween `begin` and `end`, and after `loopBegin`!\n   *\n   * @name loopEnd\n   * @param {number | Pattern} time between 0 and 1, where 1 is the length of the sample\n   * @synonyms loope\n   * @example\n   * s(\"space\").loop(1)\n   * .loopEnd(\"<1 .75 .5 .25>\").scope()\n   */\n  ['loopEnd', 'loope'],\n  /**\n   * bit crusher effect.\n   *\n   * @name crush\n   * @param {number | Pattern} depth between 1 (for drastic reduction in bit-depth) to 16 (for barely no reduction).\n   * @example\n   * s(\"<bd sd>,hh*3\").fast(2).crush(\"<16 8 7 6 5 4 3 2>\")\n   *\n   */\n  // TODO: currently duplicated with \"native\" legato\n  // TODO: superdirt legato will do more: https://youtu.be/dQPmE1WaD1k?t=419\n  /**\n   * a pattern of numbers from 0 to 1. Skips the beginning of each sample, e.g. `0.25` to cut off the first quarter from each sample.\n   *\n   * @name legato\n   * @param {number | Pattern} duration between 0 and 1, where 1 is the length of the whole hap time\n   * @noAutocomplete\n   * @example\n   * \"c4 eb4 g4 bb4\".legato(\"<0.125 .25 .5 .75 1 2 4>\")\n   *\n   */\n  // ['legato'],\n  // ['clhatdecay'],\n  ['crush'],\n  /**\n   * fake-resampling for lowering the sample rate. Caution: This effect seems to only work in chromium based browsers\n   *\n   * @name coarse\n   * @param {number | Pattern} factor 1 for original 2 for half, 3 for a third and so on.\n   * @example\n   * s(\"bd sd,hh*4\").coarse(\"<1 4 8 16 32>\")\n   *\n   */\n  ['coarse'],\n\n  /**\n   * Allows you to set the output channels on the interface\n   *\n   * @name channels\n   * @synonyms ch\n   *\n   * @param {number | Pattern} channels pattern the output channels\n   * @example\n   * note(\"e a d b g\").channels(\"3:4\")\n   *\n   */\n  ['channels', 'ch'],\n\n  ['phaserrate', 'phasr'], // superdirt only\n\n  /**\n   * Phaser audio effect that approximates popular guitar pedals.\n   *\n   * @name phaser\n   * @synonyms ph\n   * @param {number | Pattern} speed speed of modulation\n   * @example\n   * n(run(8)).scale(\"D:pentatonic\").s(\"sawtooth\").release(0.5)\n   * .phaser(\"<1 2 4 8>\")\n   *\n   */\n  [['phaser', 'phaserdepth', 'phasercenter', 'phasersweep'], 'ph'],\n\n  /**\n   * The frequency sweep range of the lfo for the phaser effect. Defaults to 2000\n   *\n   * @name phasersweep\n   * @synonyms phs\n   * @param {number | Pattern} phasersweep most useful values are between 0 and 4000\n   * @example\n   * n(run(8)).scale(\"D:pentatonic\").s(\"sawtooth\").release(0.5)\n   * .phaser(2).phasersweep(\"<800 2000 4000>\")\n   *\n   */\n  ['phasersweep', 'phs'],\n\n  /**\n   *  The center frequency of the phaser in HZ. Defaults to 1000\n   *\n   * @name phasercenter\n   * @synonyms phc\n   * @param {number | Pattern} centerfrequency in HZ\n   * @example\n   * n(run(8)).scale(\"D:pentatonic\").s(\"sawtooth\").release(0.5)\n   * .phaser(2).phasercenter(\"<800 2000 4000>\")\n   *\n   */\n\n  ['phasercenter', 'phc'],\n\n  /**\n   * The amount the signal is affected by the phaser effect. Defaults to 0.75\n   *\n   * @name phaserdepth\n   * @synonyms phd\n   * @param {number | Pattern} depth number between 0 and 1\n   * @example\n   * n(run(8)).scale(\"D:pentatonic\").s(\"sawtooth\").release(0.5)\n   * .phaser(2).phaserdepth(\"<0 .5 .75 1>\")\n   *\n   */\n  ['phaserdepth', 'phd', 'phasdp'], // also a superdirt control\n\n  /**\n   * choose the channel the pattern is sent to in superdirt\n   *\n   * @name channel\n   * @param {number | Pattern} channel channel number\n   *\n   */\n  ['channel'],\n  /**\n   * In the style of classic drum-machines, `cut` will stop a playing sample as soon as another samples with in same cutgroup is to be played. An example would be an open hi-hat followed by a closed one, essentially muting the open.\n   *\n   * @name cut\n   * @param {number | Pattern} group cut group number\n   * @example\n   * s(\"rd*4\").cut(1)\n   *\n   */\n  ['cut'],\n  /**\n   * Applies the cutoff frequency of the **l**ow-**p**ass **f**ilter.\n   *\n   * When using mininotation, you can also optionally add the 'lpq' parameter, separated by ':'.\n   *\n   * @name lpf\n   * @param {number | Pattern} frequency audible between 0 and 20000\n   * @synonyms cutoff, ctf, lp\n   * @example\n   * s(\"bd sd,hh*3\").lpf(\"<4000 2000 1000 500 200 100>\")\n   * @example\n   * s(\"bd*8\").lpf(\"1000:0 1000:10 1000:20 1000:30\")\n   *\n   */\n  [['cutoff', 'resonance'], 'ctf', 'lpf', 'lp'],\n\n  /**\n   * Sets the lowpass filter envelope modulation depth.\n   * @name lpenv\n   * @param {number | Pattern} modulation depth of the lowpass filter envelope between 0 and _n_\n   * @synonyms lpe\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .lpf(500)\n   * .lpa(.5)\n   * .lpenv(\"<4 2 1 0 -1 -2 -4>/4\")\n   */\n  ['lpenv', 'lpe'],\n  /**\n   * Sets the highpass filter envelope modulation depth.\n   * @name hpenv\n   * @param {number | Pattern} modulation depth of the highpass filter envelope between 0 and _n_\n   * @synonyms hpe\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .hpf(500)\n   * .hpa(.5)\n   * .hpenv(\"<4 2 1 0 -1 -2 -4>/4\")\n   */\n  ['hpenv', 'hpe'],\n  /**\n   * Sets the bandpass filter envelope modulation depth.\n   * @name bpenv\n   * @param {number | Pattern} modulation depth of the bandpass filter envelope between 0 and _n_\n   * @synonyms bpe\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .bpf(500)\n   * .bpa(.5)\n   * .bpenv(\"<4 2 1 0 -1 -2 -4>/4\")\n   */\n  ['bpenv', 'bpe'],\n  /**\n   * Sets the attack duration for the lowpass filter envelope.\n   * @name lpattack\n   * @param {number | Pattern} attack time of the filter envelope\n   * @synonyms lpa\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .lpf(500)\n   * .lpa(\"<.5 .25 .1 .01>/4\")\n   * .lpenv(4)\n   */\n  ['lpattack', 'lpa'],\n  /**\n   * Sets the attack duration for the highpass filter envelope.\n   * @name hpattack\n   * @param {number | Pattern} attack time of the highpass filter envelope\n   * @synonyms hpa\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .hpf(500)\n   * .hpa(\"<.5 .25 .1 .01>/4\")\n   * .hpenv(4)\n   */\n  ['hpattack', 'hpa'],\n  /**\n   * Sets the attack duration for the bandpass filter envelope.\n   * @name bpattack\n   * @param {number | Pattern} attack time of the bandpass filter envelope\n   * @synonyms bpa\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .bpf(500)\n   * .bpa(\"<.5 .25 .1 .01>/4\")\n   * .bpenv(4)\n   */\n  ['bpattack', 'bpa'],\n  /**\n   * Sets the decay duration for the lowpass filter envelope.\n   * @name lpdecay\n   * @param {number | Pattern} decay time of the filter envelope\n   * @synonyms lpd\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .lpf(500)\n   * .lpd(\"<.5 .25 .1 0>/4\")\n   * .lps(0.2)\n   * .lpenv(4)\n   */\n  ['lpdecay', 'lpd'],\n  /**\n   * Sets the decay duration for the highpass filter envelope.\n   * @name hpdecay\n   * @param {number | Pattern} decay time of the highpass filter envelope\n   * @synonyms hpd\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .hpf(500)\n   * .hpd(\"<.5 .25 .1 0>/4\")\n   * .hps(0.2)\n   * .hpenv(4)\n   */\n  ['hpdecay', 'hpd'],\n  /**\n   * Sets the decay duration for the bandpass filter envelope.\n   * @name bpdecay\n   * @param {number | Pattern} decay time of the bandpass filter envelope\n   * @synonyms bpd\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .bpf(500)\n   * .bpd(\"<.5 .25 .1 0>/4\")\n   * .bps(0.2)\n   * .bpenv(4)\n   */\n  ['bpdecay', 'bpd'],\n  /**\n   * Sets the sustain amplitude for the lowpass filter envelope.\n   * @name lpsustain\n   * @param {number | Pattern} sustain amplitude of the lowpass filter envelope\n   * @synonyms lps\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .lpf(500)\n   * .lpd(.5)\n   * .lps(\"<0 .25 .5 1>/4\")\n   * .lpenv(4)\n   */\n  ['lpsustain', 'lps'],\n  /**\n   * Sets the sustain amplitude for the highpass filter envelope.\n   * @name hpsustain\n   * @param {number | Pattern} sustain amplitude of the highpass filter envelope\n   * @synonyms hps\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .hpf(500)\n   * .hpd(.5)\n   * .hps(\"<0 .25 .5 1>/4\")\n   * .hpenv(4)\n   */\n  ['hpsustain', 'hps'],\n  /**\n   * Sets the sustain amplitude for the bandpass filter envelope.\n   * @name bpsustain\n   * @param {number | Pattern} sustain amplitude of the bandpass filter envelope\n   * @synonyms bps\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .bpf(500)\n   * .bpd(.5)\n   * .bps(\"<0 .25 .5 1>/4\")\n   * .bpenv(4)\n   */\n  ['bpsustain', 'bps'],\n  /**\n   * Sets the release time for the lowpass filter envelope.\n   * @name lprelease\n   * @param {number | Pattern} release time of the filter envelope\n   * @synonyms lpr\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .clip(.5)\n   * .lpf(500)\n   * .lpenv(4)\n   * .lpr(\"<.5 .25 .1 0>/4\")\n   * .release(.5)\n   */\n  ['lprelease', 'lpr'],\n  /**\n   * Sets the release time for the highpass filter envelope.\n   * @name hprelease\n   * @param {number | Pattern} release time of the highpass filter envelope\n   * @synonyms hpr\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .clip(.5)\n   * .hpf(500)\n   * .hpenv(4)\n   * .hpr(\"<.5 .25 .1 0>/4\")\n   * .release(.5)\n   */\n  ['hprelease', 'hpr'],\n  /**\n   * Sets the release time for the bandpass filter envelope.\n   * @name bprelease\n   * @param {number | Pattern} release time of the bandpass filter envelope\n   * @synonyms bpr\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .clip(.5)\n   * .bpf(500)\n   * .bpenv(4)\n   * .bpr(\"<.5 .25 .1 0>/4\")\n   * .release(.5)\n   */\n  ['bprelease', 'bpr'],\n  /**\n   * Sets the filter type. The 24db filter is more aggressive. More types might be added in the future.\n   * @name ftype\n   * @param {number | Pattern} type 12db (default) or 24db\n   * @example\n   * note(\"<c2 e2 f2 g2>\")\n   * .sound('sawtooth')\n   * .lpf(500)\n   * .bpenv(4)\n   * .ftype(\"<12db 24db>\")\n   */\n  ['ftype'],\n  ['fanchor'],\n  /**\n   * Applies the cutoff frequency of the **h**igh-**p**ass **f**ilter.\n   *\n   * When using mininotation, you can also optionally add the 'hpq' parameter, separated by ':'.\n   *\n   * @name hpf\n   * @param {number | Pattern} frequency audible between 0 and 20000\n   * @synonyms hp, hcutoff\n   * @example\n   * s(\"bd sd,hh*4\").hpf(\"<4000 2000 1000 500 200 100>\")\n   * @example\n   * s(\"bd sd,hh*4\").hpf(\"<2000 2000:25>\")\n   *\n   */\n  // currently an alias of 'hcutoff' https://github.com/tidalcycles/strudel/issues/496\n  // ['hpf'],\n  /**\n   * Applies a vibrato to the frequency of the oscillator.\n   *\n   * @name vib\n   * @synonyms vibrato, v\n   * @param {number | Pattern} frequency of the vibrato in hertz\n   * @example\n   * note(\"a\")\n   * .vib(\"<.5 1 2 4 8 16>\")\n   * @example\n   * // change the modulation depth with \":\"\n   * note(\"a\")\n   * .vib(\"<.5 1 2 4 8 16>:12\")\n   */\n  [['vib', 'vibmod'], 'vibrato', 'v'],\n  /**\n   * Adds pink noise to the mix\n   *\n   * @name noise\n   * @param {number | Pattern} wet wet amount\n   * @example\n   * sound(\"<white pink brown>/2\")\n   */\n  ['noise'],\n  /**\n   * Sets the vibrato depth in semitones. Only has an effect if `vibrato` | `vib` | `v` is is also set\n   *\n   * @name vibmod\n   * @synonyms vmod\n   * @param {number | Pattern} depth of vibrato (in semitones)\n   * @example\n   * note(\"a\").vib(4)\n   * .vibmod(\"<.25 .5 1 2 12>\")\n   * @example\n   * // change the vibrato frequency with \":\"\n   * note(\"a\")\n   * .vibmod(\"<.25 .5 1 2 12>:8\")\n   */\n  [['vibmod', 'vib'], 'vmod'],\n  [['hcutoff', 'hresonance'], 'hpf', 'hp'],\n  /**\n   * Controls the **h**igh-**p**ass **q**-value.\n   *\n   * @name hpq\n   * @param {number | Pattern} q resonance factor between 0 and 50\n   * @synonyms hresonance\n   * @example\n   * s(\"bd sd,hh*4\").hpf(2000).hpq(\"<0 10 20 30>\")\n   *\n   */\n  ['hresonance', 'hpq'],\n  /**\n   * Controls the **l**ow-**p**ass **q**-value.\n   *\n   * @name lpq\n   * @param {number | Pattern} q resonance factor between 0 and 50\n   * @synonyms resonance\n   * @example\n   * s(\"bd sd,hh*4\").lpf(2000).lpq(\"<0 10 20 30>\")\n   *\n   */\n  // currently an alias of 'resonance' https://github.com/tidalcycles/strudel/issues/496\n  ['resonance', 'lpq'],\n  /**\n   * DJ filter, below 0.5 is low pass filter, above is high pass filter.\n   *\n   * @name djf\n   * @param {number | Pattern} cutoff below 0.5 is low pass filter, above is high pass filter\n   * @example\n   * n(\"0 3 7 [10,24]\").s('superzow').octave(3).djf(\"<.5 .25 .5 .75>\").osc()\n   *\n   */\n  ['djf'],\n  // ['cutoffegint'],\n  // TODO: does not seem to work\n  /**\n   * Sets the level of the delay signal.\n   *\n   * When using mininotation, you can also optionally add the 'delaytime' and 'delayfeedback' parameter,\n   * separated by ':'.\n   *\n   *\n   * @name delay\n   * @param {number | Pattern} level between 0 and 1\n   * @example\n   * s(\"bd\").delay(\"<0 .25 .5 1>\")\n   * @example\n   * s(\"bd bd\").delay(\"0.65:0.25:0.9 0.65:0.125:0.7\")\n   *\n   */\n  [['delay', 'delaytime', 'delayfeedback']],\n  /**\n   * Sets the level of the signal that is fed back into the delay.\n   * Caution: Values >= 1 will result in a signal that gets louder and louder! Don't do it\n   *\n   * @name delayfeedback\n   * @param {number | Pattern} feedback between 0 and 1\n   * @synonyms delayfb, dfb\n   * @example\n   * s(\"bd\").delay(.25).delayfeedback(\"<.25 .5 .75 1>\").slow(2)\n   *\n   */\n  ['delayfeedback', 'delayfb', 'dfb'],\n  /**\n   * Sets the time of the delay effect.\n   *\n   * @name delaytime\n   * @param {number | Pattern} seconds between 0 and Infinity\n   * @synonyms delayt, dt\n   * @example\n   * s(\"bd\").delay(.25).delaytime(\"<.125 .25 .5 1>\").slow(2)\n   *\n   */\n  ['delaytime', 'delayt', 'dt'],\n  /* // TODO: test\n   * Specifies whether delaytime is calculated relative to cps.\n   *\n   * @name lock\n   * @param {number | Pattern} enable When set to 1, delaytime is a direct multiple of a cycle.\n   * @example\n   * s(\"sd\").delay().lock(1).osc()\n   *\n   */\n  ['lock'],\n  /**\n   * Set detune of oscillators. Works only with some synths, see <a target=\"_blank\" href=\"https://tidalcycles.org/docs/patternlib/tutorials/synthesizers\">tidal doc</a>\n   *\n   * @name detune\n   * @param {number | Pattern} amount between 0 and 1\n   * @synonyms det\n   * @superdirtOnly\n   * @example\n   * n(\"0 3 7\").s('superzow').octave(3).detune(\"<0 .25 .5 1 2>\").osc()\n   *\n   */\n  ['detune', 'det'],\n  /**\n   * Set dryness of reverb. See {@link room} and {@link size} for more information about reverb.\n   *\n   * @name dry\n   * @param {number | Pattern} dry 0 = wet, 1 = dry\n   * @example\n   * n(\"[0,3,7](3,8)\").s(\"superpiano\").room(.7).dry(\"<0 .5 .75 1>\").osc()\n   * @superdirtOnly\n   *\n   */\n  ['dry'],\n  // TODO: does not seem to do anything\n  /*\n   * Used when using {@link begin}/{@link end} or {@link chop}/{@link striate} and friends, to change the fade out time of the 'grain' envelope.\n   *\n   * @name fadeTime\n   * @param {number | Pattern} time between 0 and 1\n   * @example\n   * s(\"oh*4\").end(.1).fadeTime(\"<0 .2 .4 .8>\").osc()\n   *\n   */\n  ['fadeTime', 'fadeOutTime'],\n  // TODO: see above\n  ['fadeInTime'],\n  /**\n   * Set frequency of sound.\n   *\n   * @name freq\n   * @param {number | Pattern} frequency in Hz. the audible range is between 20 and 20000 Hz\n   * @example\n   * freq(\"220 110 440 110\").s(\"superzow\").osc()\n   * @example\n   * freq(\"110\".mul.out(\".5 1.5 .6 [2 3]\")).s(\"superzow\").osc()\n   *\n   */\n  ['freq'],\n  // TODO: https://tidalcycles.org/docs/configuration/MIDIOSC/control-voltage/#gate\n  ['gate', 'gat'],\n  // ['hatgrain'],\n  // ['lagogo'],\n  // ['lclap'],\n  // ['lclaves'],\n  // ['lclhat'],\n  // ['lcrash'],\n  // TODO:\n  // https://tidalcycles.org/docs/reference/audio_effects/#leslie-1\n  // https://tidalcycles.org/docs/reference/audio_effects/#leslie\n  /**\n   * Emulation of a Leslie speaker: speakers rotating in a wooden amplified cabinet.\n   *\n   * @name leslie\n   * @param {number | Pattern} wet between 0 and 1\n   * @example\n   * n(\"0,4,7\").s(\"supersquare\").leslie(\"<0 .4 .6 1>\").osc()\n   * @superdirtOnly\n   *\n   */\n  ['leslie'],\n  /**\n   * Rate of modulation / rotation for leslie effect\n   *\n   * @name lrate\n   * @param {number | Pattern} rate 6.7 for fast, 0.7 for slow\n   * @example\n   * n(\"0,4,7\").s(\"supersquare\").leslie(1).lrate(\"<1 2 4 8>\").osc()\n   * @superdirtOnly\n   *\n   */\n  // TODO: the rate seems to \"lag\" (in the example, 1 will be fast)\n  ['lrate'],\n  /**\n   * Physical size of the cabinet in meters. Be careful, it might be slightly larger than your computer. Affects the Doppler amount (pitch warble)\n   *\n   * @name lsize\n   * @param {number | Pattern} meters somewhere between 0 and 1\n   * @example\n   * n(\"0,4,7\").s(\"supersquare\").leslie(1).lrate(2).lsize(\"<.1 .5 1>\").osc()\n   * @superdirtOnly\n   *\n   */\n  ['lsize'],\n  /**\n   * Sets the displayed text for an event on the pianoroll\n   *\n   * @name label\n   * @param {string} label text to display\n   */\n  ['activeLabel'],\n  [['label', 'activeLabel']],\n  // ['lfo'],\n  // ['lfocutoffint'],\n  // ['lfodelay'],\n  // ['lfoint'],\n  // ['lfopitchint'],\n  // ['lfoshape'],\n  // ['lfosync'],\n  // ['lhitom'],\n  // ['lkick'],\n  // ['llotom'],\n  // ['lophat'],\n  // ['lsnare'],\n  ['degree'], // TODO: what is this? not found in tidal doc\n  ['mtranspose'], // TODO: what is this? not found in tidal doc\n  ['ctranspose'], // TODO: what is this? not found in tidal doc\n  ['harmonic'], // TODO: what is this? not found in tidal doc\n  ['stepsPerOctave'], // TODO: what is this? not found in tidal doc\n  ['octaveR'], // TODO: what is this? not found in tidal doc\n  // TODO: why is this needed? what's the difference to late / early? Answer: it's in seconds, and delays the message at\n  // OSC time (so can't be negative, at least not beyond the latency value)\n  ['nudge'],\n  // TODO: the following doc is just a guess, it's not documented in tidal doc.\n  /**\n   * Sets the default octave of a synth.\n   *\n   * @name octave\n   * @param {number | Pattern} octave octave number\n   * @example\n   * n(\"0,4,7\").s('supersquare').octave(\"<3 4 5 6>\").osc()\n   * @superDirtOnly\n   */\n  ['octave'],\n\n  // ['ophatdecay'],\n  // TODO: example\n  /**\n   * An `orbit` is a global parameter context for patterns. Patterns with the same orbit will share the same global effects.\n   *\n   * @name orbit\n   * @param {number | Pattern} number\n   * @example\n   * stack(\n   *   s(\"hh*3\").delay(.5).delaytime(.25).orbit(1),\n   *   s(\"~ sd\").delay(.5).delaytime(.125).orbit(2)\n   * )\n   */\n  ['orbit'],\n  ['overgain'], // TODO: what is this? not found in tidal doc Answer: gain is limited to maximum of 2. This allows you to go over that\n  ['overshape'], // TODO: what is this? not found in tidal doc. Similar to above, but limited to 1\n  /**\n   * Sets position in stereo.\n   *\n   * @name pan\n   * @param {number | Pattern} pan between 0 and 1, from left to right (assuming stereo), once round a circle (assuming multichannel)\n   * @example\n   * s(\"[bd hh]*2\").pan(\"<.5 1 .5 0>\")\n   *\n   */\n  ['pan'],\n  // TODO: this has no effect (see example)\n  /*\n   * Controls how much multichannel output is fanned out\n   *\n   * @name panspan\n   * @param {number | Pattern} span between -inf and inf, negative is backwards ordering\n   * @example\n   * s(\"[bd hh]*2\").pan(\"<.5 1 .5 0>\").panspan(\"<0 .5 1>\").osc()\n   *\n   */\n  ['panspan'],\n  // TODO: this has no effect (see example)\n  /*\n   * Controls how much multichannel output is spread\n   *\n   * @name pansplay\n   * @param {number | Pattern} spread between 0 and 1\n   * @example\n   * s(\"[bd hh]*2\").pan(\"<.5 1 .5 0>\").pansplay(\"<0 .5 1>\").osc()\n   *\n   */\n  ['pansplay'],\n  ['panwidth'],\n  ['panorient'],\n  // ['pitch1'],\n  // ['pitch2'],\n  // ['pitch3'],\n  // ['portamento'],\n  // TODO: LFO rate see https://tidalcycles.org/docs/patternlib/tutorials/synthesizers/#supersquare\n  ['rate'],\n  // TODO: slide param for certain synths\n  ['slide'],\n  // TODO: detune? https://tidalcycles.org/docs/patternlib/tutorials/synthesizers/#supersquare\n  ['semitone'],\n  // TODO: dedup with synth param, see https://tidalcycles.org/docs/reference/synthesizers/#superpiano\n  // ['velocity'],\n  ['voice'], // TODO: synth param\n\n  // voicings // https://github.com/tidalcycles/strudel/issues/506\n  ['chord'], // chord to voice, like C Eb Fm7 G7. the symbols can be defined via addVoicings\n  ['dictionary', 'dict'], // which dictionary to use for the voicings\n  ['anchor'], // the top note to align the voicing to, defaults to c5\n  ['offset'], // how the voicing is offset from the anchored position\n  ['octaves'], // how many octaves are voicing steps spread apart, defaults to 1\n  [['mode', 'anchor']], // below = anchor note will be removed from the voicing, useful for melody harmonization\n\n  /**\n   * Sets the level of reverb.\n   *\n   * When using mininotation, you can also optionally add the 'size' parameter, separated by ':'.\n   *\n   * @name room\n   * @param {number | Pattern} level between 0 and 1\n   * @example\n   * s(\"bd sd\").room(\"<0 .2 .4 .6 .8 1>\")\n   * @example\n   * s(\"bd sd\").room(\"<0.9:1 0.9:4>\")\n   *\n   */\n  [['room', 'size']],\n  /**\n   * Reverb lowpass starting frequency (in hertz).\n   * When this property is changed, the reverb will be recaculated, so only change this sparsely..\n   *\n   * @name roomlp\n   * @synonyms rlp\n   * @param {number} frequency between 0 and 20000hz\n   * @example\n   * s(\"bd sd\").room(0.5).rlp(10000)\n   * @example\n   * s(\"bd sd\").room(0.5).rlp(5000)\n   */\n  ['roomlp', 'rlp'],\n  /**\n   * Reverb lowpass frequency at -60dB (in hertz).\n   * When this property is changed, the reverb will be recaculated, so only change this sparsely..\n   *\n   * @name roomdim\n   * @synonyms rdim\n   * @param {number} frequency between 0 and 20000hz\n   * @example\n   * s(\"bd sd\").room(0.5).rlp(10000).rdim(8000)\n   * @example\n   * s(\"bd sd\").room(0.5).rlp(5000).rdim(400)\n   *\n   */\n  ['roomdim', 'rdim'],\n  /**\n   * Reverb fade time (in seconds).\n   * When this property is changed, the reverb will be recaculated, so only change this sparsely..\n   *\n   * @name roomfade\n   * @synonyms rfade\n   * @param {number} seconds for the reverb to fade\n   * @example\n   * s(\"bd sd\").room(0.5).rlp(10000).rfade(0.5)\n   * @example\n   * s(\"bd sd\").room(0.5).rlp(5000).rfade(4)\n   *\n   */\n  ['roomfade', 'rfade'],\n  /**\n   * Sets the sample to use as an impulse response for the reverb.\n   * @name iresponse\n   * @param {string | Pattern} sample to use as an impulse response\n   * @synonyms ir\n   * @example\n   * s(\"bd sd\").room(.8).ir(\"<shaker_large:0 shaker_large:2>\")\n   *\n   */\n  [['ir', 'i'], 'iresponse'],\n  /**\n   * Sets the room size of the reverb, see {@link room}.\n   * When this property is changed, the reverb will be recaculated, so only change this sparsely..\n   *\n   * @name roomsize\n   * @param {number | Pattern} size between 0 and 10\n   * @synonyms rsize, sz, size\n   * @example\n   * s(\"bd sd\").room(.8).rsize(1)\n   * @example\n   * s(\"bd sd\").room(.8).rsize(4)\n   *\n   */\n  // TODO: find out why :\n  // s(\"bd sd\").room(.8).roomsize(\"<0 .2 .4 .6 .8 [1,0]>\").osc()\n  // .. does not work. Is it because room is only one effect?\n  ['roomsize', 'size', 'sz', 'rsize'],\n  // ['sagogo'],\n  // ['sclap'],\n  // ['sclaves'],\n  // ['scrash'],\n  /**\n   * Wave shaping distortion. CAUTION: it might get loud\n   *\n   * @name shape\n   * @param {number | Pattern} distortion between 0 and 1\n   * @example\n   * s(\"bd sd,hh*4\").shape(\"<0 .2 .4 .6 .8>\")\n   *\n   */\n  ['shape'],\n  /**\n   * Dynamics Compressor. The params are `compressor(\"threshold:ratio:knee:attack:release\")`\n   * More info [here](https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode?retiredLocale=de#instance_properties)\n   *\n   * @name compressor\n   * @example\n   * s(\"bd sd,hh*4\")\n   * .compressor(\"-20:20:10:.002:.02\")\n   *\n   */\n  [['compressor', 'compressorRatio', 'compressorKnee', 'compressorAttack', 'compressorRelease']],\n  ['compressorKnee'],\n  ['compressorRatio'],\n  ['compressorAttack'],\n  ['compressorRelease'],\n  /**\n   * Changes the speed of sample playback, i.e. a cheap way of changing pitch.\n   *\n   * @name speed\n   * @param {number | Pattern} speed -inf to inf, negative numbers play the sample backwards.\n   * @example\n   * s(\"bd\").speed(\"<1 2 4 1 -2 -4>\")\n   * @example\n   * speed(\"1 1.5*2 [2 1.1]\").s(\"piano\").clip(1)\n   *\n   */\n  ['speed'],\n  /**\n   * Used in conjunction with {@link speed}, accepts values of \"r\" (rate, default behavior), \"c\" (cycles), or \"s\" (seconds). Using `unit \"c\"` means `speed` will be interpreted in units of cycles, e.g. `speed \"1\"` means samples will be stretched to fill a cycle. Using `unit \"s\"` means the playback speed will be adjusted so that the duration is the number of seconds specified by `speed`.\n   *\n   * @name unit\n   * @param {number | string | Pattern} unit see description above\n   * @example\n   * speed(\"1 2 .5 3\").s(\"bd\").unit(\"c\").osc()\n   * @superdirtOnly\n   *\n   */\n  ['unit'],\n  /**\n   * Made by Calum Gunn. Reminiscent of some weird mixture of filter, ring-modulator and pitch-shifter. The SuperCollider manual defines Squiz as:\n   *\n   * \"A simplistic pitch-raising algorithm. It's not meant to sound natural; its sound is reminiscent of some weird mixture of filter, ring-modulator and pitch-shifter, depending on the input. The algorithm works by cutting the signal into fragments (delimited by upwards-going zero-crossings) and squeezing those fragments in the time domain (i.e. simply playing them back faster than they came in), leaving silences inbetween. All the parameters apart from memlen can be modulated.\"\n   *\n   * @name squiz\n   * @param {number | Pattern} squiz Try passing multiples of 2 to it - 2, 4, 8 etc.\n   * @example\n   * squiz(\"2 4/2 6 [8 16]\").s(\"bd\").osc()\n   * @superdirtOnly\n   *\n   */\n  ['squiz'],\n  // ['stutterdepth'], // TODO: what is this? not found in tidal doc\n  // ['stuttertime'], // TODO: what is this? not found in tidal doc\n  // ['timescale'], // TODO: what is this? not found in tidal doc\n  // ['timescalewin'], // TODO: what is this? not found in tidal doc\n  // ['tomdecay'],\n  // ['vcfegint'],\n  // ['vcoegint'],\n  // TODO: Use a rest (~) to override the effect <- vowel\n  /**\n   *\n   * Formant filter to make things sound like vowels.\n   *\n   * @name vowel\n   * @param {string | Pattern} vowel You can use a e i o u.\n   * @example\n   * note(\"c2 <eb2 <g2 g1>>\").s('sawtooth')\n   * .vowel(\"<a e i <o u>>\")\n   *\n   */\n  ['vowel'],\n  /* // TODO: find out how it works\n   * Made by Calum Gunn. Divides an audio stream into tiny segments, using the signal's zero-crossings as segment boundaries, and discards a fraction of them. Takes a number between 1 and 100, denoted the percentage of segments to drop. The SuperCollider manual describes the Waveloss effect this way:\n   *\n   * Divide an audio stream into tiny segments, using the signal's zero-crossings as segment boundaries, and discard a fraction of them (i.e. replace them with silence of the same length). The technique was described by Trevor Wishart in a lecture. Parameters: the filter drops drop out of out of chunks. mode can be 1 to drop chunks in a simple deterministic fashion (e.g. always dropping the first 30 out of a set of 40 segments), or 2 to drop chunks randomly but in an appropriate proportion.)\n   *\n   * mode: ?\n   * waveloss: ?\n   *\n   * @name waveloss\n   */\n  ['waveloss'],\n  /*\n   * Noise crackle density\n   *\n   * @name density\n   * @param {number | Pattern} density between 0 and x\n   * @example\n   * s(\"crackle*4\").density(\"<0.01 0.04 0.2 0.5>\".slow(4))\n   *\n   */\n  ['density'],\n  // TODO: midi effects?\n  ['dur'],\n  // ['modwheel'],\n  ['expression'],\n  ['sustainpedal'],\n  /* // TODO: doesn't seem to do anything\n   *\n   * Tremolo Audio DSP effect\n   *\n   * @name tremolodepth\n   * @param {number | Pattern} depth between 0 and 1\n   * @example\n   * n(\"0,4,7\").tremolodepth(\"<0 .3 .6 .9>\").osc()\n   *\n   */\n  ['tremolodepth', 'tremdp'],\n  ['tremolorate', 'tremr'],\n\n  ['fshift'],\n  ['fshiftnote'],\n  ['fshiftphase'],\n\n  ['triode'],\n  ['krush'],\n  ['kcutoff'],\n  ['octer'],\n  ['octersub'],\n  ['octersubsub'],\n  ['ring'],\n  ['ringf'],\n  ['ringdf'],\n  ['distort'],\n  ['freeze'],\n  ['xsdelay'],\n  ['tsdelay'],\n  ['real'],\n  ['imag'],\n  ['enhance'],\n  ['partials'],\n  ['comb'],\n  ['smear'],\n  ['scram'],\n  ['binshift'],\n  ['hbrick'],\n  ['lbrick'],\n  ['midichan'],\n  ['control'],\n  ['ccn'],\n  ['ccv'],\n  ['polyTouch'],\n  ['midibend'],\n  ['miditouch'],\n  ['ctlNum'],\n  ['frameRate'],\n  ['frames'],\n  ['hours'],\n  ['midicmd'],\n  ['minutes'],\n  ['progNum'],\n  ['seconds'],\n  ['songPtr'],\n  ['uid'],\n  ['val'],\n  ['cps'],\n  /**\n   * Multiplies the duration with the given number. Also cuts samples off at the end if they exceed the duration.\n   * In tidal, this would be done with legato, [which has a complicated history in strudel](https://github.com/tidalcycles/strudel/issues/111).\n   * For now, if you're coming from tidal, just think clip = legato.\n   *\n   * @name clip\n   * @param {number | Pattern} factor >= 0\n   * @example\n   * note(\"c a f e\").s(\"piano\").clip(\"<.5 1 2>\")\n   *\n   */\n  ['clip'],\n\n  // ZZFX\n  ['zrand'],\n  ['curve'],\n  ['slide'], // superdirt duplicate\n  ['deltaSlide'],\n  ['pitchJump'],\n  ['pitchJumpTime'],\n  ['lfo', 'repeatTime'],\n  ['znoise'], // noise on the frequency or as bubo calls it \"frequency fog\" :)\n  ['zmod'],\n  ['zcrush'], // like crush but scaled differently\n  ['zdelay'],\n  ['tremolo'],\n  ['zzfx'],\n];\n// TODO: slice / splice https://www.youtube.com/watch?v=hKhPdO0RKDQ&list=PL2lW1zNIIwj3bDkh-Y3LUGDuRcoUigoDs&index=13\n\ncontrols.createParam = function (names) {\n  const name = Array.isArray(names) ? names[0] : names;\n\n  var withVal;\n  if (Array.isArray(names)) {\n    withVal = (xs) => {\n      if (Array.isArray(xs)) {\n        const result = {};\n        xs.forEach((x, i) => {\n          if (i < names.length) {\n            result[names[i]] = x;\n          }\n        });\n        return result;\n      } else {\n        return { [name]: xs };\n      }\n    };\n  } else {\n    withVal = (x) => ({ [name]: x });\n  }\n\n  const func = (...pats) => sequence(...pats).withValue(withVal);\n\n  const setter = function (...pats) {\n    if (!pats.length) {\n      return this.fmap(withVal);\n    }\n    return this.set(func(...pats));\n  };\n  Pattern.prototype[name] = setter;\n  return func;\n};\n\ngeneric_params.forEach(([names, ...aliases]) => {\n  const name = Array.isArray(names) ? names[0] : names;\n  controls[name] = controls.createParam(names);\n\n  aliases.forEach((alias) => {\n    controls[alias] = controls[name];\n    Pattern.prototype[alias] = Pattern.prototype[name];\n  });\n});\n\ncontrols.createParams = (...names) =>\n  names.reduce((acc, name) => Object.assign(acc, { [name]: controls.createParam(name) }), {});\n\n/**\n * ADSR envelope: Combination of Attack, Decay, Sustain, and Release.\n *\n * @name adsr\n * @param {number | Pattern} time attack time in seconds\n * @param {number | Pattern} time decay time in seconds\n * @param {number | Pattern} gain sustain level (0 to 1)\n * @param {number | Pattern} time release time in seconds\n * @example\n * note(\"<c3 bb2 f3 eb3>\").sound(\"sawtooth\").lpf(600).adsr(\".1:.1:.5:.2\")\n */\ncontrols.adsr = register('adsr', (adsr, pat) => {\n  adsr = !Array.isArray(adsr) ? [adsr] : adsr;\n  const [attack, decay, sustain, release] = adsr;\n  return pat.set({ attack, decay, sustain, release });\n});\ncontrols.ds = register('ds', (ds, pat) => {\n  ds = !Array.isArray(ds) ? [ds] : ds;\n  const [decay, sustain] = ds;\n  return pat.set({ decay, sustain });\n});\n\nexport default controls;\n","/*\neuclid.mjs - Bjorklund/Euclidean/Diaspora rhythms\nCopyright (C) 2023 Rohan Drape and strudel contributors\n\nSee <https://github.com/tidalcycles/strudel/blob/main/packages/core/euclid.mjs> for authors of this file.\n\nThe Bjorklund algorithm implementation is ported from the Haskell Music Theory Haskell module by Rohan Drape -\nhttps://rohandrape.net/?t=hmt\n\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Pattern, timeCat, register, silence } from './pattern.mjs';\nimport { rotate, flatten, splitAt, zipWith } from './util.mjs';\nimport Fraction from './fraction.mjs';\n\nconst left = function (n, x) {\n  const [ons, offs] = n;\n  const [xs, ys] = x;\n  const [_xs, __xs] = splitAt(offs, xs);\n  return [\n    [offs, ons - offs],\n    [zipWith((a, b) => a.concat(b), _xs, ys), __xs],\n  ];\n};\n\nconst right = function (n, x) {\n  const [ons, offs] = n;\n  const [xs, ys] = x;\n  const [_ys, __ys] = splitAt(ons, ys);\n  const result = [\n    [ons, offs - ons],\n    [zipWith((a, b) => a.concat(b), xs, _ys), __ys],\n  ];\n  return result;\n};\n\nconst _bjork = function (n, x) {\n  const [ons, offs] = n;\n  return Math.min(ons, offs) <= 1 ? [n, x] : _bjork(...(ons > offs ? left(n, x) : right(n, x)));\n};\n\nexport const bjork = function (ons, steps) {\n  const offs = steps - ons;\n  const x = Array(ons).fill([1]);\n  const y = Array(offs).fill([0]);\n  const result = _bjork([ons, offs], [x, y]);\n  return flatten(result[1][0]).concat(flatten(result[1][1]));\n};\n\n/**\n * Changes the structure of the pattern to form an euclidean rhythm.\n * Euclidian rhythms are rhythms obtained using the greatest common\n * divisor of two numbers.  They were described in 2004 by Godfried\n * Toussaint, a canadian computer scientist.  Euclidian rhythms are\n * really useful for computer/algorithmic music because they can\n * describe a large number of rhythms with a couple of numbers.\n *\n * @memberof Pattern\n * @name euclid\n * @param {number} pulses the number of onsets / beats\n * @param {number} steps the number of steps to fill\n * @returns Pattern\n * @example\n * // The Cuban tresillo pattern.\n * note(\"c3\").euclid(3,8)\n */\n\n/**\n * Like `euclid`, but has an additional parameter for 'rotating' the resulting sequence.\n * @memberof Pattern\n * @name euclidRot\n * @param {number} pulses the number of onsets / beats\n * @param {number} steps the number of steps to fill\n * @param {number} rotation offset in steps\n * @returns Pattern\n * @example\n * // A Samba rhythm necklace from Brazil\n * note(\"c3\").euclidRot(3,16,14)\n */\n\n/**\n * @example // A thirteenth century Persian rhythm called Khafif-e-ramal.\n * note(\"c3\").euclid(2,5)\n * @example // The archetypal pattern of the Cumbia from Colombia, as well as a Calypso rhythm from Trinidad.\n * note(\"c3\").euclid(3,4)\n * @example // Another thirteenth century Persian rhythm by the name of Khafif-e-ramal, as well as a Rumanian folk-dance rhythm.\n * note(\"c3\").euclidRot(3,5,2)\n * @example // A Ruchenitza rhythm used in a Bulgarian folk-dance.\n * note(\"c3\").euclid(3,7)\n * @example // The Cuban tresillo pattern.\n * note(\"c3\").euclid(3,8)\n * @example // Another Ruchenitza Bulgarian folk-dance rhythm.\n * note(\"c3\").euclid(4,7)\n * @example // The Aksak rhythm of Turkey.\n * note(\"c3\").euclid(4,9)\n * @example // The metric pattern used by Frank Zappa in his piece titled Outside Now.\n * note(\"c3\").euclid(4,11)\n * @example // Yields the York-Samai pattern, a popular Arab rhythm.\n * note(\"c3\").euclid(5,6)\n * @example // The Nawakhat pattern, another popular Arab rhythm.\n * note(\"c3\").euclid(5,7)\n * @example // The Cuban cinquillo pattern.\n * note(\"c3\").euclid(5,8)\n * @example // A popular Arab rhythm called Agsag-Samai.\n * note(\"c3\").euclid(5,9)\n * @example // The metric pattern used by Moussorgsky in Pictures at an Exhibition.\n * note(\"c3\").euclid(5,11)\n * @example // The Venda clapping pattern of a South African children’s song.\n * note(\"c3\").euclid(5,12)\n * @example // The Bossa-Nova rhythm necklace of Brazil.\n * note(\"c3\").euclid(5,16)\n * @example // A typical rhythm played on the Bendir (frame drum).\n * note(\"c3\").euclid(7,8)\n * @example // A common West African bell pattern.\n * note(\"c3\").euclid(7,12)\n * @example // A Samba rhythm necklace from Brazil.\n * note(\"c3\").euclidRot(7,16,14)\n * @example // A rhythm necklace used in the Central African Republic.\n * note(\"c3\").euclid(9,16)\n * @example // A rhythm necklace of the Aka Pygmies of Central Africa.\n * note(\"c3\").euclidRot(11,24,14)\n * @example // Another rhythm necklace of the Aka Pygmies of the upper Sangha.\n * note(\"c3\").euclidRot(13,24,5)\n */\n\nconst _euclidRot = function (pulses, steps, rotation) {\n  const b = bjork(pulses, steps);\n  if (rotation) {\n    return rotate(b, -rotation);\n  }\n  return b;\n};\n\nexport const euclid = register('euclid', function (pulses, steps, pat) {\n  return pat.struct(_euclidRot(pulses, steps, 0));\n});\n\nexport const { euclidrot, euclidRot } = register(['euclidrot', 'euclidRot'], function (pulses, steps, rotation, pat) {\n  return pat.struct(_euclidRot(pulses, steps, rotation));\n});\n\n/**\n * Similar to `euclid`, but each pulse is held until the next pulse,\n * so there will be no gaps.\n * @name euclidLegato\n * @memberof Pattern\n * @param {number} pulses the number of onsets / beats\n * @param {number} steps the number of steps to fill\n * @example\n * n(\"g2\").decay(.1).sustain(.3).euclidLegato(3,8)\n */\n\nconst _euclidLegato = function (pulses, steps, rotation, pat) {\n  if (pulses < 1) {\n    return silence;\n  }\n  const bin_pat = _euclidRot(pulses, steps, rotation);\n  const gapless = bin_pat\n    .join('')\n    .split('1')\n    .slice(1)\n    .map((s) => [s.length + 1, true]);\n  return pat.struct(timeCat(...gapless));\n};\n\nexport const euclidLegato = register(['euclidLegato'], function (pulses, steps, pat) {\n  return _euclidLegato(pulses, steps, 0, pat);\n});\n\n/**\n * Similar to `euclid`, but each pulse is held until the next pulse,\n * so there will be no gaps, and has an additional parameter for 'rotating'\n * the resulting sequence\n * @name euclidLegatoRot\n * @memberof Pattern\n * @param {number} pulses the number of onsets / beats\n * @param {number} steps the number of steps to fill\n * @param {number} rotation offset in steps\n * @example\n * note(\"c3\").euclidLegatoRot(3,5,2)\n */\nexport const euclidLegatoRot = register(['euclidLegatoRot'], function (pulses, steps, rotation, pat) {\n  return _euclidLegato(pulses, steps, rotation, pat);\n});\n","/*\nsignal.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/signal.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Hap } from './hap.mjs';\nimport { Pattern, fastcat, reify, silence, stack, register } from './pattern.mjs';\nimport Fraction from './fraction.mjs';\nimport { id, _mod, clamp } from './util.mjs';\n\nexport function steady(value) {\n  // A continuous value\n  return new Pattern((state) => [new Hap(undefined, state.span, value)]);\n}\n\nexport const signal = (func) => {\n  const query = (state) => [new Hap(undefined, state.span, func(state.span.midpoint()))];\n  return new Pattern(query);\n};\n\nexport const isaw = signal((t) => 1 - (t % 1));\nexport const isaw2 = isaw.toBipolar();\n\n/**\n *  A sawtooth signal between 0 and 1.\n *\n * @return {Pattern}\n * @example\n * \"c3 [eb3,g3] g2 [g3,bb3]\".note().clip(saw.slow(4))\n * @example\n * saw.range(0,8).segment(8).scale('C major').slow(4).note()\n *\n */\nexport const saw = signal((t) => t % 1);\nexport const saw2 = saw.toBipolar();\n\nexport const sine2 = signal((t) => Math.sin(Math.PI * 2 * t));\n\n/**\n *  A sine signal between 0 and 1.\n *\n * @return {Pattern}\n * @example\n * sine.segment(16).range(0,15).slow(2).scale('C minor').note()\n *\n */\nexport const sine = sine2.fromBipolar();\n\n/**\n *  A cosine signal between 0 and 1.\n *\n * @return {Pattern}\n * @example\n * stack(sine,cosine).segment(16).range(0,15).slow(2).scale('C minor').note()\n *\n */\nexport const cosine = sine._early(Fraction(1).div(4));\nexport const cosine2 = sine2._early(Fraction(1).div(4));\n\n/**\n *  A square signal between 0 and 1.\n *\n * @return {Pattern}\n * @example\n * square.segment(2).range(0,7).scale('C minor').note()\n *\n */\nexport const square = signal((t) => Math.floor((t * 2) % 2));\nexport const square2 = square.toBipolar();\n\n/**\n *  A triangle signal between 0 and 1.\n *\n * @return {Pattern}\n * @example\n * tri.segment(8).range(0,7).scale('C minor').note()\n *\n */\nexport const tri = fastcat(isaw, saw);\nexport const tri2 = fastcat(isaw2, saw2);\n\nexport const time = signal(id);\n\n// random signals\n\nconst xorwise = (x) => {\n  const a = (x << 13) ^ x;\n  const b = (a >> 17) ^ a;\n  return (b << 5) ^ b;\n};\n\n// stretch 300 cycles over the range of [0,2**29 == 536870912) then apply the xorshift algorithm\nconst _frac = (x) => x - Math.trunc(x);\n\nconst timeToIntSeed = (x) => xorwise(Math.trunc(_frac(x / 300) * 536870912));\n\nconst intSeedToRand = (x) => (x % 536870912) / 536870912;\n\nconst timeToRand = (x) => Math.abs(intSeedToRand(timeToIntSeed(x)));\n\nconst timeToRandsPrime = (seed, n) => {\n  const result = [];\n  for (let i = 0; i < n; ++n) {\n    result.push(intSeedToRand(seed));\n    seed = xorwise(seed);\n  }\n  return result;\n};\n\nconst timeToRands = (t, n) => timeToRandsPrime(timeToIntSeed(t), n);\n\n/**\n *\n */\n\n/**\n * A discrete pattern of numbers from 0 to n-1\n * @example\n * run(4).scale('C4 major').note()\n * // \"0 1 2 3\".scale('C4 major').note()\n */\nexport const run = (n) => saw.range(0, n).floor().segment(n);\n\n/**\n * A continuous pattern of random numbers, between 0 and 1.\n *\n * @name rand\n * @example\n * // randomly change the cutoff\n * s(\"bd sd,hh*4\").cutoff(rand.range(500,2000))\n *\n */\nexport const rand = signal(timeToRand);\n/**\n * A continuous pattern of random numbers, between -1 and 1\n */\nexport const rand2 = rand.toBipolar();\n\nexport const _brandBy = (p) => rand.fmap((x) => x < p);\nexport const brandBy = (pPat) => reify(pPat).fmap(_brandBy).innerJoin();\nexport const brand = _brandBy(0.5);\n\nexport const _irand = (i) => rand.fmap((x) => Math.trunc(x * i));\n\n/**\n * A continuous pattern of random integers, between 0 and n-1.\n *\n * @name irand\n * @param {number} n max value (exclusive)\n * @example\n * // randomly select scale notes from 0 - 7 (= C to C)\n * irand(8).struct(\"x(3,8)\").scale('C minor').note()\n *\n */\nexport const irand = (ipat) => reify(ipat).fmap(_irand).innerJoin();\n\n/**\n * pick from the list of values (or patterns of values) via the index using the given\n * pattern of integers\n * @param {Pattern} pat\n * @param {*} xs\n * @returns {Pattern}\n * @example\n * note(pick(\"<0 1 [2!2] 3>\", [\"g a\", \"e f\", \"f g f g\" , \"g a c d\"]))\n */\n\nexport const pick = (pat, xs) => {\n  xs = xs.map(reify);\n  if (xs.length == 0) {\n    return silence;\n  }\n  return pat\n    .fmap((i) => {\n      const key = clamp(Math.round(i), 0, xs.length - 1);\n      return xs[key];\n    })\n    .innerJoin();\n};\n\n/**\n * pick from the list of values (or patterns of values) via the index using the given\n * pattern of integers. The selected pattern will be compressed to fit the duration of the selecting event\n * @param {Pattern} pat\n * @param {*} xs\n * @returns {Pattern}\n * @example\n * note(squeeze(\"<0@2 [1!2] 2>\", [\"g a\", \"f g f g\" , \"g a c d\"]))\n */\n\nexport const squeeze = (pat, xs) => {\n  xs = xs.map(reify);\n  if (xs.length == 0) {\n    return silence;\n  }\n  return pat\n    .fmap((i) => {\n      const key = _mod(Math.round(i), xs.length);\n      return xs[key];\n    })\n    .squeezeJoin();\n};\n\nexport const __chooseWith = (pat, xs) => {\n  xs = xs.map(reify);\n  if (xs.length == 0) {\n    return silence;\n  }\n\n  return pat.range(0, xs.length).fmap((i) => {\n    const key = Math.min(Math.max(Math.floor(i), 0), xs.length - 1);\n    return xs[key];\n  });\n};\n/**\n * Choose from the list of values (or patterns of values) using the given\n * pattern of numbers, which should be in the range of 0..1\n * @param {Pattern} pat\n * @param {*} xs\n * @returns {Pattern}\n * @example\n * note(\"c2 g2!2 d2 f1\").s(chooseWith(sine.fast(2), [\"sawtooth\", \"triangle\", \"bd:6\"]))\n */\nexport const chooseWith = (pat, xs) => {\n  return __chooseWith(pat, xs).outerJoin();\n};\n\n/**\n * As with {chooseWith}, but the structure comes from the chosen values, rather\n * than the pattern you're using to choose with.\n * @param {Pattern} pat\n * @param {*} xs\n * @returns {Pattern}\n */\nexport const chooseInWith = (pat, xs) => {\n  return __chooseWith(pat, xs).innerJoin();\n};\n\n/**\n * Chooses randomly from the given list of elements.\n * @param  {...any} xs values / patterns to choose from.\n * @returns {Pattern} - a continuous pattern.\n */\nexport const choose = (...xs) => chooseWith(rand, xs);\n\n/**\n * Chooses from the given list of values (or patterns of values), according\n * to the pattern that the method is called on. The pattern should be in\n * the range 0 .. 1.\n * @param  {...any} xs\n * @returns {Pattern}\n */\nPattern.prototype.choose = function (...xs) {\n  return chooseWith(this, xs);\n};\n\n/**\n * As with choose, but the pattern that this method is called on should be\n * in the range -1 .. 1\n * @param  {...any} xs\n * @returns {Pattern}\n */\nPattern.prototype.choose2 = function (...xs) {\n  return chooseWith(this.fromBipolar(), xs);\n};\n\n/**\n * Picks one of the elements at random each cycle.\n * @returns {Pattern}\n * @example\n * chooseCycles(\"bd\", \"hh\", \"sd\").s().fast(4)\n * @example\n * \"bd | hh | sd\".s().fast(4)\n */\nexport const chooseCycles = (...xs) => chooseInWith(rand.segment(1), xs);\n\nexport const randcat = chooseCycles;\n\nconst _wchooseWith = function (pat, ...pairs) {\n  const values = pairs.map((pair) => reify(pair[0]));\n  const weights = [];\n  let accum = 0;\n  for (const pair of pairs) {\n    accum += pair[1];\n    weights.push(accum);\n  }\n  const total = accum;\n  const match = function (r) {\n    const find = r * total;\n    return values[weights.findIndex((x) => x > find, weights)];\n  };\n  return pat.fmap(match);\n};\n\nconst wchooseWith = (...args) => _wchooseWith(...args).outerJoin();\n\nexport const wchoose = (...pairs) => wchooseWith(rand, ...pairs);\n\nexport const wchooseCycles = (...pairs) => _wchooseWith(rand, ...pairs).innerJoin();\n\n// this function expects pat to be a pattern of floats...\nexport const perlinWith = (pat) => {\n  const pata = pat.fmap(Math.floor);\n  const patb = pat.fmap((t) => Math.floor(t) + 1);\n  const smootherStep = (x) => 6.0 * x ** 5 - 15.0 * x ** 4 + 10.0 * x ** 3;\n  const interp = (x) => (a) => (b) => a + smootherStep(x) * (b - a);\n  return pat.sub(pata).fmap(interp).appBoth(pata.fmap(timeToRand)).appBoth(patb.fmap(timeToRand));\n};\n\n/**\n * Generates a continuous pattern of [perlin noise](https://en.wikipedia.org/wiki/Perlin_noise), in the range 0..1.\n *\n * @name perlin\n * @example\n * // randomly change the cutoff\n * s(\"bd sd,hh*4\").cutoff(perlin.range(500,2000))\n *\n */\nexport const perlin = perlinWith(time.fmap((v) => Number(v)));\n\nexport const degradeByWith = register('degradeByWith', (withPat, x, pat) =>\n  pat.fmap((a) => (_) => a).appLeft(withPat.filterValues((v) => v > x)),\n);\n\n/**\n * Randomly removes events from the pattern by a given amount.\n * 0 = 0% chance of removal\n * 1 = 100% chance of removal\n *\n * @name degradeBy\n * @memberof Pattern\n * @param {number} amount - a number between 0 and 1\n * @returns Pattern\n * @example\n * s(\"hh*8\").degradeBy(0.2)\n * @example\n * s(\"[hh?0.2]*8\")\n */\nexport const degradeBy = register('degradeBy', function (x, pat) {\n  return pat._degradeByWith(rand, x);\n});\n\n/**\n *\n * Randomly removes 50% of events from the pattern. Shorthand for `.degradeBy(0.5)`\n *\n * @name degrade\n * @memberof Pattern\n * @returns Pattern\n * @example\n * s(\"hh*8\").degrade()\n * @example\n * s(\"[hh?]*8\")\n */\nexport const degrade = register('degrade', (pat) => pat._degradeBy(0.5));\n\n/**\n * Inverse of {@link Pattern#degradeBy}: Randomly removes events from the pattern by a given amount.\n * 0 = 100% chance of removal\n * 1 = 0% chance of removal\n * Events that would be removed by degradeBy are let through by undegradeBy and vice versa (see second example).\n *\n * @name undegradeBy\n * @memberof Pattern\n * @param {number} amount - a number between 0 and 1\n * @returns Pattern\n * @example\n * s(\"hh*8\").undegradeBy(0.2)\n */\nexport const undegradeBy = register('undegradeBy', function (x, pat) {\n  return pat._degradeByWith(\n    rand.fmap((r) => 1 - r),\n    x,\n  );\n});\n\nexport const undegrade = register('undegrade', (pat) => pat._undegradeBy(0.5));\n\n/**\n *\n * Randomly applies the given function by the given probability.\n * Similar to {@link Pattern#someCyclesBy}\n *\n * @name sometimesBy\n * @memberof Pattern\n * @param {number | Pattern} probability - a number between 0 and 1\n * @param {function} function - the transformation to apply\n * @returns Pattern\n * @example\n * s(\"hh(3,8)\").sometimesBy(.4, x=>x.speed(\"0.5\"))\n */\n\nexport const sometimesBy = register('sometimesBy', function (patx, func, pat) {\n  return reify(patx)\n    .fmap((x) => stack(pat._degradeBy(x), func(pat._undegradeBy(1 - x))))\n    .innerJoin();\n});\n\n/**\n *\n * Applies the given function with a 50% chance\n *\n * @name sometimes\n * @memberof Pattern\n * @param {function} function - the transformation to apply\n * @returns Pattern\n * @example\n * s(\"hh*4\").sometimes(x=>x.speed(\"0.5\"))\n */\nexport const sometimes = register('sometimes', function (func, pat) {\n  return pat._sometimesBy(0.5, func);\n});\n\n/**\n *\n * Randomly applies the given function by the given probability on a cycle by cycle basis.\n * Similar to {@link Pattern#sometimesBy}\n *\n * @name someCyclesBy\n * @memberof Pattern\n * @param {number | Pattern} probability - a number between 0 and 1\n * @param {function} function - the transformation to apply\n * @returns Pattern\n * @example\n * s(\"hh(3,8)\").someCyclesBy(.3, x=>x.speed(\"0.5\"))\n */\n\nexport const someCyclesBy = register('someCyclesBy', function (patx, func, pat) {\n  return reify(patx)\n    .fmap((x) =>\n      stack(\n        pat._degradeByWith(rand._segment(1), x),\n        func(pat._degradeByWith(rand.fmap((r) => 1 - r)._segment(1), 1 - x)),\n      ),\n    )\n    .innerJoin();\n});\n\n/**\n *\n * Shorthand for `.someCyclesBy(0.5, fn)`\n *\n * @name someCycles\n * @memberof Pattern\n * @returns Pattern\n * @example\n * s(\"hh(3,8)\").someCycles(x=>x.speed(\"0.5\"))\n */\nexport const someCycles = register('someCycles', function (func, pat) {\n  return pat._someCyclesBy(0.5, func);\n});\n\n/**\n *\n * Shorthand for `.sometimesBy(0.75, fn)`\n *\n * @name often\n * @memberof Pattern\n * @returns Pattern\n * @example\n * s(\"hh*8\").often(x=>x.speed(\"0.5\"))\n */\nexport const often = register('often', function (func, pat) {\n  return pat.sometimesBy(0.75, func);\n});\n\n/**\n *\n * Shorthand for `.sometimesBy(0.25, fn)`\n *\n * @name rarely\n * @memberof Pattern\n * @returns Pattern\n * @example\n * s(\"hh*8\").rarely(x=>x.speed(\"0.5\"))\n */\nexport const rarely = register('rarely', function (func, pat) {\n  return pat.sometimesBy(0.25, func);\n});\n\n/**\n *\n * Shorthand for `.sometimesBy(0.1, fn)`\n *\n * @name almostNever\n * @memberof Pattern\n * @returns Pattern\n * @example\n * s(\"hh*8\").almostNever(x=>x.speed(\"0.5\"))\n */\nexport const almostNever = register('almostNever', function (func, pat) {\n  return pat.sometimesBy(0.1, func);\n});\n\n/**\n *\n * Shorthand for `.sometimesBy(0.9, fn)`\n *\n * @name almostAlways\n * @memberof Pattern\n * @returns Pattern\n * @example\n * s(\"hh*8\").almostAlways(x=>x.speed(\"0.5\"))\n */\nexport const almostAlways = register('almostAlways', function (func, pat) {\n  return pat.sometimesBy(0.9, func);\n});\n\n/**\n *\n * Shorthand for `.sometimesBy(0, fn)` (never calls fn)\n *\n * @name never\n * @memberof Pattern\n * @returns Pattern\n * @example\n * s(\"hh*8\").never(x=>x.speed(\"0.5\"))\n */\nexport const never = register('never', function (_, pat) {\n  return pat;\n});\n\n/**\n *\n * Shorthand for `.sometimesBy(1, fn)` (always calls fn)\n *\n * @name always\n * @memberof Pattern\n * @returns Pattern\n * @example\n * s(\"hh*8\").always(x=>x.speed(\"0.5\"))\n */\nexport const always = register('always', function (func, pat) {\n  return func(pat);\n});\n","/*\nspeak.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/speak.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { register } from './index.mjs';\n\nlet synth;\ntry {\n  synth = window?.speechSynthesis;\n} catch (err) {\n  console.warn('cannot use window: not in browser?');\n}\n\nlet allVoices = synth?.getVoices();\n// console.log('voices', allVoices);\n\nfunction triggerSpeech(words, lang, voice) {\n  synth.cancel();\n  const utterance = new SpeechSynthesisUtterance(words);\n  utterance.lang = lang;\n  allVoices = synth.getVoices();\n  const voices = allVoices.filter((v) => v.lang.includes(lang));\n  if (typeof voice === 'number') {\n    utterance.voice = voices[voice % voices.length];\n  } else if (typeof voice === 'string') {\n    utterance.voice = voices.find((voice) => voice.name === voice);\n  }\n  // console.log(utterance.voice?.name, utterance.voice?.lang);\n  speechSynthesis.speak(utterance);\n}\n\nexport const speak = register('speak', function (lang, voice, pat) {\n  return pat.onTrigger((_, hap) => {\n    triggerSpeech(hap.value, lang, voice);\n  });\n});\n","/*\nevaluate.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/evaluate.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { isPattern } from './index.mjs';\n\nexport const evalScope = async (...args) => {\n  const results = await Promise.allSettled(args);\n  const modules = results.filter((result) => result.status === 'fulfilled').map((r) => r.value);\n  results.forEach((result, i) => {\n    if (result.status === 'rejected') {\n      console.warn(`evalScope: module with index ${i} could not be loaded:`, result.reason);\n    }\n  });\n  // Object.assign(globalThis, ...modules);\n  // below is a fix for above commented out line\n  // same error as https://github.com/vitest-dev/vitest/issues/1807 when running this on astro server\n  modules.forEach((module) => {\n    Object.entries(module).forEach(([name, value]) => {\n      globalThis[name] = value;\n    });\n  });\n};\n\nfunction safeEval(str, options = {}) {\n  const { wrapExpression = true, wrapAsync = true } = options;\n  if (wrapExpression) {\n    str = `{${str}}`;\n  }\n  if (wrapAsync) {\n    str = `(async ()=>${str})()`;\n  }\n  const body = `\"use strict\";return (${str})`;\n  return Function(body)();\n}\n\nexport const evaluate = async (code, transpiler) => {\n  let meta = {};\n  if (transpiler) {\n    // transform syntactically correct js code to semantically usable code\n    const transpiled = transpiler(code);\n    code = transpiled.output;\n    meta = transpiled;\n  }\n  // if no transpiler is given, we expect a single instruction (!wrapExpression)\n  const options = { wrapExpression: !!transpiler };\n  let evaluated = await safeEval(code, options);\n  return { mode: 'javascript', pattern: evaluated, meta };\n};\n","// will move to https://github.com/felixroos/zyklus\n// TODO: started flag\n\nfunction createClock(\n  getTime,\n  callback, // called slightly before each cycle\n  duration = 0.05, // duration of each cycle\n  interval = 0.1, // interval between callbacks\n  overlap = 0.1, // overlap between callbacks\n) {\n  let tick = 0; // counts callbacks\n  let phase = 0; // next callback time\n  let precision = 10 ** 4; // used to round phase\n  let minLatency = 0.01;\n  const setDuration = (setter) => (duration = setter(duration));\n  overlap = overlap || interval / 2;\n  const onTick = () => {\n    const t = getTime();\n    const lookahead = t + interval + overlap; // the time window for this tick\n    if (phase === 0) {\n      phase = t + minLatency;\n    }\n    // callback as long as we're inside the lookahead\n    while (phase < lookahead) {\n      phase = Math.round(phase * precision) / precision;\n      phase >= t && callback(phase, duration, tick);\n      phase < t && console.log('TOO LATE', phase); // what if latency is added from outside?\n      phase += duration; // increment phase by duration\n      tick++;\n    }\n  };\n  let intervalID;\n  const start = () => {\n    clear(); // just in case start was called more than once\n    onTick();\n    intervalID = setInterval(onTick, interval * 1000);\n  };\n  const clear = () => intervalID !== undefined && clearInterval(intervalID);\n  const pause = () => clear();\n  const stop = () => {\n    tick = 0;\n    phase = 0;\n    clear();\n  };\n  const getPhase = () => phase;\n  // setCallback\n  return { setDuration, start, stop, pause, duration, interval, getPhase, minLatency };\n}\nexport default createClock;\n","/*\ncyclist.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/cyclist.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport createClock from './zyklus.mjs';\nimport { logger } from './logger.mjs';\n\nexport class Cyclist {\n  constructor({ interval, onTrigger, onToggle, onError, getTime, latency = 0.1 }) {\n    this.started = false;\n    this.cps = 1;\n    this.num_ticks_since_cps_change = 0;\n    this.lastTick = 0; // absolute time when last tick (clock callback) happened\n    this.lastBegin = 0; // query begin of last tick\n    this.lastEnd = 0; // query end of last tick\n    this.getTime = getTime; // get absolute time\n    this.num_cycles_since_last_cps_change = 0;\n    this.onToggle = onToggle;\n    this.latency = latency; // fixed trigger time offset\n    this.clock = createClock(\n      getTime,\n      // called slightly before each cycle\n      (phase, duration, tick) => {\n        if (tick === 0) {\n          this.origin = phase;\n        }\n        if (this.num_ticks_since_cps_change === 0) {\n          this.num_cycles_since_last_cps_change = this.lastEnd;\n        }\n        this.num_ticks_since_cps_change++;\n        try {\n          const time = getTime();\n          const begin = this.lastEnd;\n          this.lastBegin = begin;\n\n          //convert ticks to cycles, so you can query the pattern for events\n          const eventLength = duration * this.cps;\n          const end = this.num_cycles_since_last_cps_change + this.num_ticks_since_cps_change * eventLength;\n          this.lastEnd = end;\n\n          // query the pattern for events\n          const haps = this.pattern.queryArc(begin, end);\n\n          const tickdeadline = phase - time; // time left until the phase is a whole number\n          this.lastTick = time + tickdeadline;\n\n          haps.forEach((hap) => {\n            if (hap.part.begin.equals(hap.whole.begin)) {\n              const deadline = (hap.whole.begin - begin) / this.cps + tickdeadline + latency;\n              const duration = hap.duration / this.cps;\n              onTrigger?.(hap, deadline, duration, this.cps);\n            }\n          });\n        } catch (e) {\n          logger(`[cyclist] error: ${e.message}`);\n          onError?.(e);\n        }\n      },\n      interval, // duration of each cycle\n    );\n    let that = this;\n    globalThis.__cyclist__ = that;\n  }\n  now() {\n    const secondsSinceLastTick = this.getTime() - this.lastTick - this.clock.duration;\n    return this.lastBegin + secondsSinceLastTick * this.cps; // + this.clock.minLatency;\n  }\n  setStarted(v) {\n    this.started = v;\n    this.onToggle?.(v);\n  }\n  start() {\n    this.num_ticks_since_cps_change = 0;\n    this.num_cycles_since_last_cps_change = 0;\n    if (!this.pattern) {\n      throw new Error('Scheduler: no pattern set! call .setPattern first.');\n    }\n    logger('[cyclist] start');\n    this.clock.start();\n    this.setStarted(true);\n    globalThis.haps_from_outputs = null;\n  }\n  pause() {\n    logger('[cyclist] pause');\n    this.clock.pause();\n    this.setStarted(false);\n  }\n  stop() {\n    logger('[cyclist] stop');\n    this.clock.stop();\n    this.lastEnd = 0;\n    this.setStarted(false);\n  }\n  setPattern(pat, autostart = false) {\n    this.pattern = pat;\n    if (autostart && !this.started) {\n      this.start();\n    }\n  }\n  setCps(cps = 1) {\n    if (this.cps === cps) {\n      return;\n    }\n    this.cps = cps;\n    this.num_ticks_since_cps_change = 0;\n  }\n  log(begin, end, haps) {\n    const onsets = haps.filter((h) => h.hasOnset());\n    console.log(`${begin.toFixed(4)} - ${end.toFixed(4)} ${Array(onsets.length).fill('I').join('')}`);\n  }\n}\n","let time;\nexport function getTime() {\n  if (!time) {\n    throw new Error('no time set! use setTime to define a time source');\n  }\n  return time();\n}\n\nexport function setTime(func) {\n  time = func;\n}\n","import { Cyclist } from './cyclist.mjs';\nimport { evaluate as _evaluate } from './evaluate.mjs';\nimport { logger } from './logger.mjs';\nimport { setTime } from './time.mjs';\nimport { evalScope } from './evaluate.mjs';\nimport { register, Pattern, isPattern, silence, stack } from './pattern.mjs';\n\nexport function repl({\n  interval,\n  defaultOutput,\n  onSchedulerError,\n  onEvalError,\n  beforeEval,\n  afterEval,\n  getTime,\n  transpiler,\n  onToggle,\n  editPattern,\n  onUpdateState,\n}) {\n  const state = {\n    schedulerError: undefined,\n    evalError: undefined,\n    code: '// LOADING',\n    activeCode: '// LOADING',\n    pattern: undefined,\n    miniLocations: [],\n    widgets: [],\n    pending: false,\n    started: false,\n  };\n\n  const updateState = (update) => {\n    Object.assign(state, update);\n    state.isDirty = state.code !== state.activeCode;\n    state.error = state.evalError || state.schedulerError;\n    onUpdateState?.(state);\n  };\n\n  const scheduler = new Cyclist({\n    interval,\n    onTrigger: getTrigger({ defaultOutput, getTime }),\n    onError: onSchedulerError,\n    getTime,\n    onToggle: (started) => {\n      updateState({ started });\n      onToggle?.(started);\n    },\n  });\n  let pPatterns = {};\n  let allTransform;\n\n  const hush = function () {\n    pPatterns = {};\n    allTransform = undefined;\n    return silence;\n  };\n\n  const setPattern = (pattern, autostart = true) => {\n    pattern = editPattern?.(pattern) || pattern;\n    scheduler.setPattern(pattern, autostart);\n  };\n  setTime(() => scheduler.now()); // TODO: refactor?\n  const evaluate = async (code, autostart = true, shouldHush = true) => {\n    if (!code) {\n      throw new Error('no code to evaluate');\n    }\n    try {\n      updateState({ code, pending: true });\n      await beforeEval?.({ code });\n      shouldHush && hush();\n      let { pattern, meta } = await _evaluate(code, transpiler);\n      if (Object.keys(pPatterns).length) {\n        pattern = stack(...Object.values(pPatterns));\n      }\n      if (allTransform) {\n        pattern = allTransform(pattern);\n      }\n      if (!isPattern(pattern)) {\n        const message = `got \"${typeof evaluated}\" instead of pattern`;\n        throw new Error(message + (typeof evaluated === 'function' ? ', did you forget to call a function?' : '.'));\n      }\n      logger(`[eval] code updated`);\n      setPattern(pattern, autostart);\n      updateState({\n        miniLocations: meta?.miniLocations || [],\n        widgets: meta?.widgets || [],\n        activeCode: code,\n        pattern,\n        evalError: undefined,\n        schedulerError: undefined,\n        pending: false,\n      });\n      afterEval?.({ code, pattern, meta });\n      return pattern;\n    } catch (err) {\n      // console.warn(`[repl] eval error: ${err.message}`);\n      logger(`[eval] error: ${err.message}`, 'error');\n      updateState({ evalError: err, pending: false });\n      onEvalError?.(err);\n    }\n  };\n  const stop = () => scheduler.stop();\n  const start = () => scheduler.start();\n  const pause = () => scheduler.pause();\n  const toggle = () => scheduler.toggle();\n  const setCps = (cps) => scheduler.setCps(cps);\n  const setCpm = (cpm) => scheduler.setCps(cpm / 60);\n\n  // the following functions use the cps value, which is why they are defined here..\n  const loopAt = register('loopAt', (cycles, pat) => {\n    return pat.loopAtCps(cycles, scheduler.cps);\n  });\n\n  Pattern.prototype.p = function (id) {\n    pPatterns[id] = this;\n    return this;\n  };\n  Pattern.prototype.q = function (id) {\n    return silence;\n  };\n\n  const all = function (transform) {\n    allTransform = transform;\n    return silence;\n  };\n  try {\n    for (let i = 1; i < 10; ++i) {\n      Object.defineProperty(Pattern.prototype, `d${i}`, {\n        get() {\n          return this.p(i);\n        },\n      });\n      Object.defineProperty(Pattern.prototype, `p${i}`, {\n        get() {\n          return this.p(i);\n        },\n      });\n      Pattern.prototype[`q${i}`] = silence;\n    }\n  } catch (err) {\n    // already defined..\n  }\n\n  const fit = register('fit', (pat) =>\n    pat.withHap((hap) =>\n      hap.withValue((v) => ({\n        ...v,\n        speed: scheduler.cps / hap.whole.duration, // overwrite speed completely?\n        unit: 'c',\n      })),\n    ),\n  );\n\n  evalScope({\n    loopAt,\n    fit,\n    all,\n    hush,\n    setCps,\n    setcps: setCps,\n    setCpm,\n    setcpm: setCpm,\n  });\n  const setCode = (code) => updateState({ code });\n  return { scheduler, evaluate, start, stop, pause, setCps, setPattern, setCode, toggle, state };\n}\n\nexport const getTrigger =\n  ({ getTime, defaultOutput }) =>\n  async (hap, deadline, duration, cps) => {\n    try {\n      if (!hap.context.onTrigger || !hap.context.dominantTrigger) {\n        await defaultOutput(hap, deadline, duration, cps);\n      }\n      if (hap.context.onTrigger) {\n        // call signature of output / onTrigger is different...\n        await hap.context.onTrigger(getTime() + deadline, hap, getTime(), cps);\n      }\n    } catch (err) {\n      logger(`[cyclist] error: ${err.message}`, 'error');\n    }\n  };\n","/*\ndraw.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/draw.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Pattern, getTime, State, TimeSpan } from './index.mjs';\n\nexport const getDrawContext = (id = 'test-canvas') => {\n  let canvas = document.querySelector('#' + id);\n  if (!canvas) {\n    const scale = 2; // 2 = crisp on retina screens\n    canvas = document.createElement('canvas');\n    canvas.id = id;\n    canvas.width = window.innerWidth * scale;\n    canvas.height = window.innerHeight * scale;\n    canvas.style = 'pointer-events:none;width:100%;height:100%;position:fixed;top:0;left:0';\n    document.body.prepend(canvas);\n    let timeout;\n    window.addEventListener('resize', () => {\n      timeout && clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        canvas.width = window.innerWidth * scale;\n        canvas.height = window.innerHeight * scale;\n      }, 200);\n    });\n  }\n  return canvas.getContext('2d');\n};\n\nPattern.prototype.draw = function (callback, { from, to, onQuery } = {}) {\n  if (typeof window === 'undefined') {\n    return this;\n  }\n  if (window.strudelAnimation) {\n    cancelAnimationFrame(window.strudelAnimation);\n  }\n  const ctx = getDrawContext();\n  let cycle,\n    events = [];\n  const animate = (time) => {\n    const t = getTime();\n    if (from !== undefined && to !== undefined) {\n      const currentCycle = Math.floor(t);\n      if (cycle !== currentCycle) {\n        cycle = currentCycle;\n        const begin = currentCycle + from;\n        const end = currentCycle + to;\n        setTimeout(() => {\n          events = this.query(new State(new TimeSpan(begin, end)))\n            .filter(Boolean)\n            .filter((event) => event.part.begin.equals(event.whole.begin));\n          onQuery?.(events);\n        }, 0);\n      }\n    }\n    callback(ctx, events, t, time);\n    window.strudelAnimation = requestAnimationFrame(animate);\n  };\n  requestAnimationFrame(animate);\n  return this;\n};\n\nexport const cleanupDraw = (clearScreen = true) => {\n  const ctx = getDrawContext();\n  clearScreen && ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.width);\n  if (window.strudelAnimation) {\n    cancelAnimationFrame(window.strudelAnimation);\n  }\n  if (window.strudelScheduler) {\n    clearInterval(window.strudelScheduler);\n  }\n};\n\nPattern.prototype.onPaint = function (onPaint) {\n  // this is evil! TODO: add pattern.context\n  this.context = { onPaint };\n  return this;\n};\n\n// const round = (x) => Math.round(x * 1000) / 1000;\n\n// encapsulates starting and stopping animation frames\nexport class Framer {\n  constructor(onFrame, onError) {\n    this.onFrame = onFrame;\n    this.onError = onError;\n  }\n  start() {\n    const self = this;\n    let frame = requestAnimationFrame(function updateHighlights(time) {\n      try {\n        self.onFrame(time);\n      } catch (err) {\n        self.onError(err);\n      }\n      frame = requestAnimationFrame(updateHighlights);\n    });\n    self.cancel = () => {\n      cancelAnimationFrame(frame);\n    };\n  }\n  stop() {\n    if (this.cancel) {\n      this.cancel();\n    }\n  }\n}\n\n// syncs animation frames to a cyclist scheduler\n// see vite-vanilla-repl-cm6 for an example\nexport class Drawer {\n  constructor(onDraw, drawTime) {\n    this.visibleHaps = [];\n    this.lastFrame = null;\n    this.drawTime = drawTime;\n    this.framer = new Framer(\n      () => {\n        if (!this.scheduler) {\n          console.warn('Drawer: no scheduler');\n          return;\n        }\n        const lookbehind = Math.abs(this.drawTime[0]);\n        const lookahead = this.drawTime[1];\n        // calculate current frame time (think right side of screen for pianoroll)\n        const phase = this.scheduler.now() + lookahead;\n        // first frame just captures the phase\n        if (this.lastFrame === null) {\n          this.lastFrame = phase;\n          return;\n        }\n        // query haps from last frame till now. take last 100ms max\n        const haps = this.scheduler.pattern.queryArc(Math.max(this.lastFrame, phase - 1 / 10), phase);\n        this.lastFrame = phase;\n        this.visibleHaps = (this.visibleHaps || [])\n          // filter out haps that are too far in the past (think left edge of screen for pianoroll)\n          .filter((h) => h.whole.end >= phase - lookbehind - lookahead)\n          // add new haps with onset (think right edge bars scrolling in)\n          .concat(haps.filter((h) => h.hasOnset()));\n        const time = phase - lookahead;\n        onDraw(this.visibleHaps, time, this);\n      },\n      (err) => {\n        console.warn('draw error', err);\n      },\n    );\n  }\n  setDrawTime(drawTime) {\n    this.drawTime = drawTime;\n  }\n  invalidate(scheduler = this.scheduler, t) {\n    if (!scheduler) {\n      return;\n    }\n    // TODO: scheduler.now() seems to move even when it's stopped, this hints at a bug...\n    t = t ?? scheduler.now();\n    this.scheduler = scheduler;\n    let [_, lookahead] = this.drawTime;\n    const [begin, end] = [Math.max(t, 0), t + lookahead + 0.1];\n    // remove all future haps\n    this.visibleHaps = this.visibleHaps.filter((h) => h.whole.begin < t);\n    // query future haps\n    const futureHaps = scheduler.pattern.queryArc(begin, end); // +0.1 = workaround for weird holes in query..\n    // append future haps\n    this.visibleHaps = this.visibleHaps.concat(futureHaps);\n  }\n  start(scheduler) {\n    this.scheduler = scheduler;\n    this.invalidate();\n    this.framer.start();\n  }\n  stop() {\n    if (this.framer) {\n      this.framer.stop();\n    }\n  }\n}\n","import { Pattern, getDrawContext, silence, register, pure } from './index.mjs';\nimport controls from './controls.mjs'; // do not import from index.mjs as it breaks for some reason..\nconst { createParams } = controls;\n\nlet clearColor = '#22222210';\n\nPattern.prototype.animate = function ({ callback, sync = false, smear = 0.5 } = {}) {\n  window.frame && cancelAnimationFrame(window.frame);\n  const ctx = getDrawContext();\n  const { clientWidth: ww, clientHeight: wh } = ctx.canvas;\n  let smearPart = smear === 0 ? '99' : Number((1 - smear) * 100).toFixed(0);\n  smearPart = smearPart.length === 1 ? `0${smearPart}` : smearPart;\n  clearColor = `#200010${smearPart}`;\n  const render = (t) => {\n    let frame;\n    /*     if (sync) {\n      t = scheduler.now();\n      frame = this.queryArc(t, t);\n    } else { */\n    t = Math.round(t);\n    frame = this.slow(1000).queryArc(t, t);\n    // }\n    ctx.fillStyle = clearColor;\n    ctx.fillRect(0, 0, ww, wh);\n    frame.forEach((f) => {\n      let { x, y, w, h, s, r, angle = 0, fill = 'darkseagreen' } = f.value;\n      w *= ww;\n      h *= wh;\n      if (r !== undefined && angle !== undefined) {\n        const radians = angle * 2 * Math.PI;\n        const [cx, cy] = [(ww - w) / 2, (wh - h) / 2];\n        x = cx + Math.cos(radians) * r * cx;\n        y = cy + Math.sin(radians) * r * cy;\n      } else {\n        x *= ww - w;\n        y *= wh - h;\n      }\n      const val = { ...f.value, x, y, w, h };\n      ctx.fillStyle = fill;\n      if (s === 'rect') {\n        ctx.fillRect(x, y, w, h);\n      } else if (s === 'ellipse') {\n        ctx.beginPath();\n        ctx.ellipse(x + w / 2, y + h / 2, w / 2, h / 2, 0, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n      callback && callback(ctx, val, f);\n    });\n    window.frame = requestAnimationFrame(render);\n  };\n  window.frame = requestAnimationFrame(render);\n  return silence;\n};\n\nexport const { x, y, w, h, angle, r, fill, smear } = createParams('x', 'y', 'w', 'h', 'angle', 'r', 'fill', 'smear');\n\nexport const rescale = register('rescale', function (f, pat) {\n  return pat.mul(x(f).w(f).y(f).h(f));\n});\n\nexport const moveXY = register('moveXY', function (dx, dy, pat) {\n  return pat.add(x(dx).y(dy));\n});\n\nexport const zoomIn = register('zoomIn', function (f, pat) {\n  const d = pure(1).sub(f).div(2);\n  return pat.rescale(f).move(d, d);\n});\n","/*\npianoroll.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/pianoroll.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Pattern, noteToMidi, getDrawContext, freqToMidi, isNote } from './index.mjs';\n\nconst scale = (normalized, min, max) => normalized * (max - min) + min;\nconst getValue = (e) => {\n  let { value } = e;\n  if (typeof e.value !== 'object') {\n    value = { value };\n  }\n  let { note, n, freq, s } = value;\n  if (freq) {\n    return freqToMidi(freq);\n  }\n  note = note ?? n;\n  if (typeof note === 'string') {\n    return noteToMidi(note);\n  }\n  if (typeof note === 'number') {\n    return note;\n  }\n  if (s) {\n    return '_' + s;\n  }\n  return value;\n};\n\nPattern.prototype.pianoroll = function (options = {}) {\n  let { cycles = 4, playhead = 0.5, overscan = 1, hideNegative = false } = options;\n\n  let from = -cycles * playhead;\n  let to = cycles * (1 - playhead);\n\n  this.draw(\n    (ctx, haps, t) => {\n      const inFrame = (event) =>\n        (!hideNegative || event.whole.begin >= 0) && event.whole.begin <= t + to && event.endClipped >= t + from;\n      // Usually haps is much much larger than haps_from_outputs.\n      if (globalThis.haps_from_outputs) {\n      } else {\n        globalThis.haps_from_outputs = [];\n      }\n      if (globalThis.haps_from_outputs.length > 0) {\n        haps.push(...globalThis.haps_from_outputs);\n        haps = globalThis.haps_from_outputs.filter(inFrame);\n        globalThis.haps_from_outputs = haps;\n      }\n      pianoroll({\n          ...options,\n          time: t,\n          ctx,\n          haps: haps.filter(inFrame),\n    });\n    },\n    {\n      from: from - overscan,\n      to: to + overscan,\n    },\n  );\n  return this;\n};\n\n// this function allows drawing a pianoroll without ties to Pattern.prototype\n// it will probably replace the above in the future\n\n/**\n * Displays a midi-style piano roll\n *\n * @name pianoroll\n * @param {Object} options Object containing all the optional following parameters as key value pairs:\n * @param {integer} cycles number of cycles to be displayed at the same time - defaults to 4\n * @param {number} playhead location of the active notes on the time axis - 0 to 1, defaults to 0.5\n * @param {boolean} vertical displays the roll vertically - 0 by default\n * @param {boolean} labels displays labels on individual notes (see the label function) - 0 by default\n * @param {boolean} flipTime reverse the direction of the roll - 0 by default\n * @param {boolean} flipValues reverse the relative location of notes on the value axis - 0 by default\n * @param {number} overscan lookup X cycles outside of the cycles window to display notes in advance - 1 by default\n * @param {boolean} hideNegative hide notes with negative time (before starting playing the pattern) - 0 by default\n * @param {boolean} smear notes leave a solid trace - 0 by default\n * @param {boolean} fold notes takes the full value axis width - 0 by default\n * @param {string} active hexadecimal or CSS color of the active notes - defaults to #FFCA28\n * @param {string} inactive hexadecimal or CSS color of the inactive notes - defaults to #7491D2\n * @param {string} background hexadecimal or CSS color of the background - defaults to transparent\n * @param {string} playheadColor hexadecimal or CSS color of the line representing the play head - defaults to white\n * @param {boolean} fill notes are filled with color (otherwise only the label is displayed) - 0 by default\n * @param {boolean} fillActive active notes are filled with color - 0 by default\n * @param {boolean} stroke notes are shown with colored borders - 0 by default\n * @param {boolean} strokeActive active notes are shown with colored borders - 0 by default\n * @param {boolean} hideInactive only active notes are shown - 0 by default\n * @param {boolean} colorizeInactive use note color for inactive notes - 1 by default\n * @param {string} fontFamily define the font used by notes labels - defaults to 'monospace'\n * @param {integer} minMidi minimum note value to display on the value axis - defaults to 10\n * @param {integer} maxMidi maximum note value to display on the value axis - defaults to 90\n * @param {boolean} autorange automatically calculate the minMidi and maxMidi parameters - 0 by default\n *\n * @example\n * note(\"C2 A2 G2\").euclid(5,8).s('piano').clip(1).color('salmon').pianoroll({vertical:1, labels:1})\n */\nexport function pianoroll({\n  time,\n  haps,\n  cycles = 4,\n  playhead = 0.5,\n  flipTime = 0,\n  flipValues = 0,\n  hideNegative = false,\n  // inactive = '#C9E597',\n  // inactive = '#FFCA28',\n  inactive = '#7491D2',\n  active = '#FFCA28',\n  // background = '#2A3236',\n  background = 'transparent',\n  smear = 0,\n  playheadColor = 'white',\n  minMidi = 10,\n  maxMidi = 90,\n  autorange = 0,\n  timeframe: timeframeProp,\n  fold = 0,\n  vertical = 0,\n  labels = false,\n  fill = 1,\n  fillActive = false,\n  strokeActive = true,\n  stroke,\n  hideInactive = 0,\n  colorizeInactive = 1,\n  fontFamily,\n  ctx,\n} = {}) {\n  const w = ctx.canvas.width;\n  const h = ctx.canvas.height;\n  let from = -cycles * playhead;\n  let to = cycles * (1 - playhead);\n\n  if (timeframeProp) {\n    console.warn('timeframe is deprecated! use from/to instead');\n    from = 0;\n    to = timeframeProp;\n  }\n  const timeAxis = vertical ? h : w;\n  const valueAxis = vertical ? w : h;\n  let timeRange = vertical ? [timeAxis, 0] : [0, timeAxis]; // pixel range for time\n  const timeExtent = to - from; // number of seconds that fit inside the canvas frame\n  const valueRange = vertical ? [0, valueAxis] : [valueAxis, 0]; // pixel range for values\n  let valueExtent = maxMidi - minMidi + 1; // number of \"slots\" for values, overwritten if autorange true\n  let barThickness = valueAxis / valueExtent; // pixels per value, overwritten if autorange true\n  let foldValues = [];\n  flipTime && timeRange.reverse();\n  flipValues && valueRange.reverse();\n\n  // onQuery\n  const { min, max, values } = haps.reduce(\n    ({ min, max, values }, e) => {\n      const v = getValue(e);\n      return {\n        min: v < min ? v : min,\n        max: v > max ? v : max,\n        values: values.includes(v) ? values : [...values, v],\n      };\n    },\n    { min: Infinity, max: -Infinity, values: [] },\n  );\n  if (autorange) {\n    minMidi = min;\n    maxMidi = max;\n    valueExtent = maxMidi - minMidi + 1;\n  }\n  // foldValues = values.sort((a, b) => a - b);\n  foldValues = values.sort((a, b) => String(a).localeCompare(String(b)));\n  barThickness = fold ? valueAxis / foldValues.length : valueAxis / valueExtent;\n  ctx.fillStyle = background;\n  ctx.globalAlpha = 1; // reset!\n  if (!smear) {\n    ctx.clearRect(0, 0, w, h);\n    ctx.fillRect(0, 0, w, h);\n  }\n  haps.forEach((event) => {\n    const isActive = event.whole.begin <= time && event.endClipped > time;\n    let strokeCurrent = stroke ?? (strokeActive && isActive);\n    let fillCurrent = (!isActive && fill) || (isActive && fillActive);\n    if (hideInactive && !isActive) {\n      return;\n    }\n    let color = event.value?.color || event.context?.color;\n    active = color || active;\n    inactive = colorizeInactive ? color || inactive : inactive;\n    color = isActive ? active : inactive;\n    ctx.fillStyle = fillCurrent ? color : 'transparent';\n    ctx.strokeStyle = color;\n    ctx.globalAlpha = event.context.velocity ?? event.value?.gain ?? 1;\n    const timeProgress = (event.whole.begin - (flipTime ? to : from)) / timeExtent;\n    const timePx = scale(timeProgress, ...timeRange);\n    let durationPx = scale(event.duration / timeExtent, 0, timeAxis);\n    const value = getValue(event);\n    const valueProgress = fold\n      ? foldValues.indexOf(value) / foldValues.length\n      : (Number(value) - minMidi) / valueExtent;\n    const valuePx = scale(valueProgress, ...valueRange);\n    let margin = 0;\n    const offset = scale(time / timeExtent, ...timeRange);\n    let coords;\n    if (vertical) {\n      coords = [\n        valuePx + 1 - (flipValues ? barThickness : 0), // x\n        timeAxis - offset + timePx + margin + 1 - (flipTime ? 0 : durationPx), // y\n        barThickness - 2, // width\n        durationPx - 2, // height\n      ];\n    } else {\n      coords = [\n        timePx - offset + margin + 1 - (flipTime ? durationPx : 0), // x\n        valuePx + 1 - (flipValues ? 0 : barThickness), // y\n        durationPx - 2, // widith\n        barThickness - 2, // height\n      ];\n    }\n    /* const xFactor = Math.sin(performance.now() / 500) + 1;\n      coords[0] *= xFactor; */\n\n    if (strokeCurrent) {\n      ctx.strokeRect(...coords);\n    }\n    if (fillCurrent) {\n      ctx.fillRect(...coords);\n    }\n    //ctx.ellipse(...ellipseFromRect(...coords))\n    if (labels) {\n      const defaultLabel = event.value.note ?? event.value.s + (event.value.n ? `:${event.value.n}` : '');\n      const { label: inactiveLabel, activeLabel } = event.value;\n      const customLabel = isActive ? activeLabel || inactiveLabel : inactiveLabel;\n      const label = customLabel ?? defaultLabel;\n      let measure = vertical ? durationPx : barThickness * 0.75;\n      ctx.font = `${measure}px ${fontFamily || 'monospace'}`;\n      // font color\n      ctx.fillStyle = /* isActive &&  */ !fillCurrent ? color : 'black';\n      ctx.textBaseline = 'top';\n      ctx.fillText(label, ...coords);\n    }\n  });\n  ctx.globalAlpha = 1; // reset!\n  const playheadPosition = scale(-from / timeExtent, ...timeRange);\n  // draw playhead\n  ctx.strokeStyle = playheadColor;\n  ctx.beginPath();\n  if (vertical) {\n    ctx.moveTo(0, playheadPosition);\n    ctx.lineTo(valueAxis, playheadPosition);\n  } else {\n    ctx.moveTo(playheadPosition, 0);\n    ctx.lineTo(playheadPosition, valueAxis);\n  }\n  ctx.stroke();\n  return this;\n}\n\nexport function getDrawOptions(drawTime, options = {}) {\n  let [lookbehind, lookahead] = drawTime;\n  lookbehind = Math.abs(lookbehind);\n  const cycles = lookahead + lookbehind;\n  const playhead = lookbehind / cycles;\n  return { fold: 1, ...options, cycles, playhead };\n}\n\nexport const getPunchcardPainter =\n  (options = {}) =>\n  (ctx, time, haps, drawTime, paintOptions = {}) =>\n    pianoroll({ ctx, time, haps, ...getDrawOptions(drawTime, { ...paintOptions, ...options }) });\n\nPattern.prototype.punchcard = function (options) {\n  return this.onPaint(getPunchcardPainter(options));\n};\n\n/**\n * Displays a vertical pianoroll with event labels.\n * Supports all the same options as pianoroll.\n *\n * @name wordfall\n */\nPattern.prototype.wordfall = function (options) {\n  return this.punchcard({ vertical: 1, labels: 1, stroke: 0, fillActive: 1, active: 'white', ...options });\n};\n\n/* Pattern.prototype.pianoroll = function (options) {\n  return this.onPaint((ctx, time, haps, drawTime) =>\n    pianoroll({ ctx, time, haps, ...getDrawOptions(drawTime, { fold: 0, ...options }) }),\n  );\n}; */\n\nexport function drawPianoroll(options) {\n  const { drawTime, ...rest } = options;\n  pianoroll({ ...getDrawOptions(drawTime), ...rest });\n}\n","import { Pattern } from './index.mjs';\n\n// polar coords -> xy\nfunction fromPolar(angle, radius, cx, cy) {\n  const radians = ((angle - 90) * Math.PI) / 180;\n  return [cx + Math.cos(radians) * radius, cy + Math.sin(radians) * radius];\n}\n\nconst xyOnSpiral = (angle, margin, cx, cy, rotate = 0) => fromPolar((angle + rotate) * 360, margin * angle, cx, cy); // TODO: logSpiral\n\n// draw spiral / segment of spiral\nfunction spiralSegment(options) {\n  let {\n    ctx,\n    from = 0,\n    to = 3,\n    margin = 50,\n    cx = 100,\n    cy = 100,\n    rotate = 0,\n    thickness = margin / 2,\n    color = '#0000ff30',\n    cap = 'round',\n    stretch = 1,\n    fromOpacity = 1,\n    toOpacity = 1,\n  } = options;\n  from *= stretch;\n  to *= stretch;\n  rotate *= stretch;\n  ctx.lineWidth = thickness;\n  ctx.lineCap = cap;\n  ctx.strokeStyle = color;\n  ctx.globalAlpha = fromOpacity;\n\n  ctx.beginPath();\n  let [sx, sy] = xyOnSpiral(from, margin, cx, cy, rotate);\n  ctx.moveTo(sx, sy);\n\n  const increment = 1 / 60;\n  let angle = from;\n  while (angle <= to) {\n    const [x, y] = xyOnSpiral(angle, margin, cx, cy, rotate);\n    //ctx.lineWidth = angle*thickness;\n    ctx.globalAlpha = ((angle - from) / (to - from)) * toOpacity;\n    ctx.lineTo(x, y);\n    angle += increment;\n  }\n  ctx.stroke();\n}\n\nPattern.prototype.spiral = function (options = {}) {\n  const {\n    stretch = 1,\n    size = 80,\n    thickness = size / 2,\n    cap = 'butt', // round butt squar,\n    inset = 3, // start angl,\n    playheadColor = '#ffffff90',\n    playheadLength = 0.02,\n    playheadThickness = thickness,\n    padding = 0,\n    steady = 1,\n    inactiveColor = '#ffffff20',\n    colorizeInactive = 0,\n    fade = true,\n    // logSpiral = true,\n  } = options;\n\n  function spiral({ ctx, time, haps, drawTime }) {\n    const [w, h] = [ctx.canvas.width, ctx.canvas.height];\n    ctx.clearRect(0, 0, w * 2, h * 2);\n    const [cx, cy] = [w / 2, h / 2];\n    const settings = {\n      margin: size / stretch,\n      cx,\n      cy,\n      stretch,\n      cap,\n      thickness,\n    };\n\n    const playhead = {\n      ...settings,\n      thickness: playheadThickness,\n      from: inset - playheadLength,\n      to: inset,\n      color: playheadColor,\n    };\n\n    const [min] = drawTime;\n    const rotate = steady * time;\n    haps.forEach((hap) => {\n      const isActive = hap.whole.begin <= time && hap.endClipped > time;\n      const from = hap.whole.begin - time + inset;\n      const to = hap.endClipped - time + inset - padding;\n      const { color } = hap.context;\n      const opacity = fade ? 1 - Math.abs((hap.whole.begin - time) / min) : 1;\n      spiralSegment({\n        ctx,\n        ...settings,\n        from,\n        to,\n        rotate,\n        color: colorizeInactive || isActive ? color : inactiveColor,\n        fromOpacity: opacity,\n        toOpacity: opacity,\n      });\n    });\n    spiralSegment({\n      ctx,\n      ...playhead,\n      rotate,\n    });\n  }\n\n  return this.onPaint((ctx, time, haps, drawTime) => spiral({ ctx, time, haps, drawTime }));\n};\n","/*\nui.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/ui.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { getTime } from './time.mjs';\n\nfunction frame(callback) {\n  if (window.strudelAnimation) {\n    cancelAnimationFrame(window.strudelAnimation);\n  }\n  const animate = (animationTime) => {\n    callback(animationTime, getTime());\n    window.strudelAnimation = requestAnimationFrame(animate);\n  };\n  requestAnimationFrame(animate);\n}\n\nexport const backgroundImage = function (src, animateOptions = {}) {\n  const container = document.getElementById('code');\n  const bg = 'background-image:url(' + src + ');background-size:contain;';\n  container.style = bg;\n  const { className: initialClassName } = container;\n  const handleOption = (option, value) => {\n    ({\n      style: () => (container.style = bg + ';' + value),\n      className: () => (container.className = value + ' ' + initialClassName),\n    })[option]();\n  };\n  const funcOptions = Object.entries(animateOptions).filter(([_, v]) => typeof v === 'function');\n  const stringOptions = Object.entries(animateOptions).filter(([_, v]) => typeof v === 'string');\n  stringOptions.forEach(([option, value]) => handleOption(option, value));\n\n  if (funcOptions.length === 0) {\n    return;\n  }\n  frame((_, t) =>\n    funcOptions.forEach(([option, value]) => {\n      handleOption(option, value(t));\n    }),\n  );\n};\n\nexport const cleanupUi = () => {\n  const container = document.getElementById('code');\n  if (container) {\n    container.style = '';\n  }\n};\n","/*\nindex.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/core/index.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport controls from './controls.mjs';\nexport * from './euclid.mjs';\nimport Fraction from './fraction.mjs';\nimport { logger } from './logger.mjs';\nexport { Fraction, controls };\nexport * from './hap.mjs';\nexport * from './pattern.mjs';\nexport * from './signal.mjs';\nexport * from './state.mjs';\nexport * from './timespan.mjs';\nexport * from './util.mjs';\nexport * from './speak.mjs';\nexport * from './evaluate.mjs';\nexport * from './repl.mjs';\nexport * from './cyclist.mjs';\nexport * from './logger.mjs';\nexport * from './time.mjs';\nexport * from './draw.mjs';\nexport * from './animate.mjs';\nexport * from './pianoroll.mjs';\nexport * from './spiral.mjs';\nexport * from './ui.mjs';\nexport { default as drawLine } from './drawLine.mjs';\n// below won't work with runtime.mjs (json import fails)\n/* import * as p from './package.json';\nexport const version = p.version; */\nlogger('🌀 @strudel.cycles/core loaded 🌀');\nif (globalThis._strudelLoaded) {\n  console.warn(\n    `@strudel.cycles/core was loaded more than once...\nThis might happen when you have multiple versions of strudel installed. \nPlease check with \"npm ls @strudel.cycles/core\".`,\n  );\n}\nglobalThis._strudelLoaded = true;\n","import { clean } from '../clean-stores/index.js'\n\nlet listenerQueue = []\n\nexport let notifyId = 0\n\nexport let atom = (initialValue, level) => {\n  let currentListeners\n  let nextListeners = []\n  let store = {\n    lc: 0,\n    l: level || 0,\n    value: initialValue,\n    set(data) {\n      store.value = data\n      store.notify()\n    },\n    get() {\n      if (!store.lc) {\n        store.listen(() => {})()\n      }\n      return store.value\n    },\n    notify(changedKey) {\n      currentListeners = nextListeners\n      let runListenerQueue = !listenerQueue.length\n      for (let i = 0; i < currentListeners.length; i += 2) {\n        listenerQueue.push(\n          currentListeners[i],\n          store.value,\n          changedKey,\n          currentListeners[i + 1]\n        )\n      }\n\n      if (runListenerQueue) {\n        notifyId++\n        for (let i = 0; i < listenerQueue.length; i += 4) {\n          let skip = false\n          for (let j = i + 7; j < listenerQueue.length; j += 4) {\n            if (listenerQueue[j] < listenerQueue[i + 3]) {\n              skip = true\n              break\n            }\n          }\n\n          if (skip) {\n            listenerQueue.push(\n              listenerQueue[i],\n              listenerQueue[i + 1],\n              listenerQueue[i + 2],\n              listenerQueue[i + 3]\n            )\n          } else {\n            listenerQueue[i](listenerQueue[i + 1], listenerQueue[i + 2])\n          }\n        }\n        listenerQueue.length = 0\n      }\n    },\n    listen(listener, listenerLevel) {\n      if (nextListeners === currentListeners) {\n        nextListeners = nextListeners.slice()\n      }\n\n      store.lc = nextListeners.push(listener, listenerLevel || store.l) / 2\n\n      return () => {\n        if (nextListeners === currentListeners) {\n          nextListeners = nextListeners.slice()\n        }\n        let index = nextListeners.indexOf(listener)\n        if (~index) {\n          nextListeners.splice(index, 2)\n          store.lc--\n          if (!store.lc) store.off()\n        }\n      }\n    },\n    subscribe(cb, listenerLevel) {\n      let unbind = store.listen(cb, listenerLevel)\n      cb(store.value)\n      return unbind\n    },\n    off() {} /* It will be called on last listener unsubscribing.\n                We will redefine it in onMount and onStop. */\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    store[clean] = () => {\n      nextListeners = []\n      store.lc = 0\n      store.off()\n    }\n  }\n\n  return store\n}\n","import { atom } from '../atom/index.js'\n\nexport let map = (value = {}) => {\n  let store = atom(value)\n\n  store.setKey = function (key, newValue) {\n    if (typeof newValue === 'undefined') {\n      if (key in store.value) {\n        store.value = { ...store.value }\n        delete store.value[key]\n        store.notify(key)\n      }\n    } else if (store.value[key] !== newValue) {\n      store.value = {\n        ...store.value,\n        [key]: newValue\n      }\n      store.notify(key)\n    }\n  }\n\n  return store\n}\n"],"names":["root","MAX_CYCLE_LEN","P","assign","n","s","Fraction","newFraction","d","f","a","gcd","factorize","num","factors","i","parse","p1","p2","v","w","x","y","z","A","B","C","D","N","M","modpow","b","e","m","r","cycleLen","rem","t","cycleStart","len","rem1","rem2","places","k","eps","thisABS","cont","excludeWhole","whole","str","res","dec","cycLen","cycOff","module","TimeSpan","other","fraction","fractions","begin","end","spans","end_sam","next_begin","func_time","sam","intersect_begin","intersect_end","result","Hap","part","value","context","stateful","func","state","newState","newValue","compact","is_whole","State","span","controls","isNoteWithOctave","name","isNote","tokenizeNote","note","pc","acc","oct","chromas","accs","noteToMidi","defaultOctave","chroma","offset","o","char","midiToFreq","freqToMidi","freq","valueToMidi","fallbackValue","getFreq","noteOrMidi","pcs","midi2note","_mod","getPlayableNoteValue","hap","getFrequency","rotate","arr","pipe","funcs","g","args","compose","removeUndefineds","xs","flatten","id","constant","listRange","min","max","_","curry","overload","arity","fn","curried","partial","args2","parseNumeral","numOrString","asNumber","mapArgs","mapFn","numeralArgs","parseFractional","specialValue","fractionalArgs","splitAt","index","zipWith","ys","clamp","solfeggio","indian","german","byzantine","japanese","english","sol2note","notation","unicodeToBase64","text","utf8Bytes","base64ToUnicode","base64String","code2hash","code","hash2code","hash","unionWithObj","numKeys","numerals","common","anyFunctor","drawLine","pat","chars","cycle","pos","lines","emptyLine","haps","durations","charFraction","totalSlots","line","matches","missingLines","logKey","logger","message","type","data","stringParser","setStringParser","parser","Pattern","query","whole_func","pat_val","pat_func","hap_funcs","hap_vals","apply","hap_func","hap_val","span_a","span_b","new_whole","new_part","new_value","new_context","choose_whole","withWhole","match","cycleZero","pat_of_pats","outer_hap","inner_hap","flatHap","outerHap","innerHaps","munge","outer","inner","innerHap","err","q","subspan","start","location","locations","hap_test","value_test","val","searching","a_value","found","j","with_context","self","reify","otherPat","thisPat","stack","pats","sequence","cat","fastcat","slowcat","onTrigger","dominant","getData","groupHapsBy","eq","groups","congruent","_haps","h","_composeOp","_nonFunctionObject","composers","hows","what","op","preprocess","wrapper","how","howpat","polyrhythm","pr","pm","polymeter","pure","timeCat","seq","silence","isPattern","thing","pat_n","slowcatPrime","timepats","total","time","arrange","sections","sum","cycles","section","_sequenceCount","polymeterSteps","steps","seqs","mask","struct","superimpose","set","keep","keepif","add","sub","mul","div","mod","pow","band","bor","bxor","blshift","brshift","lt","gt","lte","gte","eqt","ne","net","and","or","register","patternify","name_item","pfunc","left","right","p","round","floor","ceil","toBipolar","fromBipolar","range","rangex","range2","ratio","compress","compressSpan","compressspan","fastGap","fastgap","factor","qf","bpos","epos","ef","beginPos","endPos","newPart","newWhole","focus","focusSpan","focusspan","ply","fast","density","hurry","slow","sparsity","inside","outside","lastOf","firstOf","every","cpm","early","late","zoom","zoomArc","zoomarc","linger","segment","rate","invert","inv","when","on","off","time_pat","brak","rev","next_cycle","reflect","to_reflect","reflected","tmp","pressBy","press","palindrome","juxBy","juxby","by","elem_or","dict","key","dflt","jux","echoWith","echowith","stutWith","stutwith","times","echo","feedback","stut","_iter","back","iter","iterBack","iterback","_repeatCycles","_chunk","binary","binary_pat","chunkBack","chunkback","bypass","ribbon","duration","hsla","l","hsl","color","colour","velocity","legato","chop","slice_objects","slice_o","striate","slicePat","_loopAt","cps","slice","npat","ipat","opat","splice","loopAt","loopat","fit","loopAtCps","loopatcps","ref","accessor","fadeGain","xfade","gaina","gainb","generic_params","names","withVal","setter","aliases","alias","adsr","attack","decay","sustain","release","ds","ons","offs","_xs","__xs","_ys","__ys","_bjork","bjork","_euclidRot","pulses","rotation","euclid","euclidrot","euclidRot","_euclidLegato","gapless","euclidLegato","euclidLegatoRot","steady","signal","isaw","isaw2","saw","saw2","sine2","sine","cosine","cosine2","square","square2","tri","tri2","xorwise","_frac","timeToIntSeed","intSeedToRand","timeToRand","run","rand","rand2","_brandBy","brandBy","pPat","brand","_irand","irand","pick","squeeze","__chooseWith","chooseWith","chooseInWith","choose","chooseCycles","randcat","_wchooseWith","pairs","values","pair","weights","accum","find","wchooseWith","wchoose","wchooseCycles","perlinWith","pata","patb","smootherStep","interp","perlin","degradeByWith","withPat","degradeBy","degrade","undegradeBy","undegrade","sometimesBy","patx","sometimes","someCyclesBy","someCycles","often","rarely","almostNever","almostAlways","never","always","synth","allVoices","triggerSpeech","words","lang","voice","utterance","voices","speak","evalScope","results","modules","safeEval","options","wrapExpression","wrapAsync","body","evaluate","transpiler","meta","transpiled","createClock","getTime","callback","interval","overlap","tick","phase","precision","minLatency","setDuration","onTick","lookahead","intervalID","clear","Cyclist","onToggle","onError","latency","eventLength","tickdeadline","deadline","that","secondsSinceLastTick","autostart","onsets","setTime","repl","defaultOutput","onSchedulerError","onEvalError","beforeEval","afterEval","editPattern","onUpdateState","updateState","update","scheduler","getTrigger","started","pPatterns","allTransform","hush","setPattern","pattern","shouldHush","_evaluate","stop","pause","toggle","setCps","setCpm","all","transform","getDrawContext","canvas","timeout","from","to","onQuery","ctx","events","animate","currentCycle","event","cleanupDraw","clearScreen","onPaint","Framer","onFrame","frame","updateHighlights","Drawer","onDraw","drawTime","lookbehind","futureHaps","createParams","clearColor","sync","smear","ww","wh","smearPart","render","angle","fill","radians","cx","cy","rescale","moveXY","dx","dy","zoomIn","scale","normalized","getValue","playhead","overscan","hideNegative","inFrame","pianoroll","flipTime","flipValues","inactive","active","background","playheadColor","minMidi","maxMidi","autorange","timeframeProp","fold","vertical","labels","fillActive","strokeActive","stroke","hideInactive","colorizeInactive","fontFamily","timeAxis","valueAxis","timeRange","timeExtent","valueRange","valueExtent","barThickness","foldValues","isActive","strokeCurrent","fillCurrent","timeProgress","timePx","durationPx","valueProgress","valuePx","margin","coords","defaultLabel","inactiveLabel","activeLabel","label","measure","playheadPosition","getDrawOptions","getPunchcardPainter","paintOptions","drawPianoroll","rest","fromPolar","radius","xyOnSpiral","spiralSegment","thickness","cap","stretch","fromOpacity","toOpacity","sx","sy","increment","size","inset","playheadLength","playheadThickness","padding","inactiveColor","fade","spiral","settings","opacity","animationTime","backgroundImage","src","animateOptions","container","bg","initialClassName","handleOption","option","funcOptions","cleanupUi","listenerQueue","atom","initialValue","level","currentListeners","nextListeners","store","changedKey","runListenerQueue","skip","listener","listenerLevel","cb","unbind","map"],"mappings":"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","x_google_ignoreList":[0,25,26]}