{"version":3,"file":"index.a960f6ae.js","sources":["../../../node_modules/.pnpm/@tonaljs+core@4.10.0/node_modules/@tonaljs/core/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+abc-notation@4.8.0/node_modules/@tonaljs/abc-notation/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+array@4.8.0/node_modules/@tonaljs/array/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+collection@4.8.0/node_modules/@tonaljs/collection/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+pcset@4.8.1/node_modules/@tonaljs/pcset/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+chord-type@4.8.0/node_modules/@tonaljs/chord-type/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+chord-detect@4.8.0/node_modules/@tonaljs/chord-detect/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+scale-type@4.8.1/node_modules/@tonaljs/scale-type/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+chord@4.10.0/node_modules/@tonaljs/chord/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+duration-value@4.8.0/node_modules/@tonaljs/duration-value/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+interval@4.8.0/node_modules/@tonaljs/interval/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+midi@4.9.0/node_modules/@tonaljs/midi/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+note@4.10.0/node_modules/@tonaljs/note/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+roman-numeral@4.8.0/node_modules/@tonaljs/roman-numeral/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+key@4.9.1/node_modules/@tonaljs/key/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+mode@4.8.0/node_modules/@tonaljs/mode/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+progression@4.8.0/node_modules/@tonaljs/progression/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+range@4.8.1/node_modules/@tonaljs/range/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+scale@4.12.0/node_modules/@tonaljs/scale/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+time-signature@4.8.0/node_modules/@tonaljs/time-signature/dist/index.mjs","../../../node_modules/.pnpm/@tonaljs+tonal@4.10.0/node_modules/@tonaljs/tonal/dist/index.mjs","../../../packages/tonal/tonal.mjs","../../../packages/tonal/tonleiter.mjs","../../../node_modules/.pnpm/chord-voicings@0.0.1/node_modules/chord-voicings/dist/getBestVoicing.js","../../../node_modules/.pnpm/chord-voicings@0.0.1/node_modules/chord-voicings/dist/tokenizeChord.js","../../../node_modules/.pnpm/chord-voicings@0.0.1/node_modules/chord-voicings/dist/voicingsInRange.js","../../../node_modules/.pnpm/chord-voicings@0.0.1/node_modules/chord-voicings/dist/dictionaryVoicing.js","../../../node_modules/.pnpm/chord-voicings@0.0.1/node_modules/chord-voicings/dist/minTopNoteDiff.js","../../../node_modules/.pnpm/chord-voicings@0.0.1/node_modules/chord-voicings/dist/index.js","../../../packages/tonal/ireal.mjs","../../../packages/tonal/voicings.mjs"],"sourcesContent":["// src/utils.ts\nvar fillStr = (s, n) => Array(Math.abs(n) + 1).join(s);\nfunction deprecate(original, alternative, fn) {\n  return function(...args) {\n    console.warn(`${original} is deprecated. Use ${alternative}.`);\n    return fn.apply(this, args);\n  };\n}\n\n// src/named.ts\nfunction isNamed(src) {\n  return src !== null && typeof src === \"object\" && typeof src.name === \"string\" ? true : false;\n}\n\n// src/pitch.ts\nfunction isPitch(pitch) {\n  return pitch !== null && typeof pitch === \"object\" && typeof pitch.step === \"number\" && typeof pitch.alt === \"number\" ? true : false;\n}\nvar FIFTHS = [0, 2, 4, -1, 1, 3, 5];\nvar STEPS_TO_OCTS = FIFTHS.map(\n  (fifths) => Math.floor(fifths * 7 / 12)\n);\nfunction encode(pitch) {\n  const { step, alt, oct, dir = 1 } = pitch;\n  const f = FIFTHS[step] + 7 * alt;\n  if (oct === void 0) {\n    return [dir * f];\n  }\n  const o = oct - STEPS_TO_OCTS[step] - 4 * alt;\n  return [dir * f, dir * o];\n}\nvar FIFTHS_TO_STEPS = [3, 0, 4, 1, 5, 2, 6];\nfunction decode(coord) {\n  const [f, o, dir] = coord;\n  const step = FIFTHS_TO_STEPS[unaltered(f)];\n  const alt = Math.floor((f + 1) / 7);\n  if (o === void 0) {\n    return { step, alt, dir };\n  }\n  const oct = o + 4 * alt + STEPS_TO_OCTS[step];\n  return { step, alt, oct, dir };\n}\nfunction unaltered(f) {\n  const i = (f + 1) % 7;\n  return i < 0 ? 7 + i : i;\n}\n\n// src/note.ts\nvar NoNote = { empty: true, name: \"\", pc: \"\", acc: \"\" };\nvar cache = /* @__PURE__ */ new Map();\nvar stepToLetter = (step) => \"CDEFGAB\".charAt(step);\nvar altToAcc = (alt) => alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\nvar accToAlt = (acc) => acc[0] === \"b\" ? -acc.length : acc.length;\nfunction note(src) {\n  const stringSrc = JSON.stringify(src);\n  const cached = cache.get(stringSrc);\n  if (cached) {\n    return cached;\n  }\n  const value = typeof src === \"string\" ? parse(src) : isPitch(src) ? note(pitchName(src)) : isNamed(src) ? note(src.name) : NoNote;\n  cache.set(stringSrc, value);\n  return value;\n}\nvar REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\nfunction tokenizeNote(str) {\n  const m = REGEX.exec(str);\n  return [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]];\n}\nfunction coordToNote(noteCoord) {\n  return note(decode(noteCoord));\n}\nvar mod = (n, m) => (n % m + m) % m;\nvar SEMI = [0, 2, 4, 5, 7, 9, 11];\nfunction parse(noteName) {\n  const tokens = tokenizeNote(noteName);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") {\n    return NoNote;\n  }\n  const letter = tokens[0];\n  const acc = tokens[1];\n  const octStr = tokens[2];\n  const step = (letter.charCodeAt(0) + 3) % 7;\n  const alt = accToAlt(acc);\n  const oct = octStr.length ? +octStr : void 0;\n  const coord = encode({ step, alt, oct });\n  const name = letter + acc + octStr;\n  const pc = letter + acc;\n  const chroma = (SEMI[step] + alt + 120) % 12;\n  const height = oct === void 0 ? mod(SEMI[step] + alt, 12) - 12 * 99 : SEMI[step] + alt + 12 * (oct + 1);\n  const midi = height >= 0 && height <= 127 ? height : null;\n  const freq = oct === void 0 ? null : Math.pow(2, (height - 69) / 12) * 440;\n  return {\n    empty: false,\n    acc,\n    alt,\n    chroma,\n    coord,\n    freq,\n    height,\n    letter,\n    midi,\n    name,\n    oct,\n    pc,\n    step\n  };\n}\nfunction pitchName(props) {\n  const { step, alt, oct } = props;\n  const letter = stepToLetter(step);\n  if (!letter) {\n    return \"\";\n  }\n  const pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n}\n\n// src/interval.ts\nvar NoInterval = { empty: true, name: \"\", acc: \"\" };\nvar INTERVAL_TONAL_REGEX = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\nvar INTERVAL_SHORTHAND_REGEX = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\nvar REGEX2 = new RegExp(\n  \"^\" + INTERVAL_TONAL_REGEX + \"|\" + INTERVAL_SHORTHAND_REGEX + \"$\"\n);\nfunction tokenizeInterval(str) {\n  const m = REGEX2.exec(`${str}`);\n  if (m === null) {\n    return [\"\", \"\"];\n  }\n  return m[1] ? [m[1], m[2]] : [m[4], m[3]];\n}\nvar cache2 = {};\nfunction interval(src) {\n  return typeof src === \"string\" ? cache2[src] || (cache2[src] = parse2(src)) : isPitch(src) ? interval(pitchName2(src)) : isNamed(src) ? interval(src.name) : NoInterval;\n}\nvar SIZES = [0, 2, 4, 5, 7, 9, 11];\nvar TYPES = \"PMMPPMM\";\nfunction parse2(str) {\n  const tokens = tokenizeInterval(str);\n  if (tokens[0] === \"\") {\n    return NoInterval;\n  }\n  const num = +tokens[0];\n  const q = tokens[1];\n  const step = (Math.abs(num) - 1) % 7;\n  const t = TYPES[step];\n  if (t === \"M\" && q === \"P\") {\n    return NoInterval;\n  }\n  const type = t === \"M\" ? \"majorable\" : \"perfectable\";\n  const name = \"\" + num + q;\n  const dir = num < 0 ? -1 : 1;\n  const simple = num === 8 || num === -8 ? num : dir * (step + 1);\n  const alt = qToAlt(type, q);\n  const oct = Math.floor((Math.abs(num) - 1) / 7);\n  const semitones = dir * (SIZES[step] + alt + 12 * oct);\n  const chroma = (dir * (SIZES[step] + alt) % 12 + 12) % 12;\n  const coord = encode({ step, alt, oct, dir });\n  return {\n    empty: false,\n    name,\n    num,\n    q,\n    step,\n    alt,\n    dir,\n    type,\n    simple,\n    semitones,\n    chroma,\n    coord,\n    oct\n  };\n}\nfunction coordToInterval(coord, forceDescending) {\n  const [f, o = 0] = coord;\n  const isDescending = f * 7 + o * 12 < 0;\n  const ivl = forceDescending || isDescending ? [-f, -o, -1] : [f, o, 1];\n  return interval(decode(ivl));\n}\nfunction qToAlt(type, q) {\n  return q === \"M\" && type === \"majorable\" || q === \"P\" && type === \"perfectable\" ? 0 : q === \"m\" && type === \"majorable\" ? -1 : /^A+$/.test(q) ? q.length : /^d+$/.test(q) ? -1 * (type === \"perfectable\" ? q.length : q.length + 1) : 0;\n}\nfunction pitchName2(props) {\n  const { step, alt, oct = 0, dir } = props;\n  if (!dir) {\n    return \"\";\n  }\n  const calcNum = step + 1 + 7 * oct;\n  const num = calcNum === 0 ? step + 1 : calcNum;\n  const d = dir < 0 ? \"-\" : \"\";\n  const type = TYPES[step] === \"M\" ? \"majorable\" : \"perfectable\";\n  const name = d + num + altToQ(type, alt);\n  return name;\n}\nfunction altToQ(type, alt) {\n  if (alt === 0) {\n    return type === \"majorable\" ? \"M\" : \"P\";\n  } else if (alt === -1 && type === \"majorable\") {\n    return \"m\";\n  } else if (alt > 0) {\n    return fillStr(\"A\", alt);\n  } else {\n    return fillStr(\"d\", type === \"perfectable\" ? alt : alt + 1);\n  }\n}\n\n// src/distance.ts\nfunction transpose(noteName, intervalName) {\n  const note2 = note(noteName);\n  const intervalCoord = Array.isArray(intervalName) ? intervalName : interval(intervalName).coord;\n  if (note2.empty || !intervalCoord || intervalCoord.length < 2) {\n    return \"\";\n  }\n  const noteCoord = note2.coord;\n  const tr = noteCoord.length === 1 ? [noteCoord[0] + intervalCoord[0]] : [noteCoord[0] + intervalCoord[0], noteCoord[1] + intervalCoord[1]];\n  return coordToNote(tr).name;\n}\nfunction tonicIntervalsTransposer(intervals, tonic) {\n  const len = intervals.length;\n  return (normalized) => {\n    if (!tonic)\n      return \"\";\n    const index = normalized < 0 ? (len - -normalized % len) % len : normalized % len;\n    const octaves = Math.floor(normalized / len);\n    const root = transpose(tonic, [0, octaves]);\n    return transpose(root, intervals[index]);\n  };\n}\nfunction distance(fromNote, toNote) {\n  const from = note(fromNote);\n  const to = note(toNote);\n  if (from.empty || to.empty) {\n    return \"\";\n  }\n  const fcoord = from.coord;\n  const tcoord = to.coord;\n  const fifths = tcoord[0] - fcoord[0];\n  const octs = fcoord.length === 2 && tcoord.length === 2 ? tcoord[1] - fcoord[1] : -Math.floor(fifths * 7 / 12);\n  const forceDescending = to.height === from.height && to.midi !== null && from.midi !== null && from.step > to.step;\n  return coordToInterval([fifths, octs], forceDescending).name;\n}\nexport {\n  accToAlt,\n  altToAcc,\n  coordToInterval,\n  coordToNote,\n  decode,\n  deprecate,\n  distance,\n  encode,\n  fillStr,\n  interval,\n  isNamed,\n  isPitch,\n  note,\n  stepToLetter,\n  tokenizeInterval,\n  tokenizeNote,\n  tonicIntervalsTransposer,\n  transpose\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { distance as dist, note, transpose as tr } from \"@tonaljs/core\";\nvar fillStr = (character, times) => Array(times + 1).join(character);\nvar REGEX = /^(_{1,}|=|\\^{1,}|)([abcdefgABCDEFG])([,']*)$/;\nfunction tokenize(str) {\n  const m = REGEX.exec(str);\n  if (!m) {\n    return [\"\", \"\", \"\"];\n  }\n  return [m[1], m[2], m[3]];\n}\nfunction abcToScientificNotation(str) {\n  const [acc, letter, oct] = tokenize(str);\n  if (letter === \"\") {\n    return \"\";\n  }\n  let o = 4;\n  for (let i = 0; i < oct.length; i++) {\n    o += oct.charAt(i) === \",\" ? -1 : 1;\n  }\n  const a = acc[0] === \"_\" ? acc.replace(/_/g, \"b\") : acc[0] === \"^\" ? acc.replace(/\\^/g, \"#\") : \"\";\n  return letter.charCodeAt(0) > 96 ? letter.toUpperCase() + a + (o + 1) : letter + a + o;\n}\nfunction scientificToAbcNotation(str) {\n  const n = note(str);\n  if (n.empty || !n.oct && n.oct !== 0) {\n    return \"\";\n  }\n  const { letter, acc, oct } = n;\n  const a = acc[0] === \"b\" ? acc.replace(/b/g, \"_\") : acc.replace(/#/g, \"^\");\n  const l = oct > 4 ? letter.toLowerCase() : letter;\n  const o = oct === 5 ? \"\" : oct > 4 ? fillStr(\"'\", oct - 5) : fillStr(\",\", 4 - oct);\n  return a + l + o;\n}\nfunction transpose(note2, interval) {\n  return scientificToAbcNotation(tr(abcToScientificNotation(note2), interval));\n}\nfunction distance(from, to) {\n  return dist(abcToScientificNotation(from), abcToScientificNotation(to));\n}\nvar abc_notation_default = {\n  abcToScientificNotation,\n  scientificToAbcNotation,\n  tokenize,\n  transpose,\n  distance\n};\nexport {\n  abcToScientificNotation,\n  abc_notation_default as default,\n  distance,\n  scientificToAbcNotation,\n  tokenize,\n  transpose\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { note } from \"@tonaljs/core\";\nvar isArray = Array.isArray;\nfunction ascR(b, n) {\n  const a = [];\n  for (; n--; a[n] = n + b)\n    ;\n  return a;\n}\nfunction descR(b, n) {\n  const a = [];\n  for (; n--; a[n] = b - n)\n    ;\n  return a;\n}\nfunction range(from, to) {\n  return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\n}\nfunction rotate(times, arr) {\n  const len = arr.length;\n  const n = (times % len + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\nfunction compact(arr) {\n  return arr.filter((n) => n === 0 || n);\n}\nfunction sortedNoteNames(notes) {\n  const valid = notes.map((n) => note(n)).filter((n) => !n.empty);\n  return valid.sort((a, b) => a.height - b.height).map((n) => n.name);\n}\nfunction sortedUniqNoteNames(arr) {\n  return sortedNoteNames(arr).filter((n, i, a) => i === 0 || n !== a[i - 1]);\n}\nfunction shuffle(arr, rnd = Math.random) {\n  let i;\n  let t;\n  let m = arr.length;\n  while (m) {\n    i = Math.floor(rnd() * m--);\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n}\nfunction permutations(arr) {\n  if (arr.length === 0) {\n    return [[]];\n  }\n  return permutations(arr.slice(1)).reduce((acc, perm) => {\n    return acc.concat(\n      arr.map((e, pos) => {\n        const newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n}\nexport {\n  compact,\n  permutations,\n  range,\n  rotate,\n  shuffle,\n  sortedNoteNames,\n  sortedUniqNoteNames\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nfunction ascR(b, n) {\n  const a = [];\n  for (; n--; a[n] = n + b)\n    ;\n  return a;\n}\nfunction descR(b, n) {\n  const a = [];\n  for (; n--; a[n] = b - n)\n    ;\n  return a;\n}\nfunction range(from, to) {\n  return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\n}\nfunction rotate(times, arr) {\n  const len = arr.length;\n  const n = (times % len + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\nfunction compact(arr) {\n  return arr.filter((n) => n === 0 || n);\n}\nfunction shuffle(arr, rnd = Math.random) {\n  let i;\n  let t;\n  let m = arr.length;\n  while (m) {\n    i = Math.floor(rnd() * m--);\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n}\nfunction permutations(arr) {\n  if (arr.length === 0) {\n    return [[]];\n  }\n  return permutations(arr.slice(1)).reduce((acc, perm) => {\n    return acc.concat(\n      arr.map((e, pos) => {\n        const newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n}\nvar collection_default = {\n  compact,\n  permutations,\n  range,\n  rotate,\n  shuffle\n};\nexport {\n  compact,\n  collection_default as default,\n  permutations,\n  range,\n  rotate,\n  shuffle\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { compact, range, rotate } from \"@tonaljs/collection\";\nimport {\n  deprecate,\n  interval,\n  note\n} from \"@tonaljs/core\";\nvar EmptyPcset = {\n  empty: true,\n  name: \"\",\n  setNum: 0,\n  chroma: \"000000000000\",\n  normalized: \"000000000000\",\n  intervals: []\n};\nvar setNumToChroma = (num2) => Number(num2).toString(2);\nvar chromaToNumber = (chroma2) => parseInt(chroma2, 2);\nvar REGEX = /^[01]{12}$/;\nfunction isChroma(set) {\n  return REGEX.test(set);\n}\nvar isPcsetNum = (set) => typeof set === \"number\" && set >= 0 && set <= 4095;\nvar isPcset = (set) => set && isChroma(set.chroma);\nvar cache = { [EmptyPcset.chroma]: EmptyPcset };\nfunction get(src) {\n  const chroma2 = isChroma(src) ? src : isPcsetNum(src) ? setNumToChroma(src) : Array.isArray(src) ? listToChroma(src) : isPcset(src) ? src.chroma : EmptyPcset.chroma;\n  return cache[chroma2] = cache[chroma2] || chromaToPcset(chroma2);\n}\nvar pcset = deprecate(\"Pcset.pcset\", \"Pcset.get\", get);\nvar chroma = (set) => get(set).chroma;\nvar intervals = (set) => get(set).intervals;\nvar num = (set) => get(set).setNum;\nvar IVLS = [\n  \"1P\",\n  \"2m\",\n  \"2M\",\n  \"3m\",\n  \"3M\",\n  \"4P\",\n  \"5d\",\n  \"5P\",\n  \"6m\",\n  \"6M\",\n  \"7m\",\n  \"7M\"\n];\nfunction chromaToIntervals(chroma2) {\n  const intervals2 = [];\n  for (let i = 0; i < 12; i++) {\n    if (chroma2.charAt(i) === \"1\")\n      intervals2.push(IVLS[i]);\n  }\n  return intervals2;\n}\nfunction chromas() {\n  return range(2048, 4095).map(setNumToChroma);\n}\nfunction modes(set, normalize = true) {\n  const pcs = get(set);\n  const binary = pcs.chroma.split(\"\");\n  return compact(\n    binary.map((_, i) => {\n      const r = rotate(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    })\n  );\n}\nfunction isEqual(s1, s2) {\n  return get(s1).setNum === get(s2).setNum;\n}\nfunction isSubsetOf(set) {\n  const s = get(set).setNum;\n  return (notes) => {\n    const o = get(notes).setNum;\n    return s && s !== o && (o & s) === o;\n  };\n}\nfunction isSupersetOf(set) {\n  const s = get(set).setNum;\n  return (notes) => {\n    const o = get(notes).setNum;\n    return s && s !== o && (o | s) === o;\n  };\n}\nfunction isNoteIncludedIn(set) {\n  const s = get(set);\n  return (noteName) => {\n    const n = note(noteName);\n    return s && !n.empty && s.chroma.charAt(n.chroma) === \"1\";\n  };\n}\nvar includes = isNoteIncludedIn;\nfunction filter(set) {\n  const isIncluded = isNoteIncludedIn(set);\n  return (notes) => {\n    return notes.filter(isIncluded);\n  };\n}\nvar pcset_default = {\n  get,\n  chroma,\n  num,\n  intervals,\n  chromas,\n  isSupersetOf,\n  isSubsetOf,\n  isNoteIncludedIn,\n  isEqual,\n  filter,\n  modes,\n  pcset\n};\nfunction chromaRotations(chroma2) {\n  const binary = chroma2.split(\"\");\n  return binary.map((_, i) => rotate(i, binary).join(\"\"));\n}\nfunction chromaToPcset(chroma2) {\n  const setNum = chromaToNumber(chroma2);\n  const normalizedNum = chromaRotations(chroma2).map(chromaToNumber).filter((n) => n >= 2048).sort()[0];\n  const normalized = setNumToChroma(normalizedNum);\n  const intervals2 = chromaToIntervals(chroma2);\n  return {\n    empty: false,\n    name: \"\",\n    setNum,\n    chroma: chroma2,\n    normalized,\n    intervals: intervals2\n  };\n}\nfunction listToChroma(set) {\n  if (set.length === 0) {\n    return EmptyPcset.chroma;\n  }\n  let pitch;\n  const binary = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  for (let i = 0; i < set.length; i++) {\n    pitch = note(set[i]);\n    if (pitch.empty)\n      pitch = interval(set[i]);\n    if (!pitch.empty)\n      binary[pitch.chroma] = 1;\n  }\n  return binary.join(\"\");\n}\nexport {\n  EmptyPcset,\n  chroma,\n  chromaToIntervals,\n  chromas,\n  pcset_default as default,\n  filter,\n  get,\n  includes,\n  isChroma,\n  isEqual,\n  isNoteIncludedIn,\n  isSubsetOf,\n  isSupersetOf,\n  modes,\n  pcset\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { deprecate } from \"@tonaljs/core\";\nimport {\n  EmptyPcset,\n  get as pcset\n} from \"@tonaljs/pcset\";\n\n// data.ts\nvar CHORDS = [\n  [\"1P 3M 5P\", \"major\", \"M ^  maj\"],\n  [\"1P 3M 5P 7M\", \"major seventh\", \"maj7 \\u0394 ma7 M7 Maj7 ^7\"],\n  [\"1P 3M 5P 7M 9M\", \"major ninth\", \"maj9 \\u03949 ^9\"],\n  [\"1P 3M 5P 7M 9M 13M\", \"major thirteenth\", \"maj13 Maj13 ^13\"],\n  [\"1P 3M 5P 6M\", \"sixth\", \"6 add6 add13 M6\"],\n  [\"1P 3M 5P 6M 9M\", \"sixth/ninth\", \"6/9 69 M69\"],\n  [\"1P 3M 6m 7M\", \"major seventh flat sixth\", \"M7b6 ^7b6\"],\n  [\n    \"1P 3M 5P 7M 11A\",\n    \"major seventh sharp eleventh\",\n    \"maj#4 \\u0394#4 \\u0394#11 M7#11 ^7#11 maj7#11\"\n  ],\n  [\"1P 3m 5P\", \"minor\", \"m min -\"],\n  [\"1P 3m 5P 7m\", \"minor seventh\", \"m7 min7 mi7 -7\"],\n  [\n    \"1P 3m 5P 7M\",\n    \"minor/major seventh\",\n    \"m/ma7 m/maj7 mM7 mMaj7 m/M7 -\\u03947 m\\u0394 -^7\"\n  ],\n  [\"1P 3m 5P 6M\", \"minor sixth\", \"m6 -6\"],\n  [\"1P 3m 5P 7m 9M\", \"minor ninth\", \"m9 -9\"],\n  [\"1P 3m 5P 7M 9M\", \"minor/major ninth\", \"mM9 mMaj9 -^9\"],\n  [\"1P 3m 5P 7m 9M 11P\", \"minor eleventh\", \"m11 -11\"],\n  [\"1P 3m 5P 7m 9M 13M\", \"minor thirteenth\", \"m13 -13\"],\n  [\"1P 3m 5d\", \"diminished\", \"dim \\xB0 o\"],\n  [\"1P 3m 5d 7d\", \"diminished seventh\", \"dim7 \\xB07 o7\"],\n  [\"1P 3m 5d 7m\", \"half-diminished\", \"m7b5 \\xF8 -7b5 h7 h\"],\n  [\"1P 3M 5P 7m\", \"dominant seventh\", \"7 dom\"],\n  [\"1P 3M 5P 7m 9M\", \"dominant ninth\", \"9\"],\n  [\"1P 3M 5P 7m 9M 13M\", \"dominant thirteenth\", \"13\"],\n  [\"1P 3M 5P 7m 11A\", \"lydian dominant seventh\", \"7#11 7#4\"],\n  [\"1P 3M 5P 7m 9m\", \"dominant flat ninth\", \"7b9\"],\n  [\"1P 3M 5P 7m 9A\", \"dominant sharp ninth\", \"7#9\"],\n  [\"1P 3M 7m 9m\", \"altered\", \"alt7\"],\n  [\"1P 4P 5P\", \"suspended fourth\", \"sus4 sus\"],\n  [\"1P 2M 5P\", \"suspended second\", \"sus2\"],\n  [\"1P 4P 5P 7m\", \"suspended fourth seventh\", \"7sus4 7sus\"],\n  [\"1P 5P 7m 9M 11P\", \"eleventh\", \"11\"],\n  [\n    \"1P 4P 5P 7m 9m\",\n    \"suspended fourth flat ninth\",\n    \"b9sus phryg 7b9sus 7b9sus4\"\n  ],\n  [\"1P 5P\", \"fifth\", \"5\"],\n  [\"1P 3M 5A\", \"augmented\", \"aug + +5 ^#5\"],\n  [\"1P 3m 5A\", \"minor augmented\", \"m#5 -#5 m+\"],\n  [\"1P 3M 5A 7M\", \"augmented seventh\", \"maj7#5 maj7+5 +maj7 ^7#5\"],\n  [\n    \"1P 3M 5P 7M 9M 11A\",\n    \"major sharp eleventh (lydian)\",\n    \"maj9#11 \\u03949#11 ^9#11\"\n  ],\n  [\"1P 2M 4P 5P\", \"\", \"sus24 sus4add9\"],\n  [\"1P 3M 5A 7M 9M\", \"\", \"maj9#5 Maj9#5\"],\n  [\"1P 3M 5A 7m\", \"\", \"7#5 +7 7+ 7aug aug7\"],\n  [\"1P 3M 5A 7m 9A\", \"\", \"7#5#9 7#9#5 7alt\"],\n  [\"1P 3M 5A 7m 9M\", \"\", \"9#5 9+\"],\n  [\"1P 3M 5A 7m 9M 11A\", \"\", \"9#5#11\"],\n  [\"1P 3M 5A 7m 9m\", \"\", \"7#5b9 7b9#5\"],\n  [\"1P 3M 5A 7m 9m 11A\", \"\", \"7#5b9#11\"],\n  [\"1P 3M 5A 9A\", \"\", \"+add#9\"],\n  [\"1P 3M 5A 9M\", \"\", \"M#5add9 +add9\"],\n  [\"1P 3M 5P 6M 11A\", \"\", \"M6#11 M6b5 6#11 6b5\"],\n  [\"1P 3M 5P 6M 7M 9M\", \"\", \"M7add13\"],\n  [\"1P 3M 5P 6M 9M 11A\", \"\", \"69#11\"],\n  [\"1P 3m 5P 6M 9M\", \"\", \"m69 -69\"],\n  [\"1P 3M 5P 6m 7m\", \"\", \"7b6\"],\n  [\"1P 3M 5P 7M 9A 11A\", \"\", \"maj7#9#11\"],\n  [\"1P 3M 5P 7M 9M 11A 13M\", \"\", \"M13#11 maj13#11 M13+4 M13#4\"],\n  [\"1P 3M 5P 7M 9m\", \"\", \"M7b9\"],\n  [\"1P 3M 5P 7m 11A 13m\", \"\", \"7#11b13 7b5b13\"],\n  [\"1P 3M 5P 7m 13M\", \"\", \"7add6 67 7add13\"],\n  [\"1P 3M 5P 7m 9A 11A\", \"\", \"7#9#11 7b5#9 7#9b5\"],\n  [\"1P 3M 5P 7m 9A 11A 13M\", \"\", \"13#9#11\"],\n  [\"1P 3M 5P 7m 9A 11A 13m\", \"\", \"7#9#11b13\"],\n  [\"1P 3M 5P 7m 9A 13M\", \"\", \"13#9\"],\n  [\"1P 3M 5P 7m 9A 13m\", \"\", \"7#9b13\"],\n  [\"1P 3M 5P 7m 9M 11A\", \"\", \"9#11 9+4 9#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13M\", \"\", \"13#11 13+4 13#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13m\", \"\", \"9#11b13 9b5b13\"],\n  [\"1P 3M 5P 7m 9m 11A\", \"\", \"7b9#11 7b5b9 7b9b5\"],\n  [\"1P 3M 5P 7m 9m 11A 13M\", \"\", \"13b9#11\"],\n  [\"1P 3M 5P 7m 9m 11A 13m\", \"\", \"7b9b13#11 7b9#11b13 7b5b9b13\"],\n  [\"1P 3M 5P 7m 9m 13M\", \"\", \"13b9\"],\n  [\"1P 3M 5P 7m 9m 13m\", \"\", \"7b9b13\"],\n  [\"1P 3M 5P 7m 9m 9A\", \"\", \"7b9#9\"],\n  [\"1P 3M 5P 9M\", \"\", \"Madd9 2 add9 add2\"],\n  [\"1P 3M 5P 9m\", \"\", \"Maddb9\"],\n  [\"1P 3M 5d\", \"\", \"Mb5\"],\n  [\"1P 3M 5d 6M 7m 9M\", \"\", \"13b5\"],\n  [\"1P 3M 5d 7M\", \"\", \"M7b5\"],\n  [\"1P 3M 5d 7M 9M\", \"\", \"M9b5\"],\n  [\"1P 3M 5d 7m\", \"\", \"7b5\"],\n  [\"1P 3M 5d 7m 9M\", \"\", \"9b5\"],\n  [\"1P 3M 7m\", \"\", \"7no5\"],\n  [\"1P 3M 7m 13m\", \"\", \"7b13\"],\n  [\"1P 3M 7m 9M\", \"\", \"9no5\"],\n  [\"1P 3M 7m 9M 13M\", \"\", \"13no5\"],\n  [\"1P 3M 7m 9M 13m\", \"\", \"9b13\"],\n  [\"1P 3m 4P 5P\", \"\", \"madd4\"],\n  [\"1P 3m 5P 6m 7M\", \"\", \"mMaj7b6\"],\n  [\"1P 3m 5P 6m 7M 9M\", \"\", \"mMaj9b6\"],\n  [\"1P 3m 5P 7m 11P\", \"\", \"m7add11 m7add4\"],\n  [\"1P 3m 5P 9M\", \"\", \"madd9\"],\n  [\"1P 3m 5d 6M 7M\", \"\", \"o7M7\"],\n  [\"1P 3m 5d 7M\", \"\", \"oM7\"],\n  [\"1P 3m 6m 7M\", \"\", \"mb6M7\"],\n  [\"1P 3m 6m 7m\", \"\", \"m7#5\"],\n  [\"1P 3m 6m 7m 9M\", \"\", \"m9#5\"],\n  [\"1P 3m 5A 7m 9M 11P\", \"\", \"m11A\"],\n  [\"1P 3m 6m 9m\", \"\", \"mb6b9\"],\n  [\"1P 2M 3m 5d 7m\", \"\", \"m9b5\"],\n  [\"1P 4P 5A 7M\", \"\", \"M7#5sus4\"],\n  [\"1P 4P 5A 7M 9M\", \"\", \"M9#5sus4\"],\n  [\"1P 4P 5A 7m\", \"\", \"7#5sus4\"],\n  [\"1P 4P 5P 7M\", \"\", \"M7sus4\"],\n  [\"1P 4P 5P 7M 9M\", \"\", \"M9sus4\"],\n  [\"1P 4P 5P 7m 9M\", \"\", \"9sus4 9sus\"],\n  [\"1P 4P 5P 7m 9M 13M\", \"\", \"13sus4 13sus\"],\n  [\"1P 4P 5P 7m 9m 13m\", \"\", \"7sus4b9b13 7b9b13sus4\"],\n  [\"1P 4P 7m 10m\", \"\", \"4 quartal\"],\n  [\"1P 5P 7m 9m 11P\", \"\", \"11b9\"]\n];\nvar data_default = CHORDS;\n\n// index.ts\nvar NoChordType = {\n  ...EmptyPcset,\n  name: \"\",\n  quality: \"Unknown\",\n  intervals: [],\n  aliases: []\n};\nvar dictionary = [];\nvar index = {};\nfunction get(type) {\n  return index[type] || NoChordType;\n}\nvar chordType = deprecate(\"ChordType.chordType\", \"ChordType.get\", get);\nfunction names() {\n  return dictionary.map((chord) => chord.name).filter((x) => x);\n}\nfunction symbols() {\n  return dictionary.map((chord) => chord.aliases[0]).filter((x) => x);\n}\nfunction keys() {\n  return Object.keys(index);\n}\nfunction all() {\n  return dictionary.slice();\n}\nvar entries = deprecate(\"ChordType.entries\", \"ChordType.all\", all);\nfunction removeAll() {\n  dictionary = [];\n  index = {};\n}\nfunction add(intervals, aliases, fullName) {\n  const quality = getQuality(intervals);\n  const chord = {\n    ...pcset(intervals),\n    name: fullName || \"\",\n    quality,\n    intervals,\n    aliases\n  };\n  dictionary.push(chord);\n  if (chord.name) {\n    index[chord.name] = chord;\n  }\n  index[chord.setNum] = chord;\n  index[chord.chroma] = chord;\n  chord.aliases.forEach((alias) => addAlias(chord, alias));\n}\nfunction addAlias(chord, alias) {\n  index[alias] = chord;\n}\nfunction getQuality(intervals) {\n  const has = (interval) => intervals.indexOf(interval) !== -1;\n  return has(\"5A\") ? \"Augmented\" : has(\"3M\") ? \"Major\" : has(\"5d\") ? \"Diminished\" : has(\"3m\") ? \"Minor\" : \"Unknown\";\n}\ndata_default.forEach(\n  ([ivls, fullName, names2]) => add(ivls.split(\" \"), names2.split(\" \"), fullName)\n);\ndictionary.sort((a, b) => a.setNum - b.setNum);\nvar chord_type_default = {\n  names,\n  symbols,\n  get,\n  all,\n  add,\n  removeAll,\n  keys,\n  entries,\n  chordType\n};\nexport {\n  add,\n  addAlias,\n  all,\n  chordType,\n  chord_type_default as default,\n  entries,\n  get,\n  keys,\n  names,\n  removeAll,\n  symbols\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { all } from \"@tonaljs/chord-type\";\nimport { note } from \"@tonaljs/core\";\nimport { modes } from \"@tonaljs/pcset\";\nvar namedSet = (notes) => {\n  const pcToName = notes.reduce((record, n) => {\n    const chroma = note(n).chroma;\n    if (chroma !== void 0) {\n      record[chroma] = record[chroma] || note(n).name;\n    }\n    return record;\n  }, {});\n  return (chroma) => pcToName[chroma];\n};\nfunction detect(source, options = {}) {\n  const notes = source.map((n) => note(n).pc).filter((x) => x);\n  if (note.length === 0) {\n    return [];\n  }\n  const found = findMatches(notes, 1, options);\n  return found.filter((chord) => chord.weight).sort((a, b) => b.weight - a.weight).map((chord) => chord.name);\n}\nvar BITMASK = {\n  anyThirds: 384,\n  perfectFifth: 16,\n  nonPerfectFifths: 40,\n  anySeventh: 3\n};\nvar testChromaNumber = (bitmask) => (chromaNumber) => Boolean(chromaNumber & bitmask);\nvar hasAnyThird = testChromaNumber(BITMASK.anyThirds);\nvar hasPerfectFifth = testChromaNumber(BITMASK.perfectFifth);\nvar hasAnySeventh = testChromaNumber(BITMASK.anySeventh);\nvar hasNonPerfectFifth = testChromaNumber(BITMASK.nonPerfectFifths);\nfunction hasAnyThirdAndPerfectFifthAndAnySeventh(chordType) {\n  const chromaNumber = parseInt(chordType.chroma, 2);\n  return hasAnyThird(chromaNumber) && hasPerfectFifth(chromaNumber) && hasAnySeventh(chromaNumber);\n}\nfunction withPerfectFifth(chroma) {\n  const chromaNumber = parseInt(chroma, 2);\n  return hasNonPerfectFifth(chromaNumber) ? chroma : (chromaNumber | 16).toString(2);\n}\nfunction findMatches(notes, weight, options) {\n  const tonic = notes[0];\n  const tonicChroma = note(tonic).chroma;\n  const noteName = namedSet(notes);\n  const allModes = modes(notes, false);\n  const found = [];\n  allModes.forEach((mode, index) => {\n    const modeWithPerfectFifth = options.assumePerfectFifth && withPerfectFifth(mode);\n    const chordTypes = all().filter((chordType) => {\n      if (options.assumePerfectFifth && hasAnyThirdAndPerfectFifthAndAnySeventh(chordType)) {\n        return chordType.chroma === modeWithPerfectFifth;\n      }\n      return chordType.chroma === mode;\n    });\n    chordTypes.forEach((chordType) => {\n      const chordName = chordType.aliases[0];\n      const baseNote = noteName(index);\n      const isInversion = index !== tonicChroma;\n      if (isInversion) {\n        found.push({\n          weight: 0.5 * weight,\n          name: `${baseNote}${chordName}/${tonic}`\n        });\n      } else {\n        found.push({ weight: 1 * weight, name: `${baseNote}${chordName}` });\n      }\n    });\n  });\n  return found;\n}\nvar chord_detect_default = { detect };\nexport {\n  chord_detect_default as default,\n  detect\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { deprecate } from \"@tonaljs/core\";\nimport {\n  EmptyPcset,\n  get as pcset\n} from \"@tonaljs/pcset\";\n\n// data.ts\nvar SCALES = [\n  [\"1P 2M 3M 5P 6M\", \"major pentatonic\", \"pentatonic\"],\n  [\"1P 2M 3M 4P 5P 6M 7M\", \"major\", \"ionian\"],\n  [\"1P 2M 3m 4P 5P 6m 7m\", \"minor\", \"aeolian\"],\n  [\"1P 2M 3m 3M 5P 6M\", \"major blues\"],\n  [\"1P 3m 4P 5d 5P 7m\", \"minor blues\", \"blues\"],\n  [\"1P 2M 3m 4P 5P 6M 7M\", \"melodic minor\"],\n  [\"1P 2M 3m 4P 5P 6m 7M\", \"harmonic minor\"],\n  [\"1P 2M 3M 4P 5P 6M 7m 7M\", \"bebop\"],\n  [\"1P 2M 3m 4P 5d 6m 6M 7M\", \"diminished\", \"whole-half diminished\"],\n  [\"1P 2M 3m 4P 5P 6M 7m\", \"dorian\"],\n  [\"1P 2M 3M 4A 5P 6M 7M\", \"lydian\"],\n  [\"1P 2M 3M 4P 5P 6M 7m\", \"mixolydian\", \"dominant\"],\n  [\"1P 2m 3m 4P 5P 6m 7m\", \"phrygian\"],\n  [\"1P 2m 3m 4P 5d 6m 7m\", \"locrian\"],\n  [\"1P 3M 4P 5P 7M\", \"ionian pentatonic\"],\n  [\"1P 3M 4P 5P 7m\", \"mixolydian pentatonic\", \"indian\"],\n  [\"1P 2M 4P 5P 6M\", \"ritusen\"],\n  [\"1P 2M 4P 5P 7m\", \"egyptian\"],\n  [\"1P 3M 4P 5d 7m\", \"neopolitan major pentatonic\"],\n  [\"1P 3m 4P 5P 6m\", \"vietnamese 1\"],\n  [\"1P 2m 3m 5P 6m\", \"pelog\"],\n  [\"1P 2m 4P 5P 6m\", \"kumoijoshi\"],\n  [\"1P 2M 3m 5P 6m\", \"hirajoshi\"],\n  [\"1P 2m 4P 5d 7m\", \"iwato\"],\n  [\"1P 2m 4P 5P 7m\", \"in-sen\"],\n  [\"1P 3M 4A 5P 7M\", \"lydian pentatonic\", \"chinese\"],\n  [\"1P 3m 4P 6m 7m\", \"malkos raga\"],\n  [\"1P 3m 4P 5d 7m\", \"locrian pentatonic\", \"minor seven flat five pentatonic\"],\n  [\"1P 3m 4P 5P 7m\", \"minor pentatonic\", \"vietnamese 2\"],\n  [\"1P 3m 4P 5P 6M\", \"minor six pentatonic\"],\n  [\"1P 2M 3m 5P 6M\", \"flat three pentatonic\", \"kumoi\"],\n  [\"1P 2M 3M 5P 6m\", \"flat six pentatonic\"],\n  [\"1P 2m 3M 5P 6M\", \"scriabin\"],\n  [\"1P 3M 5d 6m 7m\", \"whole tone pentatonic\"],\n  [\"1P 3M 4A 5A 7M\", \"lydian #5P pentatonic\"],\n  [\"1P 3M 4A 5P 7m\", \"lydian dominant pentatonic\"],\n  [\"1P 3m 4P 5P 7M\", \"minor #7M pentatonic\"],\n  [\"1P 3m 4d 5d 7m\", \"super locrian pentatonic\"],\n  [\"1P 2M 3m 4P 5P 7M\", \"minor hexatonic\"],\n  [\"1P 2A 3M 5P 5A 7M\", \"augmented\"],\n  [\"1P 2M 4P 5P 6M 7m\", \"piongio\"],\n  [\"1P 2m 3M 4A 6M 7m\", \"prometheus neopolitan\"],\n  [\"1P 2M 3M 4A 6M 7m\", \"prometheus\"],\n  [\"1P 2m 3M 5d 6m 7m\", \"mystery #1\"],\n  [\"1P 2m 3M 4P 5A 6M\", \"six tone symmetric\"],\n  [\"1P 2M 3M 4A 5A 6A\", \"whole tone\", \"messiaen's mode #1\"],\n  [\"1P 2m 4P 4A 5P 7M\", \"messiaen's mode #5\"],\n  [\"1P 2M 3M 4P 5d 6m 7m\", \"locrian major\", \"arabian\"],\n  [\"1P 2m 3M 4A 5P 6m 7M\", \"double harmonic lydian\"],\n  [\n    \"1P 2m 2A 3M 4A 6m 7m\",\n    \"altered\",\n    \"super locrian\",\n    \"diminished whole tone\",\n    \"pomeroy\"\n  ],\n  [\"1P 2M 3m 4P 5d 6m 7m\", \"locrian #2\", \"half-diminished\", \"aeolian b5\"],\n  [\n    \"1P 2M 3M 4P 5P 6m 7m\",\n    \"mixolydian b6\",\n    \"melodic minor fifth mode\",\n    \"hindu\"\n  ],\n  [\"1P 2M 3M 4A 5P 6M 7m\", \"lydian dominant\", \"lydian b7\", \"overtone\"],\n  [\"1P 2M 3M 4A 5A 6M 7M\", \"lydian augmented\"],\n  [\n    \"1P 2m 3m 4P 5P 6M 7m\",\n    \"dorian b2\",\n    \"phrygian #6\",\n    \"melodic minor second mode\"\n  ],\n  [\n    \"1P 2m 3m 4d 5d 6m 7d\",\n    \"ultralocrian\",\n    \"superlocrian bb7\",\n    \"superlocrian diminished\"\n  ],\n  [\"1P 2m 3m 4P 5d 6M 7m\", \"locrian 6\", \"locrian natural 6\", \"locrian sharp 6\"],\n  [\"1P 2A 3M 4P 5P 5A 7M\", \"augmented heptatonic\"],\n  [\n    \"1P 2M 3m 4A 5P 6M 7m\",\n    \"dorian #4\",\n    \"ukrainian dorian\",\n    \"romanian minor\",\n    \"altered dorian\"\n  ],\n  [\"1P 2M 3m 4A 5P 6M 7M\", \"lydian diminished\"],\n  [\"1P 2M 3M 4A 5A 7m 7M\", \"leading whole tone\"],\n  [\"1P 2M 3M 4A 5P 6m 7m\", \"lydian minor\"],\n  [\"1P 2m 3M 4P 5P 6m 7m\", \"phrygian dominant\", \"spanish\", \"phrygian major\"],\n  [\"1P 2m 3m 4P 5P 6m 7M\", \"balinese\"],\n  [\"1P 2m 3m 4P 5P 6M 7M\", \"neopolitan major\"],\n  [\"1P 2M 3M 4P 5P 6m 7M\", \"harmonic major\"],\n  [\"1P 2m 3M 4P 5P 6m 7M\", \"double harmonic major\", \"gypsy\"],\n  [\"1P 2M 3m 4A 5P 6m 7M\", \"hungarian minor\"],\n  [\"1P 2A 3M 4A 5P 6M 7m\", \"hungarian major\"],\n  [\"1P 2m 3M 4P 5d 6M 7m\", \"oriental\"],\n  [\"1P 2m 3m 3M 4A 5P 7m\", \"flamenco\"],\n  [\"1P 2m 3m 4A 5P 6m 7M\", \"todi raga\"],\n  [\"1P 2m 3M 4P 5d 6m 7M\", \"persian\"],\n  [\"1P 2m 3M 5d 6m 7m 7M\", \"enigmatic\"],\n  [\n    \"1P 2M 3M 4P 5A 6M 7M\",\n    \"major augmented\",\n    \"major #5\",\n    \"ionian augmented\",\n    \"ionian #5\"\n  ],\n  [\"1P 2A 3M 4A 5P 6M 7M\", \"lydian #9\"],\n  [\"1P 2m 2M 4P 4A 5P 6m 7M\", \"messiaen's mode #4\"],\n  [\"1P 2m 3M 4P 4A 5P 6m 7M\", \"purvi raga\"],\n  [\"1P 2m 3m 3M 4P 5P 6m 7m\", \"spanish heptatonic\"],\n  [\"1P 2M 3m 3M 4P 5P 6M 7m\", \"bebop minor\"],\n  [\"1P 2M 3M 4P 5P 5A 6M 7M\", \"bebop major\"],\n  [\"1P 2m 3m 4P 5d 5P 6m 7m\", \"bebop locrian\"],\n  [\"1P 2M 3m 4P 5P 6m 7m 7M\", \"minor bebop\"],\n  [\"1P 2M 3M 4P 5d 5P 6M 7M\", \"ichikosucho\"],\n  [\"1P 2M 3m 4P 5P 6m 6M 7M\", \"minor six diminished\"],\n  [\n    \"1P 2m 3m 3M 4A 5P 6M 7m\",\n    \"half-whole diminished\",\n    \"dominant diminished\",\n    \"messiaen's mode #2\"\n  ],\n  [\"1P 3m 3M 4P 5P 6M 7m 7M\", \"kafi raga\"],\n  [\"1P 2M 3M 4P 4A 5A 6A 7M\", \"messiaen's mode #6\"],\n  [\"1P 2M 3m 3M 4P 5d 5P 6M 7m\", \"composite blues\"],\n  [\"1P 2M 3m 3M 4A 5P 6m 7m 7M\", \"messiaen's mode #3\"],\n  [\"1P 2m 2M 3m 4P 4A 5P 6m 6M 7M\", \"messiaen's mode #7\"],\n  [\"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\", \"chromatic\"]\n];\nvar data_default = SCALES;\n\n// index.ts\nvar NoScaleType = {\n  ...EmptyPcset,\n  intervals: [],\n  aliases: []\n};\nvar dictionary = [];\nvar index = {};\nfunction names() {\n  return dictionary.map((scale) => scale.name);\n}\nfunction get(type) {\n  return index[type] || NoScaleType;\n}\nvar scaleType = deprecate(\n  \"ScaleDictionary.scaleType\",\n  \"ScaleType.get\",\n  get\n);\nfunction all() {\n  return dictionary.slice();\n}\nvar entries = deprecate(\n  \"ScaleDictionary.entries\",\n  \"ScaleType.all\",\n  all\n);\nfunction keys() {\n  return Object.keys(index);\n}\nfunction removeAll() {\n  dictionary = [];\n  index = {};\n}\nfunction add(intervals, name, aliases = []) {\n  const scale = { ...pcset(intervals), name, intervals, aliases };\n  dictionary.push(scale);\n  index[scale.name] = scale;\n  index[scale.setNum] = scale;\n  index[scale.chroma] = scale;\n  scale.aliases.forEach((alias) => addAlias(scale, alias));\n  return scale;\n}\nfunction addAlias(scale, alias) {\n  index[alias] = scale;\n}\ndata_default.forEach(\n  ([ivls, name, ...aliases]) => add(ivls.split(\" \"), name, aliases)\n);\nvar scale_type_default = {\n  names,\n  get,\n  all,\n  add,\n  removeAll,\n  keys,\n  entries,\n  scaleType\n};\nexport {\n  NoScaleType,\n  add,\n  addAlias,\n  all,\n  scale_type_default as default,\n  entries,\n  get,\n  keys,\n  names,\n  removeAll,\n  scaleType\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { detect } from \"@tonaljs/chord-detect\";\nimport {\n  all as chordTypes,\n  get as getChordType\n} from \"@tonaljs/chord-type\";\nimport { tonicIntervalsTransposer } from \"@tonaljs/core\";\nimport {\n  deprecate,\n  distance,\n  note,\n  tokenizeNote,\n  transpose as transposeNote\n} from \"@tonaljs/core\";\nimport { isSubsetOf, isSupersetOf } from \"@tonaljs/pcset\";\nimport { all as scaleTypes } from \"@tonaljs/scale-type\";\nimport { detect as detect2 } from \"@tonaljs/chord-detect\";\nvar NoChord = {\n  empty: true,\n  name: \"\",\n  symbol: \"\",\n  root: \"\",\n  rootDegree: 0,\n  type: \"\",\n  tonic: null,\n  setNum: NaN,\n  quality: \"Unknown\",\n  chroma: \"\",\n  normalized: \"\",\n  aliases: [],\n  notes: [],\n  intervals: []\n};\nvar NUM_TYPES = /^(6|64|7|9|11|13)$/;\nfunction tokenize(name) {\n  const [letter, acc, oct, type] = tokenizeNote(name);\n  if (letter === \"\") {\n    return [\"\", name];\n  }\n  if (letter === \"A\" && type === \"ug\") {\n    return [\"\", \"aug\"];\n  }\n  if (!type && (oct === \"4\" || oct === \"5\")) {\n    return [letter + acc, oct];\n  }\n  if (NUM_TYPES.test(oct)) {\n    return [letter + acc, oct + type];\n  } else {\n    return [letter + acc + oct, type];\n  }\n}\nfunction get(src) {\n  if (src === \"\") {\n    return NoChord;\n  }\n  if (Array.isArray(src) && src.length === 2) {\n    return getChord(src[1], src[0]);\n  } else {\n    const [tonic, type] = tokenize(src);\n    const chord2 = getChord(type, tonic);\n    return chord2.empty ? getChord(src) : chord2;\n  }\n}\nfunction getChord(typeName, optionalTonic, optionalRoot) {\n  const type = getChordType(typeName);\n  const tonic = note(optionalTonic || \"\");\n  const root = note(optionalRoot || \"\");\n  if (type.empty || optionalTonic && tonic.empty || optionalRoot && root.empty) {\n    return NoChord;\n  }\n  const rootInterval = distance(tonic.pc, root.pc);\n  const rootDegree = type.intervals.indexOf(rootInterval) + 1;\n  if (!root.empty && !rootDegree) {\n    return NoChord;\n  }\n  const intervals = Array.from(type.intervals);\n  for (let i = 1; i < rootDegree; i++) {\n    const num = intervals[0][0];\n    const quality = intervals[0][1];\n    const newNum = parseInt(num, 10) + 7;\n    intervals.push(`${newNum}${quality}`);\n    intervals.shift();\n  }\n  const notes = tonic.empty ? [] : intervals.map((i) => transposeNote(tonic, i));\n  typeName = type.aliases.indexOf(typeName) !== -1 ? typeName : type.aliases[0];\n  const symbol = `${tonic.empty ? \"\" : tonic.pc}${typeName}${root.empty || rootDegree <= 1 ? \"\" : \"/\" + root.pc}`;\n  const name = `${optionalTonic ? tonic.pc + \" \" : \"\"}${type.name}${rootDegree > 1 && optionalRoot ? \" over \" + root.pc : \"\"}`;\n  return {\n    ...type,\n    name,\n    symbol,\n    type: type.name,\n    root: root.name,\n    intervals,\n    rootDegree,\n    tonic: tonic.name,\n    notes\n  };\n}\nvar chord = deprecate(\"Chord.chord\", \"Chord.get\", get);\nfunction transpose(chordName, interval) {\n  const [tonic, type] = tokenize(chordName);\n  if (!tonic) {\n    return chordName;\n  }\n  return transposeNote(tonic, interval) + type;\n}\nfunction chordScales(name) {\n  const s = get(name);\n  const isChordIncluded = isSupersetOf(s.chroma);\n  return scaleTypes().filter((scale) => isChordIncluded(scale.chroma)).map((scale) => scale.name);\n}\nfunction extended(chordName) {\n  const s = get(chordName);\n  const isSuperset = isSupersetOf(s.chroma);\n  return chordTypes().filter((chord2) => isSuperset(chord2.chroma)).map((chord2) => s.tonic + chord2.aliases[0]);\n}\nfunction reduced(chordName) {\n  const s = get(chordName);\n  const isSubset = isSubsetOf(s.chroma);\n  return chordTypes().filter((chord2) => isSubset(chord2.chroma)).map((chord2) => s.tonic + chord2.aliases[0]);\n}\nfunction degrees(chordName) {\n  const { intervals, tonic } = get(chordName);\n  const transpose2 = tonicIntervalsTransposer(intervals, tonic);\n  return (degree) => degree ? transpose2(degree > 0 ? degree - 1 : degree) : \"\";\n}\nfunction steps(chordName) {\n  const { intervals, tonic } = get(chordName);\n  return tonicIntervalsTransposer(intervals, tonic);\n}\nvar chord_default = {\n  getChord,\n  get,\n  detect,\n  chordScales,\n  extended,\n  reduced,\n  tokenize,\n  transpose,\n  degrees,\n  steps,\n  chord\n};\nexport {\n  chord,\n  chordScales,\n  chord_default as default,\n  degrees,\n  detect2 as detect,\n  extended,\n  get,\n  getChord,\n  reduced,\n  steps,\n  tokenize,\n  transpose\n};\n//# sourceMappingURL=index.mjs.map","// data.ts\nvar DATA = [\n  [\n    0.125,\n    \"dl\",\n    [\"large\", \"duplex longa\", \"maxima\", \"octuple\", \"octuple whole\"]\n  ],\n  [0.25, \"l\", [\"long\", \"longa\"]],\n  [0.5, \"d\", [\"double whole\", \"double\", \"breve\"]],\n  [1, \"w\", [\"whole\", \"semibreve\"]],\n  [2, \"h\", [\"half\", \"minim\"]],\n  [4, \"q\", [\"quarter\", \"crotchet\"]],\n  [8, \"e\", [\"eighth\", \"quaver\"]],\n  [16, \"s\", [\"sixteenth\", \"semiquaver\"]],\n  [32, \"t\", [\"thirty-second\", \"demisemiquaver\"]],\n  [64, \"sf\", [\"sixty-fourth\", \"hemidemisemiquaver\"]],\n  [128, \"h\", [\"hundred twenty-eighth\"]],\n  [256, \"th\", [\"two hundred fifty-sixth\"]]\n];\nvar data_default = DATA;\n\n// index.ts\nvar VALUES = [];\ndata_default.forEach(\n  ([denominator, shorthand, names2]) => add(denominator, shorthand, names2)\n);\nvar NoDuration = {\n  empty: true,\n  name: \"\",\n  value: 0,\n  fraction: [0, 0],\n  shorthand: \"\",\n  dots: \"\",\n  names: []\n};\nfunction names() {\n  return VALUES.reduce((names2, duration) => {\n    duration.names.forEach((name) => names2.push(name));\n    return names2;\n  }, []);\n}\nfunction shorthands() {\n  return VALUES.map((dur) => dur.shorthand);\n}\nvar REGEX = /^([^.]+)(\\.*)$/;\nfunction get(name) {\n  const [_, simple, dots] = REGEX.exec(name) || [];\n  const base = VALUES.find(\n    (dur) => dur.shorthand === simple || dur.names.includes(simple)\n  );\n  if (!base) {\n    return NoDuration;\n  }\n  const fraction2 = calcDots(base.fraction, dots.length);\n  const value2 = fraction2[0] / fraction2[1];\n  return { ...base, name, dots, value: value2, fraction: fraction2 };\n}\nvar value = (name) => get(name).value;\nvar fraction = (name) => get(name).fraction;\nvar duration_value_default = { names, shorthands, get, value, fraction };\nfunction add(denominator, shorthand, names2) {\n  VALUES.push({\n    empty: false,\n    dots: \"\",\n    name: \"\",\n    value: 1 / denominator,\n    fraction: denominator < 1 ? [1 / denominator, 1] : [1, denominator],\n    shorthand,\n    names: names2\n  });\n}\nfunction calcDots(fraction2, dots) {\n  const pow = Math.pow(2, dots);\n  let numerator = fraction2[0] * pow;\n  let denominator = fraction2[1] * pow;\n  const base = numerator;\n  for (let i = 0; i < dots; i++) {\n    numerator += base / Math.pow(2, i + 1);\n  }\n  while (numerator % 2 === 0 && denominator % 2 === 0) {\n    numerator /= 2;\n    denominator /= 2;\n  }\n  return [numerator, denominator];\n}\nexport {\n  duration_value_default as default,\n  fraction,\n  get,\n  names,\n  shorthands,\n  value\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport {\n  coordToInterval,\n  distance as dist,\n  interval as props\n} from \"@tonaljs/core\";\nfunction names() {\n  return \"1P 2M 3M 4P 5P 6m 7m\".split(\" \");\n}\nvar get = props;\nvar name = (name2) => props(name2).name;\nvar semitones = (name2) => props(name2).semitones;\nvar quality = (name2) => props(name2).q;\nvar num = (name2) => props(name2).num;\nfunction simplify(name2) {\n  const i = props(name2);\n  return i.empty ? \"\" : i.simple + i.q;\n}\nfunction invert(name2) {\n  const i = props(name2);\n  if (i.empty) {\n    return \"\";\n  }\n  const step = (7 - i.step) % 7;\n  const alt = i.type === \"perfectable\" ? -i.alt : -(i.alt + 1);\n  return props({ step, alt, oct: i.oct, dir: i.dir }).name;\n}\nvar IN = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7];\nvar IQ = \"P m M m M P d P m M m M\".split(\" \");\nfunction fromSemitones(semitones2) {\n  const d = semitones2 < 0 ? -1 : 1;\n  const n = Math.abs(semitones2);\n  const c = n % 12;\n  const o = Math.floor(n / 12);\n  return d * (IN[c] + 7 * o) + IQ[c];\n}\nvar distance = dist;\nvar add = combinator((a, b) => [a[0] + b[0], a[1] + b[1]]);\nvar addTo = (interval) => (other) => add(interval, other);\nvar substract = combinator((a, b) => [a[0] - b[0], a[1] - b[1]]);\nfunction transposeFifths(interval, fifths) {\n  const ivl = get(interval);\n  if (ivl.empty)\n    return \"\";\n  const [nFifths, nOcts, dir] = ivl.coord;\n  return coordToInterval([nFifths + fifths, nOcts, dir]).name;\n}\nvar interval_default = {\n  names,\n  get,\n  name,\n  num,\n  semitones,\n  quality,\n  fromSemitones,\n  distance,\n  invert,\n  simplify,\n  add,\n  addTo,\n  substract,\n  transposeFifths\n};\nfunction combinator(fn) {\n  return (a, b) => {\n    const coordA = props(a).coord;\n    const coordB = props(b).coord;\n    if (coordA && coordB) {\n      const coord = fn(coordA, coordB);\n      return coordToInterval(coord).name;\n    }\n  };\n}\nexport {\n  add,\n  addTo,\n  interval_default as default,\n  distance,\n  fromSemitones,\n  get,\n  invert,\n  name,\n  names,\n  num,\n  quality,\n  semitones,\n  simplify,\n  substract,\n  transposeFifths\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { note as props } from \"@tonaljs/core\";\nfunction isMidi(arg) {\n  return +arg >= 0 && +arg <= 127;\n}\nfunction toMidi(note) {\n  if (isMidi(note)) {\n    return +note;\n  }\n  const n = props(note);\n  return n.empty ? null : n.midi;\n}\nfunction midiToFreq(midi, tuning = 440) {\n  return Math.pow(2, (midi - 69) / 12) * tuning;\n}\nvar L2 = Math.log(2);\nvar L440 = Math.log(440);\nfunction freqToMidi(freq) {\n  const v = 12 * (Math.log(freq) - L440) / L2 + 69;\n  return Math.round(v * 100) / 100;\n}\nvar SHARPS = \"C C# D D# E F F# G G# A A# B\".split(\" \");\nvar FLATS = \"C Db D Eb E F Gb G Ab A Bb B\".split(\" \");\nfunction midiToNoteName(midi, options = {}) {\n  if (isNaN(midi) || midi === -Infinity || midi === Infinity)\n    return \"\";\n  midi = Math.round(midi);\n  const pcs = options.sharps === true ? SHARPS : FLATS;\n  const pc = pcs[midi % 12];\n  if (options.pitchClass) {\n    return pc;\n  }\n  const o = Math.floor(midi / 12) - 1;\n  return pc + o;\n}\nfunction chroma(midi) {\n  return midi % 12;\n}\nfunction pcsetFromChroma(chroma2) {\n  return chroma2.split(\"\").reduce((pcset2, val, index) => {\n    if (index < 12 && val === \"1\")\n      pcset2.push(index);\n    return pcset2;\n  }, []);\n}\nfunction pcsetFromMidi(midi) {\n  return midi.map(chroma).sort((a, b) => a - b).filter((n, i, a) => i === 0 || n !== a[i - 1]);\n}\nfunction pcset(notes) {\n  return Array.isArray(notes) ? pcsetFromMidi(notes) : pcsetFromChroma(notes);\n}\nfunction pcsetNearest(notes) {\n  const set = pcset(notes);\n  return (midi) => {\n    const ch = chroma(midi);\n    for (let i = 0; i < 12; i++) {\n      if (set.includes(ch + i))\n        return midi + i;\n      if (set.includes(ch - i))\n        return midi - i;\n    }\n    return void 0;\n  };\n}\nfunction pcsetSteps(notes, tonic) {\n  const set = pcset(notes);\n  const len = set.length;\n  return (step) => {\n    const index = step < 0 ? (len - -step % len) % len : step % len;\n    const octaves = Math.floor(step / len);\n    return set[index] + octaves * 12 + tonic;\n  };\n}\nfunction pcsetDegrees(notes, tonic) {\n  const steps = pcsetSteps(notes, tonic);\n  return (degree) => {\n    if (degree === 0)\n      return void 0;\n    return steps(degree > 0 ? degree - 1 : degree);\n  };\n}\nvar midi_default = {\n  chroma,\n  freqToMidi,\n  isMidi,\n  midiToFreq,\n  midiToNoteName,\n  pcsetNearest,\n  pcset,\n  pcsetDegrees,\n  pcsetSteps,\n  toMidi\n};\nexport {\n  chroma,\n  midi_default as default,\n  freqToMidi,\n  isMidi,\n  midiToFreq,\n  midiToNoteName,\n  pcset,\n  pcsetDegrees,\n  pcsetNearest,\n  pcsetSteps,\n  toMidi\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport {\n  note as props,\n  transpose as _tr\n} from \"@tonaljs/core\";\nimport { freqToMidi, midiToNoteName } from \"@tonaljs/midi\";\nvar NAMES = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\nvar toName = (n) => n.name;\nvar onlyNotes = (array) => array.map(props).filter((n) => !n.empty);\nfunction names(array) {\n  if (array === void 0) {\n    return NAMES.slice();\n  } else if (!Array.isArray(array)) {\n    return [];\n  } else {\n    return onlyNotes(array).map(toName);\n  }\n}\nvar get = props;\nvar name = (note) => get(note).name;\nvar pitchClass = (note) => get(note).pc;\nvar accidentals = (note) => get(note).acc;\nvar octave = (note) => get(note).oct;\nvar midi = (note) => get(note).midi;\nvar freq = (note) => get(note).freq;\nvar chroma = (note) => get(note).chroma;\nfunction fromMidi(midi2) {\n  return midiToNoteName(midi2);\n}\nfunction fromFreq(freq2) {\n  return midiToNoteName(freqToMidi(freq2));\n}\nfunction fromFreqSharps(freq2) {\n  return midiToNoteName(freqToMidi(freq2), { sharps: true });\n}\nfunction fromMidiSharps(midi2) {\n  return midiToNoteName(midi2, { sharps: true });\n}\nvar transpose = _tr;\nvar tr = _tr;\nvar transposeBy = (interval) => (note) => transpose(note, interval);\nvar trBy = transposeBy;\nvar transposeFrom = (note) => (interval) => transpose(note, interval);\nvar trFrom = transposeFrom;\nfunction transposeFifths(noteName, fifths) {\n  return transpose(noteName, [fifths, 0]);\n}\nvar trFifths = transposeFifths;\nfunction transposeOctaves(noteName, octaves) {\n  return transpose(noteName, [0, octaves]);\n}\nvar ascending = (a, b) => a.height - b.height;\nvar descending = (a, b) => b.height - a.height;\nfunction sortedNames(notes, comparator) {\n  comparator = comparator || ascending;\n  return onlyNotes(notes).sort(comparator).map(toName);\n}\nfunction sortedUniqNames(notes) {\n  return sortedNames(notes, ascending).filter(\n    (n, i, a) => i === 0 || n !== a[i - 1]\n  );\n}\nvar simplify = (noteName) => {\n  const note = get(noteName);\n  if (note.empty) {\n    return \"\";\n  }\n  return midiToNoteName(note.midi || note.chroma, {\n    sharps: note.alt > 0,\n    pitchClass: note.midi === null\n  });\n};\nfunction enharmonic(noteName, destName) {\n  const src = get(noteName);\n  if (src.empty) {\n    return \"\";\n  }\n  const dest = get(\n    destName || midiToNoteName(src.midi || src.chroma, {\n      sharps: src.alt < 0,\n      pitchClass: true\n    })\n  );\n  if (dest.empty || dest.chroma !== src.chroma) {\n    return \"\";\n  }\n  if (src.oct === void 0) {\n    return dest.pc;\n  }\n  const srcChroma = src.chroma - src.alt;\n  const destChroma = dest.chroma - dest.alt;\n  const destOctOffset = srcChroma > 11 || destChroma < 0 ? -1 : srcChroma < 0 || destChroma > 11 ? 1 : 0;\n  const destOct = src.oct + destOctOffset;\n  return dest.pc + destOct;\n}\nvar note_default = {\n  names,\n  get,\n  name,\n  pitchClass,\n  accidentals,\n  octave,\n  midi,\n  ascending,\n  descending,\n  sortedNames,\n  sortedUniqNames,\n  fromMidi,\n  fromMidiSharps,\n  freq,\n  fromFreq,\n  fromFreqSharps,\n  chroma,\n  transpose,\n  tr,\n  transposeBy,\n  trBy,\n  transposeFrom,\n  trFrom,\n  transposeFifths,\n  transposeOctaves,\n  trFifths,\n  simplify,\n  enharmonic\n};\nexport {\n  accidentals,\n  ascending,\n  chroma,\n  note_default as default,\n  descending,\n  enharmonic,\n  freq,\n  fromFreq,\n  fromFreqSharps,\n  fromMidi,\n  fromMidiSharps,\n  get,\n  midi,\n  name,\n  names,\n  octave,\n  pitchClass,\n  simplify,\n  sortedNames,\n  sortedUniqNames,\n  tr,\n  trBy,\n  trFifths,\n  trFrom,\n  transpose,\n  transposeBy,\n  transposeFifths,\n  transposeFrom,\n  transposeOctaves\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport {\n  accToAlt,\n  altToAcc,\n  deprecate,\n  interval,\n  isNamed,\n  isPitch\n} from \"@tonaljs/core\";\nvar NoRomanNumeral = { empty: true, name: \"\", chordType: \"\" };\nvar cache = {};\nfunction get(src) {\n  return typeof src === \"string\" ? cache[src] || (cache[src] = parse(src)) : typeof src === \"number\" ? get(NAMES[src] || \"\") : isPitch(src) ? fromPitch(src) : isNamed(src) ? get(src.name) : NoRomanNumeral;\n}\nvar romanNumeral = deprecate(\n  \"RomanNumeral.romanNumeral\",\n  \"RomanNumeral.get\",\n  get\n);\nfunction names(major = true) {\n  return (major ? NAMES : NAMES_MINOR).slice();\n}\nfunction fromPitch(pitch) {\n  return get(altToAcc(pitch.alt) + NAMES[pitch.step]);\n}\nvar REGEX = /^(#{1,}|b{1,}|x{1,}|)(IV|I{1,3}|VI{0,2}|iv|i{1,3}|vi{0,2})([^IViv]*)$/;\nfunction tokenize(str) {\n  return REGEX.exec(str) || [\"\", \"\", \"\", \"\"];\n}\nvar ROMANS = \"I II III IV V VI VII\";\nvar NAMES = ROMANS.split(\" \");\nvar NAMES_MINOR = ROMANS.toLowerCase().split(\" \");\nfunction parse(src) {\n  const [name, acc, roman, chordType] = tokenize(src);\n  if (!roman) {\n    return NoRomanNumeral;\n  }\n  const upperRoman = roman.toUpperCase();\n  const step = NAMES.indexOf(upperRoman);\n  const alt = accToAlt(acc);\n  const dir = 1;\n  return {\n    empty: false,\n    name,\n    roman,\n    interval: interval({ step, alt, dir }).name,\n    acc,\n    chordType,\n    alt,\n    step,\n    major: roman === upperRoman,\n    oct: 0,\n    dir\n  };\n}\nvar roman_numeral_default = {\n  names,\n  get,\n  romanNumeral\n};\nexport {\n  roman_numeral_default as default,\n  get,\n  names,\n  tokenize\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { accToAlt, altToAcc, note, transpose } from \"@tonaljs/core\";\nimport { transposeFifths } from \"@tonaljs/note\";\nimport { get as roman } from \"@tonaljs/roman-numeral\";\nvar Empty = Object.freeze([]);\nvar NoKey = {\n  type: \"major\",\n  tonic: \"\",\n  alteration: 0,\n  keySignature: \"\"\n};\nvar NoKeyScale = {\n  tonic: \"\",\n  grades: Empty,\n  intervals: Empty,\n  scale: Empty,\n  triads: Empty,\n  chords: Empty,\n  chordsHarmonicFunction: Empty,\n  chordScales: Empty\n};\nvar NoMajorKey = {\n  ...NoKey,\n  ...NoKeyScale,\n  type: \"major\",\n  minorRelative: \"\",\n  scale: Empty,\n  secondaryDominants: Empty,\n  secondaryDominantsMinorRelative: Empty,\n  substituteDominants: Empty,\n  substituteDominantsMinorRelative: Empty\n};\nvar NoMinorKey = {\n  ...NoKey,\n  type: \"minor\",\n  relativeMajor: \"\",\n  natural: NoKeyScale,\n  harmonic: NoKeyScale,\n  melodic: NoKeyScale\n};\nvar mapScaleToType = (scale, list, sep = \"\") => list.map((type, i) => `${scale[i]}${sep}${type}`);\nfunction keyScale(grades, triads, chords, harmonicFunctions, chordScales) {\n  return (tonic) => {\n    const intervals = grades.map((gr) => roman(gr).interval || \"\");\n    const scale = intervals.map((interval) => transpose(tonic, interval));\n    return {\n      tonic,\n      grades,\n      intervals,\n      scale,\n      triads: mapScaleToType(scale, triads),\n      chords: mapScaleToType(scale, chords),\n      chordsHarmonicFunction: harmonicFunctions.slice(),\n      chordScales: mapScaleToType(scale, chordScales, \" \")\n    };\n  };\n}\nvar distInFifths = (from, to) => {\n  const f = note(from);\n  const t = note(to);\n  return f.empty || t.empty ? 0 : t.coord[0] - f.coord[0];\n};\nvar MajorScale = keyScale(\n  \"I II III IV V VI VII\".split(\" \"),\n  \" m m   m dim\".split(\" \"),\n  \"maj7 m7 m7 maj7 7 m7 m7b5\".split(\" \"),\n  \"T SD T SD D T D\".split(\" \"),\n  \"major,dorian,phrygian,lydian,mixolydian,minor,locrian\".split(\",\")\n);\nvar NaturalScale = keyScale(\n  \"I II bIII IV V bVI bVII\".split(\" \"),\n  \"m dim  m m  \".split(\" \"),\n  \"m7 m7b5 maj7 m7 m7 maj7 7\".split(\" \"),\n  \"T SD T SD D SD SD\".split(\" \"),\n  \"minor,locrian,major,dorian,phrygian,lydian,mixolydian\".split(\",\")\n);\nvar HarmonicScale = keyScale(\n  \"I II bIII IV V bVI VII\".split(\" \"),\n  \"m dim aug m   dim\".split(\" \"),\n  \"mMaj7 m7b5 +maj7 m7 7 maj7 o7\".split(\" \"),\n  \"T SD T SD D SD D\".split(\" \"),\n  \"harmonic minor,locrian 6,major augmented,lydian diminished,phrygian dominant,lydian #9,ultralocrian\".split(\n    \",\"\n  )\n);\nvar MelodicScale = keyScale(\n  \"I II bIII IV V VI VII\".split(\" \"),\n  \"m m aug   dim dim\".split(\" \"),\n  \"m6 m7 +maj7 7 7 m7b5 m7b5\".split(\" \"),\n  \"T SD T SD D  \".split(\" \"),\n  \"melodic minor,dorian b2,lydian augmented,lydian dominant,mixolydian b6,locrian #2,altered\".split(\n    \",\"\n  )\n);\nfunction majorKey(tonic) {\n  const pc = note(tonic).pc;\n  if (!pc)\n    return NoMajorKey;\n  const keyScale2 = MajorScale(pc);\n  const alteration = distInFifths(\"C\", pc);\n  const romanInTonic = (src) => {\n    const r = roman(src);\n    if (r.empty)\n      return \"\";\n    return transpose(tonic, r.interval) + r.chordType;\n  };\n  return {\n    ...keyScale2,\n    type: \"major\",\n    minorRelative: transpose(pc, \"-3m\"),\n    alteration,\n    keySignature: altToAcc(alteration),\n    secondaryDominants: \"- VI7 VII7 I7 II7 III7 -\".split(\" \").map(romanInTonic),\n    secondaryDominantsMinorRelative: \"- IIIm7b5 IV#m7 Vm7 VIm7 VIIm7b5 -\".split(\" \").map(romanInTonic),\n    substituteDominants: \"- bIII7 IV7 bV7 bVI7 bVII7 -\".split(\" \").map(romanInTonic),\n    substituteDominantsMinorRelative: \"- IIIm7 Im7 IIbm7 VIm7 IVm7 -\".split(\" \").map(romanInTonic)\n  };\n}\nfunction minorKey(tnc) {\n  const pc = note(tnc).pc;\n  if (!pc)\n    return NoMinorKey;\n  const alteration = distInFifths(\"C\", pc) - 3;\n  return {\n    type: \"minor\",\n    tonic: pc,\n    relativeMajor: transpose(pc, \"3m\"),\n    alteration,\n    keySignature: altToAcc(alteration),\n    natural: NaturalScale(pc),\n    harmonic: HarmonicScale(pc),\n    melodic: MelodicScale(pc)\n  };\n}\nfunction majorTonicFromKeySignature(sig) {\n  if (typeof sig === \"number\") {\n    return transposeFifths(\"C\", sig);\n  } else if (typeof sig === \"string\" && /^b+|#+$/.test(sig)) {\n    return transposeFifths(\"C\", accToAlt(sig));\n  }\n  return null;\n}\nvar key_default = { majorKey, majorTonicFromKeySignature, minorKey };\nexport {\n  key_default as default,\n  majorKey,\n  majorTonicFromKeySignature,\n  minorKey\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { rotate } from \"@tonaljs/collection\";\nimport { deprecate, transpose } from \"@tonaljs/core\";\nimport { simplify, transposeFifths } from \"@tonaljs/interval\";\nimport { EmptyPcset } from \"@tonaljs/pcset\";\nimport { get as getType } from \"@tonaljs/scale-type\";\nvar MODES = [\n  [0, 2773, 0, \"ionian\", \"\", \"Maj7\", \"major\"],\n  [1, 2902, 2, \"dorian\", \"m\", \"m7\"],\n  [2, 3418, 4, \"phrygian\", \"m\", \"m7\"],\n  [3, 2741, -1, \"lydian\", \"\", \"Maj7\"],\n  [4, 2774, 1, \"mixolydian\", \"\", \"7\"],\n  [5, 2906, 3, \"aeolian\", \"m\", \"m7\", \"minor\"],\n  [6, 3434, 5, \"locrian\", \"dim\", \"m7b5\"]\n];\nvar NoMode = {\n  ...EmptyPcset,\n  name: \"\",\n  alt: 0,\n  modeNum: NaN,\n  triad: \"\",\n  seventh: \"\",\n  aliases: []\n};\nvar modes = MODES.map(toMode);\nvar index = {};\nmodes.forEach((mode2) => {\n  index[mode2.name] = mode2;\n  mode2.aliases.forEach((alias) => {\n    index[alias] = mode2;\n  });\n});\nfunction get(name) {\n  return typeof name === \"string\" ? index[name.toLowerCase()] || NoMode : name && name.name ? get(name.name) : NoMode;\n}\nvar mode = deprecate(\"Mode.mode\", \"Mode.get\", get);\nfunction all() {\n  return modes.slice();\n}\nvar entries = deprecate(\"Mode.mode\", \"Mode.all\", all);\nfunction names() {\n  return modes.map((mode2) => mode2.name);\n}\nfunction toMode(mode2) {\n  const [modeNum, setNum, alt, name, triad, seventh, alias] = mode2;\n  const aliases = alias ? [alias] : [];\n  const chroma = Number(setNum).toString(2);\n  const intervals = getType(name).intervals;\n  return {\n    empty: false,\n    intervals,\n    modeNum,\n    chroma,\n    normalized: chroma,\n    name,\n    setNum,\n    alt,\n    triad,\n    seventh,\n    aliases\n  };\n}\nfunction notes(modeName, tonic) {\n  return get(modeName).intervals.map((ivl) => transpose(tonic, ivl));\n}\nfunction chords(chords2) {\n  return (modeName, tonic) => {\n    const mode2 = get(modeName);\n    if (mode2.empty)\n      return [];\n    const triads2 = rotate(mode2.modeNum, chords2);\n    const tonics = mode2.intervals.map((i) => transpose(tonic, i));\n    return triads2.map((triad, i) => tonics[i] + triad);\n  };\n}\nvar triads = chords(MODES.map((x) => x[4]));\nvar seventhChords = chords(MODES.map((x) => x[5]));\nfunction distance(destination, source) {\n  const from = get(source);\n  const to = get(destination);\n  if (from.empty || to.empty)\n    return \"\";\n  return simplify(transposeFifths(\"1P\", to.alt - from.alt));\n}\nfunction relativeTonic(destination, source, tonic) {\n  return transpose(tonic, distance(destination, source));\n}\nvar mode_default = {\n  get,\n  names,\n  all,\n  distance,\n  relativeTonic,\n  notes,\n  triads,\n  seventhChords,\n  entries,\n  mode\n};\nexport {\n  all,\n  mode_default as default,\n  distance,\n  entries,\n  get,\n  mode,\n  names,\n  notes,\n  relativeTonic,\n  seventhChords,\n  triads\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { tokenize } from \"@tonaljs/chord\";\nimport { distance, interval, transpose } from \"@tonaljs/core\";\nimport { get as romanNumeral } from \"@tonaljs/roman-numeral\";\nfunction fromRomanNumerals(tonic, chords) {\n  const romanNumerals = chords.map(romanNumeral);\n  return romanNumerals.map(\n    (rn) => transpose(tonic, interval(rn)) + rn.chordType\n  );\n}\nfunction toRomanNumerals(tonic, chords) {\n  return chords.map((chord) => {\n    const [note, chordType] = tokenize(chord);\n    const intervalName = distance(tonic, note);\n    const roman = romanNumeral(interval(intervalName));\n    return roman.name + chordType;\n  });\n}\nvar progression_default = { fromRomanNumerals, toRomanNumerals };\nexport {\n  progression_default as default,\n  fromRomanNumerals,\n  toRomanNumerals\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { compact, range } from \"@tonaljs/collection\";\nimport { midiToNoteName, toMidi } from \"@tonaljs/midi\";\nfunction numeric(notes) {\n  const midi = compact(\n    notes.map((note) => typeof note === \"number\" ? note : toMidi(note))\n  );\n  if (!notes.length || midi.length !== notes.length) {\n    return [];\n  }\n  return midi.reduce(\n    (result, note) => {\n      const last = result[result.length - 1];\n      return result.concat(range(last, note).slice(1));\n    },\n    [midi[0]]\n  );\n}\nfunction chromatic(notes, options) {\n  return numeric(notes).map((midi) => midiToNoteName(midi, options));\n}\nvar range_default = { numeric, chromatic };\nexport {\n  chromatic,\n  range_default as default,\n  numeric\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { all as chordTypes } from \"@tonaljs/chord-type\";\nimport { range as nums, rotate } from \"@tonaljs/collection\";\nimport {\n  deprecate,\n  note,\n  tonicIntervalsTransposer,\n  transpose\n} from \"@tonaljs/core\";\nimport { enharmonic, fromMidi, sortedUniqNames } from \"@tonaljs/note\";\nimport {\n  chroma,\n  isChroma,\n  isSubsetOf,\n  isSupersetOf,\n  modes\n} from \"@tonaljs/pcset\";\nimport {\n  all,\n  all as scaleTypes,\n  get as getScaleType,\n  names as scaleTypeNames\n} from \"@tonaljs/scale-type\";\nvar NoScale = {\n  empty: true,\n  name: \"\",\n  type: \"\",\n  tonic: null,\n  setNum: NaN,\n  chroma: \"\",\n  normalized: \"\",\n  aliases: [],\n  notes: [],\n  intervals: []\n};\nfunction tokenize(name) {\n  if (typeof name !== \"string\") {\n    return [\"\", \"\"];\n  }\n  const i = name.indexOf(\" \");\n  const tonic = note(name.substring(0, i));\n  if (tonic.empty) {\n    const n = note(name);\n    return n.empty ? [\"\", name] : [n.name, \"\"];\n  }\n  const type = name.substring(tonic.name.length + 1);\n  return [tonic.name, type.length ? type : \"\"];\n}\nvar names = scaleTypeNames;\nfunction get(src) {\n  const tokens = Array.isArray(src) ? src : tokenize(src);\n  const tonic = note(tokens[0]).name;\n  const st = getScaleType(tokens[1]);\n  if (st.empty) {\n    return NoScale;\n  }\n  const type = st.name;\n  const notes = tonic ? st.intervals.map((i) => transpose(tonic, i)) : [];\n  const name = tonic ? tonic + \" \" + type : type;\n  return { ...st, name, type, tonic, notes };\n}\nvar scale = deprecate(\"Scale.scale\", \"Scale.get\", get);\nfunction detect(notes, options = {}) {\n  const notesChroma = chroma(notes);\n  const tonic = note(options.tonic ?? notes[0] ?? \"\");\n  const tonicChroma = tonic.chroma;\n  if (tonicChroma === void 0) {\n    return [];\n  }\n  const pitchClasses = notesChroma.split(\"\");\n  pitchClasses[tonicChroma] = \"1\";\n  const scaleChroma = rotate(tonicChroma, pitchClasses).join(\"\");\n  const match = all().find((scaleType) => scaleType.chroma === scaleChroma);\n  const results = [];\n  if (match) {\n    results.push(tonic.name + \" \" + match.name);\n  }\n  if (options.match === \"exact\") {\n    return results;\n  }\n  extended(scaleChroma).forEach((scaleName) => {\n    results.push(tonic.name + \" \" + scaleName);\n  });\n  return results;\n}\nfunction scaleChords(name) {\n  const s = get(name);\n  const inScale = isSubsetOf(s.chroma);\n  return chordTypes().filter((chord) => inScale(chord.chroma)).map((chord) => chord.aliases[0]);\n}\nfunction extended(name) {\n  const chroma2 = isChroma(name) ? name : get(name).chroma;\n  const isSuperset = isSupersetOf(chroma2);\n  return scaleTypes().filter((scale2) => isSuperset(scale2.chroma)).map((scale2) => scale2.name);\n}\nfunction reduced(name) {\n  const isSubset = isSubsetOf(get(name).chroma);\n  return scaleTypes().filter((scale2) => isSubset(scale2.chroma)).map((scale2) => scale2.name);\n}\nfunction scaleNotes(notes) {\n  const pcset = notes.map((n) => note(n).pc).filter((x) => x);\n  const tonic = pcset[0];\n  const scale2 = sortedUniqNames(pcset);\n  return rotate(scale2.indexOf(tonic), scale2);\n}\nfunction modeNames(name) {\n  const s = get(name);\n  if (s.empty) {\n    return [];\n  }\n  const tonics = s.tonic ? s.notes : s.intervals;\n  return modes(s.chroma).map((chroma2, i) => {\n    const modeName = get(chroma2).name;\n    return modeName ? [tonics[i], modeName] : [\"\", \"\"];\n  }).filter((x) => x[0]);\n}\nfunction getNoteNameOf(scale2) {\n  const names2 = Array.isArray(scale2) ? scaleNotes(scale2) : get(scale2).notes;\n  const chromas = names2.map((name) => note(name).chroma);\n  return (noteOrMidi) => {\n    const currNote = typeof noteOrMidi === \"number\" ? note(fromMidi(noteOrMidi)) : note(noteOrMidi);\n    const height = currNote.height;\n    if (height === void 0)\n      return void 0;\n    const chroma2 = height % 12;\n    const position = chromas.indexOf(chroma2);\n    if (position === -1)\n      return void 0;\n    return enharmonic(currNote.name, names2[position]);\n  };\n}\nfunction rangeOf(scale2) {\n  const getName = getNoteNameOf(scale2);\n  return (fromNote, toNote) => {\n    const from = note(fromNote).height;\n    const to = note(toNote).height;\n    if (from === void 0 || to === void 0)\n      return [];\n    return nums(from, to).map(getName).filter((x) => x);\n  };\n}\nfunction degrees(scaleName) {\n  const { intervals, tonic } = get(scaleName);\n  const transpose2 = tonicIntervalsTransposer(intervals, tonic);\n  return (degree) => degree ? transpose2(degree > 0 ? degree - 1 : degree) : \"\";\n}\nfunction steps(scaleName) {\n  const { intervals, tonic } = get(scaleName);\n  return tonicIntervalsTransposer(intervals, tonic);\n}\nvar scale_default = {\n  degrees,\n  detect,\n  extended,\n  get,\n  modeNames,\n  names,\n  rangeOf,\n  reduced,\n  scaleChords,\n  scaleNotes,\n  steps,\n  tokenize,\n  scale\n};\nexport {\n  scale_default as default,\n  degrees,\n  detect,\n  extended,\n  get,\n  modeNames,\n  names,\n  rangeOf,\n  reduced,\n  scale,\n  scaleChords,\n  scaleNotes,\n  steps,\n  tokenize\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nvar NONE = {\n  empty: true,\n  name: \"\",\n  upper: void 0,\n  lower: void 0,\n  type: void 0,\n  additive: []\n};\nvar NAMES = [\"4/4\", \"3/4\", \"2/4\", \"2/2\", \"12/8\", \"9/8\", \"6/8\", \"3/8\"];\nfunction names() {\n  return NAMES.slice();\n}\nvar REGEX = /^(\\d*\\d(?:\\+\\d)*)\\/(\\d+)$/;\nvar CACHE = /* @__PURE__ */ new Map();\nfunction get(literal) {\n  const stringifiedLiteral = JSON.stringify(literal);\n  const cached = CACHE.get(stringifiedLiteral);\n  if (cached) {\n    return cached;\n  }\n  const ts = build(parse(literal));\n  CACHE.set(stringifiedLiteral, ts);\n  return ts;\n}\nfunction parse(literal) {\n  if (typeof literal === \"string\") {\n    const [_, up2, low] = REGEX.exec(literal) || [];\n    return parse([up2, low]);\n  }\n  const [up, down] = literal;\n  const denominator = +down;\n  if (typeof up === \"number\") {\n    return [up, denominator];\n  }\n  const list = up.split(\"+\").map((n) => +n);\n  return list.length === 1 ? [list[0], denominator] : [list, denominator];\n}\nvar time_signature_default = { names, parse, get };\nvar isPowerOfTwo = (x) => Math.log(x) / Math.log(2) % 1 === 0;\nfunction build([up, down]) {\n  const upper = Array.isArray(up) ? up.reduce((a, b) => a + b, 0) : up;\n  const lower = down;\n  if (upper === 0 || lower === 0) {\n    return NONE;\n  }\n  const name = Array.isArray(up) ? `${up.join(\"+\")}/${down}` : `${up}/${down}`;\n  const additive = Array.isArray(up) ? up : [];\n  const type = lower === 4 || lower === 2 ? \"simple\" : lower === 8 && upper % 3 === 0 ? \"compound\" : isPowerOfTwo(lower) ? \"irregular\" : \"irrational\";\n  return {\n    empty: false,\n    name,\n    type,\n    upper,\n    lower,\n    additive\n  };\n}\nexport {\n  time_signature_default as default,\n  get,\n  names,\n  parse\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport AbcNotation from \"@tonaljs/abc-notation\";\nimport * as Array from \"@tonaljs/array\";\nimport Chord from \"@tonaljs/chord\";\nimport ChordType from \"@tonaljs/chord-type\";\nimport Collection from \"@tonaljs/collection\";\nimport * as Core from \"@tonaljs/core\";\nimport DurationValue from \"@tonaljs/duration-value\";\nimport Interval from \"@tonaljs/interval\";\nimport Key from \"@tonaljs/key\";\nimport Midi from \"@tonaljs/midi\";\nimport Mode from \"@tonaljs/mode\";\nimport Note from \"@tonaljs/note\";\nimport Pcset from \"@tonaljs/pcset\";\nimport Progression from \"@tonaljs/progression\";\nimport Range from \"@tonaljs/range\";\nimport RomanNumeral from \"@tonaljs/roman-numeral\";\nimport Scale from \"@tonaljs/scale\";\nimport ScaleType from \"@tonaljs/scale-type\";\nimport TimeSignature from \"@tonaljs/time-signature\";\nexport * from \"@tonaljs/core\";\nvar Tonal = Core;\nvar PcSet = Pcset;\nvar ChordDictionary = ChordType;\nvar ScaleDictionary = ScaleType;\nexport {\n  AbcNotation,\n  Array,\n  Chord,\n  ChordDictionary,\n  ChordType,\n  Collection,\n  Core,\n  DurationValue,\n  Interval,\n  Key,\n  Midi,\n  Mode,\n  Note,\n  PcSet,\n  Pcset,\n  Progression,\n  Range,\n  RomanNumeral,\n  Scale,\n  ScaleDictionary,\n  ScaleType,\n  TimeSignature,\n  Tonal\n};\n//# sourceMappingURL=index.mjs.map","/*\ntonal.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/tonal/tonal.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Note, Interval, Scale } from '@tonaljs/tonal';\nimport { register, _mod } from '@strudel.cycles/core';\n\n// transpose note inside scale by offset steps\n// function scaleOffset(scale: string, offset: number, note: string) {\nfunction scaleOffset(scale, offset, note) {\n  let [tonic, scaleName] = Scale.tokenize(scale);\n  let { notes } = Scale.get(`${tonic} ${scaleName}`);\n  notes = notes.map((note) => Note.get(note).pc); // use only pc!\n  offset = Number(offset);\n  if (isNaN(offset)) {\n    throw new Error(`scale offset \"${offset}\" not a number`);\n  }\n  const { pc: fromPc, oct = 3 } = Note.get(note);\n  const noteIndex = notes.indexOf(fromPc);\n  if (noteIndex === -1) {\n    throw new Error(`note \"${note}\" is not in scale \"${scale}\"`);\n  }\n  let i = noteIndex,\n    o = oct,\n    n = fromPc;\n  const direction = Math.sign(offset);\n  // TODO: find way to do this smarter\n  while (Math.abs(i - noteIndex) < Math.abs(offset)) {\n    i += direction;\n    const index = _mod(i, notes.length);\n    if (direction < 0 && n[0] === 'C') {\n      o += direction;\n    }\n    n = notes[index];\n    if (direction > 0 && n[0] === 'C') {\n      o += direction;\n    }\n  }\n  return n + o;\n}\n\n// Pattern.prototype._transpose = function (intervalOrSemitones: string | number) {\n/**\n * Change the pitch of each value by the given amount. Expects numbers or note strings as values.\n * The amount can be given as a number of semitones or as a string in interval short notation.\n * If you don't care about enharmonic correctness, just use numbers. Otherwise, pass the interval of\n * the form: ST where S is the degree number and T the type of interval with\n *\n * - M = major\n * - m = minor\n * - P = perfect\n * - A = augmented\n * - d = diminished\n *\n * Examples intervals:\n *\n * - 1P = unison\n * - 3M = major third\n * - 3m = minor third\n * - 4P = perfect fourth\n * - 4A = augmented fourth\n * - 5P = perfect fifth\n * - 5d = diminished fifth\n *\n * @param {string | number} amount Either number of semitones or interval string.\n * @returns Pattern\n * @memberof Pattern\n * @name transpose\n * @example\n * \"c2 c3\".fast(2).transpose(\"<0 -2 5 3>\".slow(2)).note()\n * @example\n * \"c2 c3\".fast(2).transpose(\"<1P -2M 4P 3m>\".slow(2)).note()\n */\n\nexport const transpose = register('transpose', function (intervalOrSemitones, pat) {\n  return pat.withHap((hap) => {\n    const interval = !isNaN(Number(intervalOrSemitones))\n      ? Interval.fromSemitones(intervalOrSemitones /*  as number */)\n      : String(intervalOrSemitones);\n    if (typeof hap.value === 'number') {\n      const semitones = typeof interval === 'string' ? Interval.semitones(interval) || 0 : interval;\n      return hap.withValue(() => hap.value + semitones);\n    }\n    // TODO: move simplify to player to preserve enharmonics\n    // tone.js doesn't understand multiple sharps flats e.g. F##3 has to be turned into G3\n    return hap.withValue(() => Note.simplify(Note.transpose(hap.value, interval)));\n  });\n});\n\n// example: transpose(3).late(0.2) will be equivalent to compose(transpose(3), late(0.2))\n// e.g. `stack(c3).superimpose(transpose(slowcat(7, 5)))` or\n// or even `stack(c3).superimpose(transpose.slowcat(7, 5))` or\n\n/**\n * Transposes notes inside the scale by the number of steps.\n * Expected to be called on a Pattern which already has a {@link Pattern#scale}\n *\n * @memberof Pattern\n * @name scaleTranspose\n * @param {offset} offset number of steps inside the scale\n * @returns Pattern\n * @example\n * \"-8 [2,4,6]\"\n * .scale('C4 bebop major')\n * .scaleTranspose(\"<0 -1 -2 -3 -4 -5 -6 -4>\")\n * .note()\n */\n\nexport const scaleTranspose = register('scaleTranspose', function (offset /* : number | string */, pat) {\n  return pat.withHap((hap) => {\n    if (!hap.context.scale) {\n      throw new Error('can only use scaleTranspose after .scale');\n    }\n    if (typeof hap.value !== 'string') {\n      throw new Error('can only use scaleTranspose with notes');\n    }\n    return hap.withValue(() => scaleOffset(hap.context.scale, Number(offset), hap.value));\n  });\n});\n\n/**\n * Turns numbers into notes in the scale (zero indexed). Also sets scale for other scale operations, like {@link Pattern#scaleTranspose}.\n *\n * A scale consists of a root note (e.g. `c4`, `c`, `f#`, `bb4`) followed by semicolon (':') and then a [scale type](https://github.com/tonaljs/tonal/blob/main/packages/scale-type/data.ts).\n *\n * The root note defaults to octave 3, if no octave number is given.\n *\n * @name scale\n * @param {string} scale Name of scale\n * @returns Pattern\n * @example\n * n(\"0 2 4 6 4 2\").scale(\"C:major\")\n * @example\n * n(\"[0,7] 4 [2,7] 4\")\n * .scale(\"C:<major minor>/2\")\n * .s(\"piano\")\n * @example\n * n(rand.range(0,12).segment(8).round())\n * .scale(\"C:ritusen\")\n * .s(\"folkharp\")\n */\n\nexport const scale = register('scale', function (scale, pat) {\n  // Supports ':' list syntax in mininotation\n  if (Array.isArray(scale)) {\n    scale = scale.flat().join(' ');\n  }\n  return pat.withHap((hap) => {\n    const isObject = typeof hap.value === 'object';\n    let note = isObject ? hap.value.n : hap.value;\n    if (isObject) {\n      delete hap.value.n; // remove n so it won't cause trouble\n    }\n    const asNumber = Number(note);\n    if (!isNaN(asNumber)) {\n      // TODO: worth keeping for supporting ':' in (non-mininotation) strings?\n      scale = scale.replaceAll(':', ' ');\n      let [tonic, scaleName] = Scale.tokenize(scale);\n      const { pc, oct = 3 } = Note.get(tonic);\n      note = scaleOffset(pc + ' ' + scaleName, asNumber, pc + oct);\n    }\n    return hap.withValue(() => (isObject ? { ...hap.value, note } : note)).setContext({ ...hap.context, scale });\n  });\n});\n","import { isNote, isNoteWithOctave, _mod, noteToMidi, tokenizeNote } from '@strudel.cycles/core';\nimport { Interval } from '@tonaljs/tonal';\n\n// https://codesandbox.io/s/stateless-voicings-g2tmz0?file=/src/lib.js:0-2515\n\nconst flats = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\nconst pcs = ['c', 'db', 'd', 'eb', 'e', 'f', 'gb', 'g', 'ab', 'a', 'bb', 'b'];\nconst sharps = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\nconst accs = { b: -1, '#': 1 };\n\nexport const pc2chroma = (pc) => {\n  const [letter, ...rest] = pc.split('');\n  return pcs.indexOf(letter.toLowerCase()) + rest.reduce((sum, sign) => sum + accs[sign], 0);\n};\n\nexport const rotateChroma = (chroma, steps) => (chroma + (steps % 12) + 12) % 12;\n\nexport const chroma2pc = (chroma, sharp = false) => {\n  return (sharp ? sharps : flats)[chroma];\n};\n\nexport function tokenizeChord(chord) {\n  const match = (chord || '').match(/^([A-G][b#]*)([^/]*)[/]?([A-G][b#]*)?$/);\n  if (!match) {\n    // console.warn('could not tokenize chord', chord);\n    return [];\n  }\n  return match.slice(1);\n}\nexport const note2pc = (note) => note.match(/^[A-G][#b]?/i)[0];\nexport const note2oct = (note) => tokenizeNote(note)[2];\n\nexport const note2chroma = (note) => {\n  return pc2chroma(note2pc(note));\n};\n\n// TODO: test\nexport const midi2chroma = (midi) => midi % 12;\n\n// TODO: test and use in voicing function\nexport const pitch2chroma = (x, defaultOctave) => {\n  if (isNoteWithOctave(x)) {\n    return note2chroma(x);\n  }\n  if (isNote(x)) {\n    //pc\n    return pc2chroma(x, defaultOctave);\n  }\n  if (typeof x === 'number') {\n    // expect midi\n    return midi2chroma(x);\n  }\n};\n\nexport const step2semitones = (x) => {\n  let num = Number(x);\n  if (!isNaN(num)) {\n    return num;\n  }\n  return Interval.semitones(x);\n};\n\nexport const x2midi = (x) => {\n  if (typeof x === 'number') {\n    return x;\n  }\n  if (typeof x === 'string') {\n    return noteToMidi(x);\n  }\n};\n\n// duplicate: util.mjs (does not support sharp flag)\nexport const midi2note = (midi, sharp = false) => {\n  const oct = Math.floor(midi / 12) - 1;\n  const pc = (sharp ? sharps : flats)[midi % 12];\n  return pc + oct;\n};\n\nexport function scaleStep(notes, offset, octaves = 1) {\n  notes = notes.map((note) => (typeof note === 'string' ? noteToMidi(note) : note));\n  const octOffset = Math.floor(offset / notes.length) * octaves * 12;\n  offset = _mod(offset, notes.length);\n  return notes[offset] + octOffset;\n}\n\n// different ways to resolve the note to compare the anchor to (see renderVoicing)\nlet modeTarget = {\n  below: (v) => v.slice(-1)[0],\n  duck: (v) => v.slice(-1)[0],\n  above: (v) => v[0],\n};\n\nexport function renderVoicing({ chord, dictionary, offset = 0, n, mode = 'below', anchor = 'c5', octaves = 1 }) {\n  const [root, symbol] = tokenizeChord(chord);\n  const rootChroma = pc2chroma(root);\n  anchor = anchor?.note || anchor;\n  const anchorChroma = pitch2chroma(anchor);\n  const voicings = dictionary[symbol].map((voicing) =>\n    (typeof voicing === 'string' ? voicing.split(' ') : voicing).map(step2semitones),\n  );\n\n  let minDistance, bestIndex;\n  // calculate distances up from voicing top notes\n  let chromaDiffs = voicings.map((v, i) => {\n    const targetStep = modeTarget[mode](v);\n    const diff = _mod(anchorChroma - targetStep - rootChroma, 12);\n    if (minDistance === undefined || diff < minDistance) {\n      minDistance = diff;\n      bestIndex = i;\n    }\n    return diff;\n  });\n\n  const octDiff = Math.ceil(offset / voicings.length) * 12;\n  const indexWithOffset = _mod(bestIndex + offset, voicings.length);\n  const voicing = voicings[indexWithOffset];\n  const targetStep = modeTarget[mode](voicing);\n  const anchorMidi = noteToMidi(anchor, 4) - chromaDiffs[indexWithOffset] + octDiff;\n\n  const voicingMidi = voicing.map((v) => anchorMidi - targetStep + v);\n  let notes = voicingMidi.map((n) => midi2note(n));\n\n  if (mode === 'duck') {\n    notes = notes.filter((_, i) => voicingMidi[i] !== noteToMidi(anchor));\n  }\n  if (n !== undefined) {\n    return [scaleStep(notes, n, octaves)];\n  }\n  return notes;\n}\n\n// https://github.com/tidalcycles/strudel/blob/14184993d0ee7d69c47df57ac864a1a0f99a893f/packages/tonal/tonleiter.mjs\nconst steps = [1, 0, 2, 0, 3, 4, 0, 5, 0, 6, 0, 7];\nconst notes = ['C', '', 'D', '', 'E', 'F', '', 'G', '', 'A', '', 'B'];\nconst noteLetters = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];\n\nexport const accidentalOffset = (accidentals) => {\n  return accidentals.split('#').length - accidentals.split('b').length;\n};\n\nconst accidentalString = (offset) => {\n  if (offset < 0) {\n    return 'b'.repeat(-offset);\n  }\n  if (offset > 0) {\n    return '#'.repeat(offset);\n  }\n  return '';\n};\n\nexport const Step = {\n  tokenize(step) {\n    const matches = step.match(/^([#b]*)([1-9][0-9]*)$/);\n    if (!matches) {\n      throw new Error(`Step.tokenize: not a valid step: ${step}`);\n    }\n    const [accidentals, stepNumber] = matches.slice(1);\n    return [accidentals, parseInt(stepNumber)];\n  },\n  accidentals(step) {\n    return accidentalOffset(Step.tokenize(step)[0]);\n  },\n};\n\nexport const Note = {\n  // TODO: support octave numbers\n  tokenize(note) {\n    return [note[0], note.slice(1)];\n  },\n  accidentals(note) {\n    return accidentalOffset(this.tokenize(note)[1]);\n  },\n};\n\n// TODO: support octave numbers\nexport function transpose(note, step) {\n  // example: E, 3\n  const stepNumber = Step.tokenize(step)[1]; // 3\n  const noteLetter = Note.tokenize(note)[0]; // E\n  const noteIndex = noteLetters.indexOf(noteLetter); // 2 \"E is C+2\"\n  const targetNote = noteLetters[(noteIndex + stepNumber - 1) % 8]; // G \"G is a third above E\"\n  const rootIndex = notes.indexOf(noteLetter); // 4 \"E is 4 semitones above C\"\n  const targetIndex = notes.indexOf(targetNote); // 7 \"G is 7 semitones above C\"\n  const indexOffset = targetIndex - rootIndex; // 3 (E to G is normally a 3 semitones)\n  const stepIndex = steps.indexOf(stepNumber); // 4 (\"3\" is normally 4 semitones)\n  const offsetAccidentals = accidentalString(Step.accidentals(step) + Note.accidentals(note) + stepIndex - indexOffset); // \"we need to add a # to to the G to make it a major third from E\"\n  return [targetNote, offsetAccidentals].join('');\n}\n\n//Note(\"Bb3\").transpose(\"c3\")\n","\"use strict\";\nexports.__esModule = true;\nexports.getBestVoicing = void 0;\nfunction getBestVoicing(voicingOptions) {\n    var chord = voicingOptions.chord, range = voicingOptions.range, finder = voicingOptions.finder, picker = voicingOptions.picker, lastVoicing = voicingOptions.lastVoicing;\n    var voicings = finder(chord, range);\n    if (!voicings.length) {\n        return [];\n    }\n    return picker(voicings, lastVoicing);\n}\nexports.getBestVoicing = getBestVoicing;\n//# sourceMappingURL=getBestVoicing.js.map","\"use strict\";\nexports.__esModule = true;\nexports.tokenizeChord = void 0;\nfunction tokenizeChord(chord) {\n    var match = (chord || '').match(/^([A-G][b#]*)([^\\/]*)[\\/]?([A-G][b#]*)?$/);\n    if (!match) {\n        // console.warn('could not tokenize chord', chord);\n        return [];\n    }\n    return match.slice(1);\n}\nexports.tokenizeChord = tokenizeChord;\n//# sourceMappingURL=tokenizeChord.js.map","\"use strict\";\nexports.__esModule = true;\nexports.voicingsInRange = void 0;\nvar tonal_1 = require(\"@tonaljs/tonal\");\nvar dictionaryVoicing_1 = require(\"./dictionaryVoicing\");\nvar tokenizeChord_1 = require(\"./tokenizeChord\");\nfunction voicingsInRange(chord, dictionary, range) {\n    if (dictionary === void 0) { dictionary = dictionaryVoicing_1.lefthand; }\n    if (range === void 0) { range = ['D3', 'A4']; }\n    var _a = (0, tokenizeChord_1.tokenizeChord)(chord), tonic = _a[0], symbol = _a[1];\n    if (!dictionary[symbol]) {\n        return [];\n    }\n    // resolve array of interval arrays for the wanted symbol\n    var voicings = dictionary[symbol].map(function (intervals) { return intervals.split(' '); });\n    var notesInRange = tonal_1.Range.chromatic(range); // gives array of notes inside range\n    return voicings.reduce(function (voiced, voicing) {\n        // transpose intervals relative to first interval (e.g. 3m 5P > 1P 3M)\n        var relativeIntervals = voicing.map(function (interval) { return tonal_1.Interval.substract(interval, voicing[0]); });\n        // get enharmonic correct pitch class the bottom note\n        var bottomPitchClass = tonal_1.Note.transpose(tonic, voicing[0]);\n        // get all possible start notes for voicing\n        var starts = notesInRange\n            // only get the start notes:\n            .filter(function (note) { return tonal_1.Note.chroma(note) === tonal_1.Note.chroma(bottomPitchClass); })\n            // filter out start notes that will overshoot the top end of the range\n            .filter(function (note) {\n            return tonal_1.Note.midi(tonal_1.Note.transpose(note, relativeIntervals[relativeIntervals.length - 1])) <= tonal_1.Note.midi(range[1]);\n        })\n            // replace Range.chromatic notes with the correct enharmonic equivalents\n            .map(function (note) { return tonal_1.Note.enharmonic(note, bottomPitchClass); });\n        // render one voicing for each start note\n        var notes = starts.map(function (start) { return relativeIntervals.map(function (interval) { return tonal_1.Note.transpose(start, interval); }); });\n        return voiced.concat(notes);\n    }, []);\n}\nexports.voicingsInRange = voicingsInRange;\n//# sourceMappingURL=voicingsInRange.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nexports.__esModule = true;\nexports.dictionaryVoicing = exports.dictionaryVoicingFinder = exports.triads = exports.guidetones = exports.lefthand = void 0;\nvar getBestVoicing_1 = require(\"./getBestVoicing\");\nvar voicingsInRange_1 = require(\"./voicingsInRange\");\nexports.lefthand = {\n    m7: ['3m 5P 7m 9M', '7m 9M 10m 12P'],\n    '7': ['3M 6M 7m 9M', '7m 9M 10M 13M'],\n    '^7': ['3M 5P 7M 9M', '7M 9M 10M 12P'],\n    '69': ['3M 5P 6A 9M'],\n    m7b5: ['3m 5d 7m 8P', '7m 8P 10m 12d'],\n    '7b9': ['3M 6m 7m 9m', '7m 9m 10M 13m'],\n    '7b13': ['3M 6m 7m 9m', '7m 9m 10M 13m'],\n    o7: ['1P 3m 5d 6M', '5d 6M 8P 10m'],\n    '7#11': ['7m 9M 11A 13A'],\n    '7#9': ['3M 7m 9A'],\n    mM7: ['3m 5P 7M 9M', '7M 9M 10m 12P'],\n    m6: ['3m 5P 6M 9M', '6M 9M 10m 12P']\n};\nexports.guidetones = {\n    m7: ['3m 7m', '7m 10m'],\n    m9: ['3m 7m', '7m 10m'],\n    '7': ['3M 7m', '7m 10M'],\n    '^7': ['3M 7M', '7M 10M'],\n    '^9': ['3M 7M', '7M 10M'],\n    '69': ['3M 6M'],\n    '6': ['3M 6M', '6M 10M'],\n    m7b5: ['3m 7m', '7m 10m'],\n    '7b9': ['3M 7m', '7m 10M'],\n    '7b13': ['3M 7m', '7m 10M'],\n    o7: ['3m 6M', '6M 10m'],\n    '7#11': ['3M 7m', '7m 10M'],\n    '7#9': ['3M 7m', '7m 10M'],\n    mM7: ['3m 7M', '7M 10m'],\n    m6: ['3m 6M', '6M 10m']\n};\nexports.triads = {\n    M: ['1P 3M 5P', '3M 5P 8P', '5P 8P 10M'],\n    m: ['1P 3m 5P', '3m 5P 8P', '5P 8P 10m'],\n    o: ['1P 3m 5d', '3m 5d 8P', '5d 8P 10m'],\n    aug: ['1P 3m 5A', '3m 5A 8P', '5A 8P 10m']\n};\nvar dictionaryVoicingFinder = function (dictionary) { return function (chordSymbol, range) {\n    return (0, voicingsInRange_1.voicingsInRange)(chordSymbol, dictionary, range);\n}; };\nexports.dictionaryVoicingFinder = dictionaryVoicingFinder;\nvar dictionaryVoicing = function (props) {\n    var dictionary = props.dictionary, range = props.range, rest = __rest(props, [\"dictionary\", \"range\"]);\n    return (0, getBestVoicing_1.getBestVoicing)(__assign(__assign({}, rest), { range: range, finder: (0, exports.dictionaryVoicingFinder)(dictionary) }));\n};\nexports.dictionaryVoicing = dictionaryVoicing;\n//# sourceMappingURL=dictionaryVoicing.js.map","\"use strict\";\nexports.__esModule = true;\nexports.minTopNoteDiff = void 0;\nvar tonal_1 = require(\"@tonaljs/tonal\");\nfunction minTopNoteDiff(voicings, lastVoicing) {\n    if (!lastVoicing) {\n        return voicings[0];\n    }\n    var diff = function (voicing) {\n        return Math.abs(tonal_1.Note.midi(lastVoicing[lastVoicing.length - 1]) - tonal_1.Note.midi(voicing[voicing.length - 1]));\n    };\n    return voicings.reduce(function (best, current) { return (diff(current) < diff(best) ? current : best); }, voicings[0]);\n}\nexports.minTopNoteDiff = minTopNoteDiff;\n//# sourceMappingURL=minTopNoteDiff.js.map","\"use strict\";\nexports.__esModule = true;\nvar dictionaryVoicing_1 = require(\"./dictionaryVoicing\");\nvar minTopNoteDiff_1 = require(\"./minTopNoteDiff\");\nvar getBestVoicing_1 = require(\"./getBestVoicing\");\nvar tokenizeChord_1 = require(\"./tokenizeChord\");\nexports[\"default\"] = {\n    tokenizeChord: tokenizeChord_1.tokenizeChord,\n    getBestVoicing: getBestVoicing_1.getBestVoicing,\n    dictionaryVoicing: dictionaryVoicing_1.dictionaryVoicing,\n    dictionaryVoicingFinder: dictionaryVoicing_1.dictionaryVoicingFinder,\n    lefthand: dictionaryVoicing_1.lefthand,\n    guidetones: dictionaryVoicing_1.guidetones,\n    triads: dictionaryVoicing_1.triads,\n    minTopNoteDiff: minTopNoteDiff_1.minTopNoteDiff\n};\n//# sourceMappingURL=index.js.map","// explore them here: https://codesandbox.io/s/voicing-explorer-ireal-47tkx5?file=/src/ireal.js:0-16036\n// scraped via: https://codesandbox.io/s/ireal-midi-scraper-2-gjz2mr?file=/src/index.js\n\nexport const simple = {\n  2: ['1P 5P 8P 9M', '1P 5P 8P 9M 12P', '5P 8P 9M 12P'],\n  5: ['1P 5P 8P 12P', '5P 8P 12P 15P'],\n  6: ['1P 5P 6M 8P 10M', '1P 5P 8P 10M 13M', '3M 5P 8P 10M 13M', '5P 8P 10M 12P 13M'],\n  7: [\n    '1P 5P 7m 8P 10M',\n    '1P 7m 8P 10M 12P',\n    '3M 7m 8P 10M 12P',\n    '3M 7m 8P 10M 14m',\n    '3M 7m 10M 12P 15P',\n    '7m 10M 12P 14m 15P',\n    '7m 10M 12P 15P 17M',\n  ],\n  9: [\n    '1P 5P 7m 9M 10M',\n    '1P 7m 9M 10M 12P',\n    '3M 7m 8P 9M 12P',\n    '7m 9M 10M 14m 15P',\n    '3M 7m 8P 12P 16M',\n    '7m 10M 12P 15P 16M',\n  ],\n  11: ['1P 5P 7m 9M 11P', '5P 7m 8P 9M 11P', '7m 8P 9M 11P 12P', '7m 8P 11P 12P 16M'],\n  13: ['1P 6M 7m 9M 10M', '1P 7m 9M 10M 13M', '3M 7m 8P 9M 13M', '7m 8P 9M 10M 13M', '7m 9M 10M 13M 15P'],\n  69: ['1P 5P 6M 9M 10M', '1P 5P 9M 10M 13M', '3M 5P 8P 9M 13M', '5P 8P 9M 10M 13M'],\n  add9: ['1P 5P 8P 9M 10M', '1P 5P 9M 10M 12P', '3M 8P 9M 10M 12P', '3M 8P 9M 12P 15P', '5P 8P 9M 12P 17M'],\n  '+': [\n    '1P 3M 6m 8P 10M',\n    '1P 6m 8P 10M 13m',\n    '3M 6m 8P 10M 13m',\n    '3M 8P 10M 13m 15P',\n    '6m 8P 10M 13m 15P',\n    '6m 10M 13m 15P 17M',\n  ],\n  o: ['1P 5d 8P 10m 12d', '3m 8P 10m 12d 15P', '5d 8P 10m 12d 15P'],\n  h: [\n    '3m 5d 7m 8P 10m',\n    '1P 5d 7m 10m 12d',\n    '3m 7m 8P 10m 12d',\n    '3m 7m 8P 12d 14m',\n    '5d 7m 8P 10m 14m',\n    '5d 8P 10m 12d 14m',\n    '7m 10m 12d 14m 15P',\n    '5d 8P 10m 14m 17m',\n  ],\n  sus: ['1P 4P 5P 8P', '1P 4P 5P 8P 11P', '5P 8P 11P 12P', '5P 8P 11P 12P 15P'],\n  '^': ['1P 5P 8P 10M', '1P 5P 8P 10M 12P', '3M 5P 8P 10M 12P', '3M 8P 10M 12P 15P', '5P 8P 10M 12P 15P'],\n  '-': ['1P 3m 5P 8P 10m', '1P 5P 8P 10m 12P', '3m 5P 8P 10m 12P', '5P 8P 10m 12P 15P'],\n  '^7': ['1P 5P 7M 10M 12P', '1P 10M 12P 14M', '3M 8P 10M 12P 14M', '5P 8P 10M 12P 14M', '5P 8P 10M 14M 17M'],\n  '-7': [\n    '1P 3m 5P 7m 10m',\n    '1P 5P 7m 10m 12P',\n    '3m 7m 8P 10m 12P',\n    '3m 7m 8P 10m 14m',\n    '5P 7m 8P 10m 14m',\n    '7m 10m 12P 14m 15P',\n    '5P 8P 10m 14m 17m',\n    '7m 10m 12P 15P 17m',\n  ],\n  '7sus': ['1P 5P 7m 8P 11P', '5P 8P 11P 12P 14m', '7m 8P 11P 12P 14m', '7m 11P 12P 14m 18P'],\n  h7: [\n    '3m 5d 7m 8P 10m',\n    '1P 5d 7m 10m 12d',\n    '1P 7m 10m 12d',\n    '3m 7m 8P 10m 12d',\n    '3m 7m 8P 12d 14m',\n    '5d 7m 8P 10m 14m',\n    '5d 8P 10m 12d 14m',\n    '7m 10m 12d 14m 15P',\n    '5d 8P 10m 14m 17m',\n  ],\n  o7: [\n    '1P 6M 8P 10m 12d',\n    '1P 6M 10m 12d 13M',\n    '3m 8P 10m 12d 13M',\n    '3m 8P 12d 13M 15P',\n    '5d 10m 12d 13M 15P',\n    '5d 10m 13M 15P 17m',\n    '6M 12d 13M 15P 17m',\n    '6M 12d 15P 17m 19d',\n  ],\n  '^9': [\n    '1P 5P 7M 9M 10M',\n    '1P 7M 9M 10M 12P',\n    '3M 7M 8P 9M 12P',\n    '3M 7M 8P 12P 16M',\n    '5P 8P 10M 14M 16M',\n    '7M 8P 10M 12P 16M',\n  ],\n  '^13': ['1P 6M 7M 9M 10M', '1P 7M 9M 10M 13M', '3M 7M 8P 9M 13M', '3M 7M 8P 13M 16M', '7M 8P 10M 13M 16M'],\n  '^7#11': ['1P 5P 7M 10M 12d', '3M 7M 8P 10M 12d', '1P 7M 10M 12d 14M', '3M 7M 8P 12d 14M', '5P 8P 10M 12d 14M'],\n  '^9#11': ['1P 3M 5d 7M 9M', '1P 7M 9M 10M 12d', '3M 7M 8P 9M 12d', '3M 8P 9M 12d 14M'],\n  '^7#5': ['1P 6m 7M 10M 13m', '3M 7M 8P 10M 13m', '6m 7M 8P 10M 13m'],\n  '-6': [\n    '1P 3m 5P 6M 8P',\n    '1P 5P 6M 8P 10m',\n    '3m 5P 6M 8P 10m',\n    '1P 5P 8P 10m 13M',\n    '3m 5P 8P 10m 13M',\n    '5P 8P 10m 12P 13M',\n    '5P 8P 10m 13M 15P',\n  ],\n  '-69': [\n    '1P 3m 5P 6M 9M',\n    '3m 5P 6M 8P 9M',\n    '3m 6M 9M 10m 12P',\n    '1P 5P 9M 10m 13M',\n    '3m 5P 8P 9M 13M',\n    '5P 8P 9M 10m 13M',\n    '5P 8P 10m 13M 16M',\n  ],\n  '-^7': ['1P 3m 5P 7M 10m', '1P 5P 7M 10m 12P', '3m 7M 8P 10m 12P', '5P 7M 8P 10m 14M', '5P 8P 10m 14M 17m'],\n  '-^9': ['1P 3m 5P 7M 9M', '1P 7M 9M 10m 12P', '3m 7M 8P 9M 12P', '5P 8P 9M 10m 14M'],\n  '-9': [\n    '1P 3m 5P 7m 9M',\n    '3m 5P 7m 8P 9M',\n    '3m 7m 8P 9M 12P',\n    '5P 8P 9M 10m 14m',\n    '3m 7m 9M 12P 15P',\n    '7m 10m 12P 15P 16M',\n  ],\n  '-add9': ['1P 2M 3m 5P 8P', '1P 3m 5P 9M', '3m 5P 8P 9M 12P', '5P 8P 9M 10m 12P'],\n  '-11': [\n    '1P 3m 7m 9M 11P',\n    '3m 7m 8P 9M 11P',\n    '1P 4P 7m 10m 12P',\n    '5P 8P 11P 14m',\n    '3m 7m 9M 11P 15P',\n    '5P 8P 11P 14m 16M',\n    '7m 10m 12P 15P 18P',\n  ],\n  '-7b5': [\n    '3m 5d 7m 8P 10m',\n    '1P 7m 10m 12d',\n    '1P 5d 7m 10m 12d',\n    '3m 7m 8P 10m 12d',\n    '3m 7m 8P 12d 14m',\n    '5d 7m 8P 10m 14m',\n    '5d 8P 10m 12d 14m',\n    '7m 10m 12d 14m 15P',\n    '5d 8P 10m 14m 17m',\n  ],\n  h9: ['1P 7m 9M 10m 12d', '3m 7m 8P 9M 12d', '5d 8P 9M 10m 14m', '7m 10m 12d 15P 16M'],\n  '-b6': ['1P 5P 6m 8P 10m', '1P 5P 8P 10m 13m', '3m 5P 8P 10m 13m', '5P 8P 10m 13m', '5P 8P 10m 13m 15P'],\n  '-#5': ['1P 6m 8P 10m 13m', '3m 6m 8P 10m 13m', '6m 8P 10m 13m 15P'],\n  '7b9': ['1P 3M 7m 9m 10M', '3M 7m 8P 9m 10M', '3M 7m 8P 9m 14m', '7m 9m 10M 14m 15P'],\n  '7#9': ['1P 3M 7m 10m', '3M 7m 8P 10m 14m', '7m 10m 10M 14m 15P'],\n  '7#11': ['1P 3M 7m 10M 12d', '3M 7m 8P 10M 12d', '7m 10M 12d 14m 15P'],\n  '7b5': ['1P 3M 7m 10M 12d', '3M 7m 8P 10M 12d', '7m 10M 12d 14m 15P'],\n  '7#5': ['1P 3M 7m 10M 13m', '3M 7m 8P 10M 13m', '3M 7m 8P 13m 14m', '7m 10M 13m 14m 15P'],\n  '9#11': ['1P 7m 9M 10M 12d', '3M 7m 8P 9M 12d', '7m 10M 12d 15P 16M'],\n  '9b5': ['1P 7m 9M 10M 12d', '3M 7m 8P 9M 12d', '7m 10M 12d 15P 16M'],\n  '9#5': ['1P 7m 9M 10M 13m', '3M 7m 9M 10M 13m', '3M 7m 9M 13m 14m', '7m 10M 13m 14m 16M', '7m 10M 13m 16M 17M'],\n  '7b13': ['1P 3M 7m 10M 13m', '3M 7m 8P 10M 13m', '3M 7m 8P 13m 14m', '7m 10M 13m 14m 15P'],\n  '7#9#5': ['1P 3M 7m 10m 13m', '3M 7m 10m 13m 15P', '7m 10M 13m 15P 17m'],\n  '7#9b5': ['1P 3M 7m 10m 12d', '3M 7m 10m 12d 15P', '7m 10M 12d 15P 17m'],\n  '7#9#11': ['1P 3M 7m 10m 12d', '3M 7m 10m 12d 15P', '7m 10M 12d 15P 17m'],\n  '7b9#11': ['1P 7m 9m 10M 12d', '3M 7m 8P 9m 12d', '7m 8P 10M 12d 16m'],\n  '7b9b5': ['1P 7m 9m 10M 12d', '3M 7m 8P 9m 12d', '7m 8P 10M 12d 16m'],\n  '7b9#5': ['1P 7m 9m 10M 13m', '3M 7m 8P 9m 13m', '7m 9m 10M 13m 15P'],\n  '7b9#9': ['1P 3M 7m 9m 10m', '3M 7m 8P 9m 10m', '7m 8P 10M 16m 17m'],\n  '7b9b13': ['1P 7m 9m 10M 13m', '3M 7m 8P 9m 13m', '7m 9m 10M 13m 15P'],\n  '7alt': [\n    '3M 7m 8P 9m 12d',\n    '1P 7m 10m 10M 13m',\n    '3M 7m 8P 10m 13m',\n    '3M 7m 9m 12d 15P',\n    '3M 7m 10m 13m 15P',\n    '7m 10M 12d 15P 17m',\n    '7m 10M 13m 15P 17m',\n  ],\n  '13#11': ['1P 6M 7m 10M 12d', '3M 7m 9M 12d 13M', '7m 10M 12d 13M 16M'],\n  '13b9': ['1P 3M 6M 7m 9m', '1P 6M 7m 9m 10M', '3M 7m 9m 10M 13M', '3M 7m 10M 13M 16m', '7m 10M 13M 16m 17M'],\n  '13#9': ['1P 3M 6M 7m 10m', '3M 7m 8P 10m 13M', '7m 10M 13M 14m 17m'],\n  '7b9sus': ['1P 5P 7m 9m 11P', '5P 7m 8P 9m 11P', '7m 8P 11P 14m 16m'],\n  '7susadd3': ['1P 4P 5P 7m 10M', '5P 8P 10M 11P 14m', '7m 11P 12P 15P 17M'],\n  '9sus': ['1P 5P 7m 9M 11P', '5P 7m 8P 9M 11P', '7m 8P 9M 11P 12P', '7m 8P 11P 12P 16M'],\n  '13sus': ['1P 4P 6M 7m 9M', '1P 7m 9M 11P 13M', '5P 7m 9M 11P 13M', '7m 9M 11P 13M 15P'],\n  '7b13sus': ['1P 5P 7m 11P 13m', '5P 7m 8P 11P 13m', '7m 11P 13m 14m 15P'],\n};\n\nexport const complex = {\n  2: ['1P 5P 6M 8P 9M', '1P 5P 8P 9M 12P', '5P 8P 9M 12P 13M', '5P 8P 9M 12P 15P'],\n  5: ['1P 5P 8P 12P', '1P 5P 8P 9M 12P', '5P 8P 12P 15P', '5P 8P 12P 15P 16M'],\n  6: ['1P 5P 6M 9M 10M', '1P 5P 9M 10M 13M', '3M 5P 9M 10M 13M', '5P 8P 9M 10M 13M', '3M 6M 9M 12P 15P'],\n  7: [\n    '1P 5P 7m 8P 10M',\n    '1P 7m 8P 10M 12P',\n    '3M 7m 8P 10M 12P',\n    '3M 7m 8P 10M 14m',\n    '3M 7m 10M 12P 15P',\n    '7m 10M 12P 14m 15P',\n    '7m 10M 12P 15P 17M',\n    '7m 10M 14m 17M 19P',\n  ],\n  9: [\n    '1P 6M 7m 9M 10M',\n    '3M 7m 9M 10M 12P',\n    '1P 7m 9M 10M 13M',\n    '3M 7m 9M 10M 13M',\n    '3M 7m 9M 12P 15P',\n    '7m 10M 12P 13M 16M',\n    '7m 10M 13M 16M 17M',\n    '7m 10M 13M 16M 19P',\n  ],\n  11: [\n    '1P 4P 6M 7m 9M',\n    '1P 5P 7m 9M 11P',\n    '4P 6M 7m 9M 11P',\n    '5P 8P 9M 11P 14m',\n    '7m 9M 11P 13M 15P',\n    '7m 11P 12P 14m 18P',\n  ],\n  13: [\n    '3M 7m 9M 10M 13M',\n    '3M 7m 9M 13M 15P',\n    '3M 7m 10M 13M 16M',\n    '7m 10M 12P 13M 16M',\n    '7m 10M 13M 16M 17M',\n    '7m 10M 13M 16M 19P',\n  ],\n  69: ['1P 5P 6M 9M 10M', '1P 5P 9M 10M 13M', '3M 5P 9M 10M 13M', '5P 8P 9M 10M 13M', '3M 6M 9M 12P 15P'],\n  add9: [\n    '1P 5P 8P 9M 10M',\n    '1P 5P 9M 10M 12P',\n    '3M 8P 9M 10M 12P',\n    '3M 8P 9M 12P 15P',\n    '5P 8P 9M 10M 15P',\n    '5P 8P 9M 12P 17M',\n  ],\n  '+': [\n    '1P 6m 8P 9M 10M',\n    '1P 6m 8P 10M 13m',\n    '3M 8P 9M 10M 13m',\n    '3M 8P 10M 13m 15P',\n    '6m 10M 13m 15P 16M',\n    '6m 10M 13m 15P 17M',\n  ],\n  o: [\n    '1P 6M 8P 10m 12d',\n    '1P 6M 10m 12d 13M',\n    '3m 8P 10m 12d 13M',\n    '3m 8P 12d 13M 15P',\n    '5d 10m 12d 13M 15P',\n    '5d 10m 13M 15P 17m',\n    '6M 12d 13M 15P 17m',\n    '6M 12d 15P 17m 19d',\n  ],\n  h: [\n    '1P 5d 7m 10m 11P',\n    '3m 5d 7m 8P 11P',\n    '5d 7m 8P 10m 11P',\n    '1P 7m 10m 12d',\n    '3m 7m 8P 12d 14m',\n    '5d 8P 10m 11P 14m',\n    '7m 10m 11P 12d 14m',\n    '7m 10m 12d 14m 15P',\n    '5d 8P 10m 14m 17m',\n  ],\n  sus: [\n    '1P 4P 5P 8P 9M',\n    '1P 4P 5P 8P 11P',\n    '1P 5P 8P 9M 11P',\n    '5P 8P 9M 11P 12P',\n    '5P 8P 11P 12P 13M',\n    '5P 8P 11P 13M 15P',\n  ],\n  '^': [\n    '1P 3M 5P 6M 9M',\n    '1P 5P 8P 10M 12P',\n    '3M 5P 9M 10M 12P',\n    '1P 5P 8P 10M 13M',\n    '3M 8P 10M 13M 15P',\n    '5P 9M 10M 12P 15P',\n  ],\n  '-': [\n    '1P 3m 5P 8P 10m',\n    '1P 3m 5P 9M 11P',\n    '3m 5P 8P 9M 11P',\n    '5P 8P 9M 10m 11P',\n    '1P 5P 9M 10m 12P',\n    '3m 5P 8P 10m 12P',\n    '5P 8P 10m 12P 15P',\n  ],\n  '^7': [\n    '1P 6M 7M 9M 10M',\n    '3M 7M 9M 10M 12P',\n    '1P 7M 9M 10M 13M',\n    '3M 7M 9M 10M 13M',\n    '3M 7M 9M 12P 13M',\n    '3M 7M 9M 13M 14M',\n    '3M 7M 10M 13M 16M',\n    '7M 10M 13M 14M 16M',\n    '7M 10M 13M 16M 17M',\n    '7M 10M 13M 16M 19P',\n  ],\n  '-7': [\n    '1P 3m 5P 7m 9M',\n    '1P 3m 5P 7m 10m',\n    '1P 5P 7m 10m 11P',\n    '3m 7m 8P 10m 11P',\n    '1P 5P 7m 10m 12P',\n    '3m 7m 9M 10m 12P',\n    '3m 7m 8P 10m 14m',\n    '5P 7m 9M 10m 14m',\n    '7m 10m 11P 14m 15P',\n    '7m 10m 12P 15P 16M',\n    '5P 8P 11P 14m 17m',\n    '7m 10m 12P 15P 17m',\n  ],\n  '7sus': [\n    '1P 4P 6M 7m 9M',\n    '1P 5P 7m 9M 11P',\n    '4P 6M 7m 9M 11P',\n    '5P 8P 9M 11P 14m',\n    '7m 9M 11P 13M 15P',\n    '7m 11P 12P 14m 18P',\n  ],\n  h7: [\n    '1P 5d 7m 10m 11P',\n    '3m 5d 7m 8P 11P',\n    '5d 7m 8P 10m 11P',\n    '1P 7m 10m 12d',\n    '3m 7m 8P 10m 12d',\n    '3m 7m 8P 12d 14m',\n    '5d 8P 10m 11P 14m',\n    '7m 10m 11P 12d 14m',\n    '7m 10m 12d 14m 15P',\n    '5d 8P 10m 14m 17m',\n  ],\n  o7: [\n    '1P 6M 8P 10m 12d',\n    '1P 6M 10m 12d 13M',\n    '3m 8P 10m 12d 13M',\n    '3m 8P 12d 13M 15P',\n    '5d 10m 12d 13M 15P',\n    '5d 10m 13M 15P 17m',\n    '6M 12d 13M 15P 17m',\n    '6M 12d 15P 17m 19d',\n  ],\n  '^9': [\n    '1P 6M 7M 9M 10M',\n    '1P 7M 9M 10M 13M',\n    '3M 7M 9M 10M 13M',\n    '3M 7M 9M 12P 13M',\n    '3M 7M 8P 9M 13M',\n    '3M 7M 9M 13M 14M',\n    '3M 7M 10M 13M 16M',\n    '7M 10M 13M 14M 16M',\n    '7M 10M 13M 16M 17M',\n    '7M 10M 13M 16M 19P',\n  ],\n  '^13': [\n    '1P 6M 7M 9M 10M',\n    '1P 7M 9M 10M 13M',\n    '3M 7M 9M 12P 13M',\n    '3M 7M 9M 10M 13M',\n    '3M 7M 8P 9M 13M',\n    '3M 7M 9M 13M 14M',\n    '3M 7M 10M 13M 16M',\n    '7M 10M 13M 14M 16M',\n    '7M 10M 13M 16M 17M',\n    '7M 10M 13M 16M 19P',\n  ],\n  '^7#11': [\n    '1P 3M 5d 7M 9M',\n    '1P 7M 9M 10M 12d',\n    '3M 7M 9M 10M 12d',\n    '3M 7M 9M 12d 13M',\n    '3M 7M 10M 12d 14M',\n    '7M 10M 12d 13M 14M',\n    '7M 10M 12d 13M 16M',\n    '7M 10M 12d 14M 17M',\n  ],\n  '^9#11': [\n    '1P 3M 5d 7M 9M',\n    '1P 7M 9M 10M 12d',\n    '3M 7M 9M 10M 12d',\n    '3M 7M 9M 12d 13M',\n    '3M 7M 9M 12d 14M',\n    '7M 10M 12d 14M 16M',\n    '7M 10M 12d 13M 16M',\n  ],\n  '^7#5': ['1P 6m 7M 10M 13m', '3M 7M 9M 10M 13m', '3M 7M 10M 13m 14M', '7M 10M 13m 14M 16M', '7M 10M 13m 14M 17M'],\n  '-6': [\n    '1P 3m 5P 6M 9M',\n    '3m 5P 6M 8P 9M',\n    '1P 5P 6M 10m 11P',\n    '3m 5P 6M 8P 11P',\n    '1P 5P 9M 10m 13M',\n    '3m 5P 8P 9M 13M',\n    '5P 8P 10m 11P 13M',\n    '5P 8P 10m 13M 16M',\n  ],\n  '-69': [\n    '1P 3m 5P 6M 9M',\n    '3m 5P 6M 8P 9M',\n    '3m 6M 9M 10m 12P',\n    '1P 5P 9M 10m 13M',\n    '3m 5P 8P 9M 13M',\n    '5P 8P 9M 10m 13M',\n    '5P 8P 10m 13M 16M',\n  ],\n  '-^7': [\n    '1P 3m 5P 7M 9M',\n    '1P 5P 7M 10m 11P',\n    '3m 7M 9M 10m 11P',\n    '3m 7M 9M 10m 12P',\n    '3m 7M 9M 12P 14M',\n    '7M 10m 11P 12P 14M',\n    '7M 10m 12P 14M 16M',\n  ],\n  '-^9': [\n    '1P 3m 5P 7M 9M',\n    '1P 5P 7M 10m 11P',\n    '3m 7M 9M 10m 11P',\n    '3m 7M 9M 10m 12P',\n    '3m 7M 9M 12P 14M',\n    '7M 10m 11P 12P 14M',\n    '7M 10m 12P 14M 16M',\n  ],\n  '-9': [\n    '1P 3m 5P 7m 9M',\n    '1P 3m 7m 9M 11P',\n    '3m 7m 9M 10m 11P',\n    '3m 7m 9M 10m 12P',\n    '3m 7m 9M 10m 14m',\n    '3m 7m 9M 12P 15P',\n    '7m 10m 11P 14m 16M',\n    '7m 10m 12P 16M 18P',\n  ],\n  '-add9': ['1P 2M 3m 5P 8P', '1P 3m 5P 9M', '3m 5P 8P 9M 12P', '5P 8P 9M 10m 12P'],\n  '-11': [\n    '3m 5P 7m 9M 11P',\n    '7m 9M 10m 11P',\n    '1P 4P 7m 10m 12P',\n    '3m 7m 9M 11P 12P',\n    '7m 9M 10m 11P 12P',\n    '3m 7m 9M 11P 14m',\n    '4P 10m 12P 14m',\n    '5P 8P 11P 14m',\n    '5P 8P 11P 14m 16M',\n    '7m 10m 12P 16M 18P',\n    '7m 10m 11P 16M 21m',\n  ],\n  '-7b5': [\n    '1P 5d 7m 10m 11P',\n    '3m 5d 7m 8P 11P',\n    '5d 7m 8P 10m 11P',\n    '1P 7m 10m 12d',\n    '3m 7m 8P 10m 12d',\n    '3m 7m 8P 12d 14m',\n    '5d 8P 10m 11P 14m',\n    '7m 10m 11P 12d 14m',\n    '7m 10m 12d 14m 15P',\n    '5d 8P 10m 14m 17m',\n  ],\n  h9: [\n    '3m 5d 7m 9M 11P',\n    '1P 7m 9M 10m 12d',\n    '3m 7m 9M 12d 14m',\n    '5d 8P 9M 10m 14m',\n    '7m 10m 11P 12d 14m',\n    '7m 10m 12d 14m 16M',\n  ],\n  '-b6': ['1P 3m 5P 6m 8P', '3m 5P 8P 11P 13m', '5P 8P 10m 11P 13m'],\n  '-#5': ['1P 6m 8P 10m 13m', '3m 6m 8P 11P 13m', '6m 8P 10m 13m 15P'],\n  '7b9': ['1P 3M 7m 9m 10M', '3M 7m 8P 9m 10M', '3M 7m 8P 9m 14m', '7m 9m 10M 14m 15P'],\n  '7#9': ['1P 3M 7m 10m', '3M 7m 10m 10M 12P', '3M 7m 10m 12P 14m', '7m 10M 12P 14m 17m'],\n  '7#11': ['1P 3M 7m 9M 12d', '3M 7m 9M 12d 13M', '7m 10M 12d 13M 16M'],\n  '7b5': ['1P 3M 7m 9M 12d', '3M 7m 9M 12d 13M', '7m 10M 12d 13M 16M'],\n  '7#5': ['1P 3M 7m 10M 13m', '3M 7m 8P 10M 13m', '3M 7m 8P 13m 14m', '7m 10M 13m 14m 15P', '7m 10M 13m 14m 17M'],\n  '9#11': ['1P 7m 9M 10M 12d', '3M 7m 8P 9M 12d', '7m 10M 12d 15P 16M'],\n  '9b5': ['1P 7m 9M 10M 12d', '3M 7m 8P 9M 12d', '7m 10M 12d 15P 16M'],\n  '9#5': ['1P 7m 9M 10M 13m', '3M 7m 9M 10M 13m', '3M 7m 9M 13m 14m', '7m 10M 13m 14m 16M', '7m 10M 13m 16M 17M'],\n  '7b13': ['1P 3M 7m 10M 13m', '3M 7m 8P 10M 13m', '3M 7m 8P 13m 14m', '7m 10M 13m 14m 15P', '7m 10M 13m 14m 17M'],\n  '7#9#5': ['3M 7m 10m 10M 13m', '3M 7m 10m 13m 14m', '7m 10M 13m 14m 17m'],\n  '7#9b5': ['3M 7m 10m 10M 12d', '3M 7m 10m 12d 14m', '7m 10M 12d 14m 17m'],\n  '7#9#11': ['3M 7m 10m 10M 12d', '3M 7m 10m 12d 14m', '7m 10M 12d 14m 17m'],\n  '7b9#11': ['3M 7m 9m 10M 12d', '3M 7m 9m 12d 14m', '7m 8P 10M 12d 16m', '7m 10M 12d 14m 16m'],\n  '7b9b5': ['3M 7m 9m 10M 12d', '3M 7m 9m 12d 14m', '7m 8P 10M 12d 16m', '7m 10M 12d 14m 16m'],\n  '7b9#5': ['1P 7m 9m 10M 13m', '3M 7m 9m 10M 13m', '3M 7m 10M 13m 16m', '7m 10M 13m 14m 16m', '7m 10M 13m 16m 17M'],\n  '7b9#9': ['1P 3M 7m 9m 10m', '3M 7m 10m 13m 16m', '7m 10M 13m 16m 17m'],\n  '7b9b13': ['1P 7m 9m 10M 13m', '3M 7m 9m 10M 13m', '3M 7m 10M 13m 16m', '7m 10M 13m 14m 16m', '7m 10M 13m 16m 17M'],\n  '7alt': [\n    '3M 7m 8P 10m 13m',\n    '3M 7m 9m 12d 13m',\n    '3M 7m 9m 10m 13m',\n    '3M 7m 10m 13m 14m',\n    '3M 7m 9m 12d 14m',\n    '3M 7m 10m 13m 15P',\n    '3M 7m 10m 13m 16m',\n    '7m 10M 12d 14m 16m',\n    '7m 10M 12d 13m 16m',\n    '7m 10M 13m 15P 17m',\n    '7m 10M 13m 16m 17m',\n    '7m 10M 13m 16m 19d',\n  ],\n  '13#11': ['3M 7m 9M 12d 13M', '7m 10M 12d 13M 16M'],\n  '13b9': ['3M 7m 9m 10M 13M', '3M 7m 10M 13M 16m', '7m 10M 13M 16m 17M'],\n  '13#9': ['3M 7m 10m 10M 13M', '7m 10M 13M 14m 17m'],\n  '7b9sus': ['1P 5P 7m 9m 11P', '5P 7m 8P 9m 11P', '7m 8P 11P 14m 16m'],\n  '7susadd3': ['1P 4P 5P 7m 10M', '5P 8P 10M 11P 14m', '7m 11P 12P 15P 17M'],\n  '9sus': [\n    '1P 4P 6M 7m 9M',\n    '1P 5P 7m 9M 11P',\n    '4P 6M 7m 9M 11P',\n    '5P 8P 9M 11P 14m',\n    '7m 9M 11P 13M 15P',\n    '7m 11P 12P 14m 18P',\n  ],\n  '13sus': [\n    '1P 4P 6M 7m 9M',\n    '1P 7m 9M 11P 13M',\n    '4P 7m 9M 11P 13M',\n    '7m 9M 11P 13M 15P',\n    '7m 11P 13M 14m 16M',\n    '7m 11P 13M 16M 18P',\n  ],\n  '7b13sus': ['1P 5P 7m 11P 13m', '5P 7m 8P 11P 13m', '7m 11P 13m 14m 15P'],\n};\n","/*\nvoicings.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/tonal/voicings.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { stack, register } from '@strudel.cycles/core';\nimport { renderVoicing } from './tonleiter.mjs';\nimport _voicings from 'chord-voicings';\nimport { complex, simple } from './ireal.mjs';\nconst { dictionaryVoicing, minTopNoteDiff } = _voicings.default || _voicings; // parcel module resolution fuckup\n\nconst lefthand = {\n  m7: ['3m 5P 7m 9M', '7m 9M 10m 12P'],\n  7: ['3M 6M 7m 9M', '7m 9M 10M 13M'],\n  '^7': ['3M 5P 7M 9M', '7M 9M 10M 12P'],\n  69: ['3M 5P 6A 9M'],\n  m7b5: ['3m 5d 7m 8P', '7m 8P 10m 12d'],\n  '7b9': ['3M 6m 7m 9m', '7m 9m 10M 13m'],\n  '7b13': ['3M 6m 7m 9m', '7m 9m 10M 13m'],\n  o7: ['1P 3m 5d 6M', '5d 6M 8P 10m'],\n  '7#11': ['7m 9M 11A 13A'],\n  '7#9': ['3M 7m 9A'],\n  mM7: ['3m 5P 7M 9M', '7M 9M 10m 12P'],\n  m6: ['3m 5P 6M 9M', '6M 9M 10m 12P'],\n};\n\nconst guidetones = {\n  m7: ['3m 7m', '7m 10m'],\n  m9: ['3m 7m', '7m 10m'],\n  7: ['3M 7m', '7m 10M'],\n  '^7': ['3M 7M', '7M 10M'],\n  '^9': ['3M 7M', '7M 10M'],\n  69: ['3M 6M'],\n  6: ['3M 6M', '6M 10M'],\n  m7b5: ['3m 7m', '7m 10m'],\n  '7b9': ['3M 7m', '7m 10M'],\n  '7b13': ['3M 7m', '7m 10M'],\n  o7: ['3m 6M', '6M 10m'],\n  '7#11': ['3M 7m', '7m 10M'],\n  '7#9': ['3M 7m', '7m 10M'],\n  mM7: ['3m 7M', '7M 10m'],\n  m6: ['3m 6M', '6M 10m'],\n};\n\nconst triads = {\n  '': ['1P 3M 5P', '3M 5P 8P', '5P 8P 10M'],\n  M: ['1P 3M 5P', '3M 5P 8P', '5P 8P 10M'],\n  m: ['1P 3m 5P', '3m 5P 8P', '5P 8P 10m'],\n  o: ['1P 3m 5d', '3m 5d 8P', '5d 8P 10m'],\n  aug: ['1P 3m 5A', '3m 5A 8P', '5A 8P 10m'],\n};\n\nconst defaultDictionary = {\n  // triads\n  '': ['1P 3M 5P', '3M 5P 8P', '5P 8P 10M'],\n  M: ['1P 3M 5P', '3M 5P 8P', '5P 8P 10M'],\n  m: ['1P 3m 5P', '3m 5P 8P', '5P 8P 10m'],\n  o: ['1P 3m 5d', '3m 5d 8P', '5d 8P 10m'],\n  aug: ['1P 3m 5A', '3m 5A 8P', '5A 8P 10m'],\n  // sevenths chords\n  m7: ['3m 5P 7m 9M', '7m 9M 10m 12P'],\n  7: ['3M 6M 7m 9M', '7m 9M 10M 13M'],\n  '^7': ['3M 5P 7M 9M', '7M 9M 10M 12P'],\n  69: ['3M 5P 6A 9M'],\n  m7b5: ['3m 5d 7m 8P', '7m 8P 10m 12d'],\n  '7b9': ['3M 6m 7m 9m', '7m 9m 10M 13m'],\n  '7b13': ['3M 6m 7m 9m', '7m 9m 10M 13m'],\n  o7: ['1P 3m 5d 6M', '5d 6M 8P 10m'],\n  '7#11': ['7m 9M 11A 13A'],\n  '7#9': ['3M 7m 9A'],\n  mM7: ['3m 5P 7M 9M', '7M 9M 10m 12P'],\n  m6: ['3m 5P 6M 9M', '6M 9M 10m 12P'],\n};\n\nexport const voicingRegistry = {\n  lefthand: { dictionary: lefthand, range: ['F3', 'A4'], mode: 'below', anchor: 'a4' },\n  triads: { dictionary: triads, mode: 'below', anchor: 'a4' },\n  guidetones: { dictionary: guidetones, mode: 'above', anchor: 'a4' },\n  default: { dictionary: defaultDictionary, mode: 'below', anchor: 'a4' },\n};\nexport const setVoicingRange = (name, range) => addVoicings(name, voicingRegistry[name].dictionary, range);\n\n/**\n * Adds a new custom voicing dictionary.\n *\n * @name addVoicings\n * @memberof Pattern\n * @param {string} name identifier for the voicing dictionary\n * @param {Object} dictionary maps chord symbol to possible voicings\n * @param {Array} range min, max note\n * @returns Pattern\n * @example\n * addVoicings('cookie', {\n *   7: ['3M 7m 9M 12P 15P', '7m 10M 13M 16M 19P'],\n *   '^7': ['3M 6M 9M 12P 14M', '7M 10M 13M 16M 19P'],\n *   m7: ['8P 11P 14m 17m 19P', '5P 8P 11P 14m 17m'],\n *   m7b5: ['3m 5d 8P 11P 14m', '5d 8P 11P 14m 17m'],\n *   o7: ['3m 6M 9M 11A 15P'],\n *   '7alt': ['3M 7m 10m 13m 15P'],\n *   '7#11': ['7m 10m 13m 15P 17m'],\n * }, ['C3', 'C6'])\n * \"<C^7 A7 Dm7 G7>\".voicings('cookie').note()\n */\nexport const addVoicings = (name, dictionary, range = ['F3', 'A4']) => {\n  Object.assign(voicingRegistry, { [name]: { dictionary, range } });\n};\n\n// new call signature\nexport const registerVoicings = (name, dictionary, options = {}) => {\n  Object.assign(voicingRegistry, { [name]: { dictionary, ...options } });\n};\n\nconst getVoicing = (chord, dictionaryName, lastVoicing) => {\n  const { dictionary, range } = voicingRegistry[dictionaryName];\n  return dictionaryVoicing({\n    chord,\n    dictionary,\n    range,\n    picker: minTopNoteDiff,\n    lastVoicing,\n  });\n};\n\n/**\n * DEPRECATED: still works, but it is recommended you use .voicing instead (without s).\n * Turns chord symbols into voicings, using the smoothest voice leading possible.\n * Uses [chord-voicings package](https://github.com/felixroos/chord-voicings#chord-voicings).\n *\n * @name voicings\n * @memberof Pattern\n * @param {string} dictionary which voicing dictionary to use.\n * @returns Pattern\n * @example\n * stack(\"<C^7 A7 Dm7 G7>\".voicings('lefthand'), \"<C3 A2 D3 G2>\").note()\n */\n\nlet lastVoicing; // this now has to be global until another solution is found :-/\n// it used to be local to the voicings function at evaluation time\n// but since register will patternify by default, means that\n// the function is called over and over again, resetting the lastVoicing variables\nexport const voicings = register('voicings', function (dictionary, pat) {\n  return pat\n    .fmap((value) => {\n      lastVoicing = getVoicing(value, dictionary, lastVoicing);\n      return stack(...lastVoicing);\n    })\n    .outerJoin();\n});\n\n/**\n * Maps the chords of the incoming pattern to root notes in the given octave.\n *\n * @name rootNotes\n * @memberof Pattern\n * @param {octave} octave octave to use\n * @returns Pattern\n * @example\n * \"<C^7 A7 Dm7 G7>\".rootNotes(2).note()\n */\nexport const rootNotes = register('rootNotes', function (octave, pat) {\n  return pat.fmap((value) => {\n    const chord = value.chord || value;\n    const root = chord.match(/^([a-gA-G][b#]?).*$/)[1];\n    const note = root + octave;\n    return value.chord ? { note } : note;\n  });\n});\n\n/**\n * Turns chord symbols into voicings. You can use the following control params:\n *\n * - `chord`: Note, followed by chord symbol, e.g. C Am G7 Bb^7\n * - `dict`: voicing dictionary to use, falls back to default dictionary\n * - `anchor`: the note that is used to align the chord\n * - `mode`: how the voicing is aligned to the anchor\n *   - `below`: top note <= anchor\n *   - `duck`: top note <= anchor, anchor excluded\n *   - `above`: bottom note >= anchor\n * - `offset`: whole number that shifts the voicing up or down to the next voicing\n * - `n`: if set, the voicing is played like a scale. Overshooting numbers will be octaved\n *\n * All of the above controls are optional, except `chord`.\n * If you pass a pattern of strings to voicing, they will be interpreted as chords.\n *\n * @name voicing\n * @param {string} dictionary which voicing dictionary to use.\n * @returns Pattern\n * @example\n * voicing(\"<C Am F G>\")\n * @example\n * n(\"0 1 2 3 4 5 6 7\").chord(\"<C Am F G>\").voicing()\n */\nexport const voicing = register('voicing', function (pat) {\n  return pat\n    .fmap((value) => {\n      // destructure voicing controls out\n      value = typeof value === 'string' ? { chord: value } : value;\n      let { dictionary = 'default', chord, anchor, offset, mode, n, octaves, ...rest } = value;\n      dictionary =\n        typeof dictionary === 'string' ? voicingRegistry[dictionary] : { dictionary, mode: 'below', anchor: 'c5' };\n      let notes = renderVoicing({ ...dictionary, chord, anchor, offset, mode, n, octaves });\n\n      return stack(...notes)\n        .note()\n        .set(rest); // rest does not include voicing controls anymore!\n    })\n    .outerJoin();\n});\n\nexport function voicingAlias(symbol, alias, setOrSets) {\n  setOrSets = !Array.isArray(setOrSets) ? [setOrSets] : setOrSets;\n  setOrSets.forEach((set) => {\n    set[alias] = set[symbol];\n  });\n}\n\n// no symbol = major chord\nvoicingAlias('^', '', [simple, complex]);\n\nObject.keys(simple).forEach((symbol) => {\n  // add aliases for \"-\" === \"m\"\n  if (symbol.includes('-')) {\n    let alias = symbol.replace('-', 'm');\n    voicingAlias(symbol, alias, [complex, simple]);\n  }\n  // add aliases for \"^\" === \"M\"\n  if (symbol.includes('^')) {\n    let alias = symbol.replace('^', 'M');\n    voicingAlias(symbol, alias, [complex, simple]);\n  }\n});\n\nregisterVoicings('ireal', simple);\nregisterVoicings('ireal-ext', complex);\n"],"names":["fillStr","s","n","deprecate","original","alternative","fn","args","isNamed","src","isPitch","pitch","FIFTHS","STEPS_TO_OCTS","fifths","encode","step","alt","oct","dir","f","FIFTHS_TO_STEPS","decode","coord","o","unaltered","i","NoNote","cache","stepToLetter","altToAcc","accToAlt","acc","note","stringSrc","cached","value","parse","pitchName","REGEX","tokenizeNote","str","m","coordToNote","noteCoord","mod","SEMI","noteName","tokens","letter","octStr","name","pc","chroma","height","midi","freq","props","NoInterval","INTERVAL_TONAL_REGEX","INTERVAL_SHORTHAND_REGEX","REGEX2","tokenizeInterval","cache2","interval","parse2","pitchName2","SIZES","TYPES","num","q","t","type","simple","qToAlt","semitones","coordToInterval","forceDescending","isDescending","ivl","calcNum","d","altToQ","transpose","intervalName","note2","intervalCoord","tr","tonicIntervalsTransposer","intervals","tonic","len","normalized","index","octaves","root","distance","fromNote","toNote","from","to","fcoord","tcoord","octs","character","times","tokenize","abcToScientificNotation","a","scientificToAbcNotation","l","dist","abc_notation_default","ascR","b","descR","range","rotate","arr","compact","sortedNoteNames","notes","sortedUniqNoteNames","shuffle","rnd","permutations","perm","pos","newPerm","collection_default","EmptyPcset","setNumToChroma","num2","chromaToNumber","chroma2","isChroma","set","isPcsetNum","isPcset","get","listToChroma","chromaToPcset","pcset","IVLS","chromaToIntervals","intervals2","chromas","modes","normalize","binary","_","r","isEqual","s1","s2","isSubsetOf","isSupersetOf","isNoteIncludedIn","filter","isIncluded","pcset_default","chromaRotations","setNum","normalizedNum","CHORDS","data_default","NoChordType","dictionary","chordType","names","chord","x","symbols","keys","all","entries","removeAll","add","aliases","fullName","quality","getQuality","alias","addAlias","has","ivls","names2","chord_type_default","namedSet","pcToName","record","detect","source","options","findMatches","BITMASK","testChromaNumber","bitmask","chromaNumber","hasAnyThird","hasPerfectFifth","hasAnySeventh","hasNonPerfectFifth","hasAnyThirdAndPerfectFifthAndAnySeventh","withPerfectFifth","weight","tonicChroma","allModes","found","mode","modeWithPerfectFifth","chordName","baseNote","SCALES","NoScaleType","scale","scaleType","scale_type_default","NoChord","NUM_TYPES","getChord","chord2","typeName","optionalTonic","optionalRoot","getChordType","rootInterval","rootDegree","newNum","transposeNote","symbol","chordScales","isChordIncluded","scaleTypes","extended","isSuperset","chordTypes","reduced","isSubset","degrees","transpose2","degree","steps","chord_default","DATA","VALUES","denominator","shorthand","NoDuration","duration","shorthands","dur","dots","base","fraction2","calcDots","value2","fraction","duration_value_default","pow","numerator","name2","simplify","invert","IN","IQ","fromSemitones","semitones2","c","combinator","addTo","other","substract","transposeFifths","nFifths","nOcts","interval_default","coordA","coordB","isMidi","arg","toMidi","midiToFreq","tuning","L2","L440","freqToMidi","v","SHARPS","FLATS","midiToNoteName","pcsetFromChroma","pcset2","val","pcsetFromMidi","pcsetNearest","ch","pcsetSteps","pcsetDegrees","midi_default","NAMES","toName","onlyNotes","array","pitchClass","accidentals","octave","fromMidi","midi2","fromFreq","freq2","fromFreqSharps","fromMidiSharps","_tr","transposeBy","trBy","transposeFrom","trFrom","trFifths","transposeOctaves","ascending","descending","sortedNames","comparator","sortedUniqNames","enharmonic","destName","dest","srcChroma","destChroma","destOctOffset","destOct","note_default","NoRomanNumeral","fromPitch","romanNumeral","major","NAMES_MINOR","ROMANS","roman","upperRoman","roman_numeral_default","Empty","NoKey","NoKeyScale","NoMajorKey","NoMinorKey","mapScaleToType","list","sep","keyScale","grades","triads","chords","harmonicFunctions","gr","distInFifths","MajorScale","NaturalScale","HarmonicScale","MelodicScale","majorKey","keyScale2","alteration","romanInTonic","minorKey","tnc","majorTonicFromKeySignature","sig","key_default","MODES","NoMode","toMode","mode2","modeNum","triad","seventh","getType","modeName","chords2","triads2","tonics","seventhChords","destination","relativeTonic","mode_default","fromRomanNumerals","rn","toRomanNumerals","progression_default","numeric","result","last","chromatic","range_default","NoScale","scaleTypeNames","st","getScaleType","notesChroma","pitchClasses","scaleChroma","match","results","scaleName","scaleChords","inScale","scale2","scaleNotes","modeNames","getNoteNameOf","noteOrMidi","currNote","position","rangeOf","getName","nums","scale_default","NONE","CACHE","literal","stringifiedLiteral","ts","build","up2","low","up","down","time_signature_default","isPowerOfTwo","upper","lower","additive","Tonal","Core","PcSet","Pcset","ChordDictionary","ChordType","ScaleDictionary","ScaleType","scaleOffset","offset","Scale","Note","fromPc","noteIndex","direction","_mod","register","intervalOrSemitones","pat","hap","Interval","scaleTranspose","isObject","asNumber","flats","pcs","sharps","accs","pc2chroma","rest","sum","sign","tokenizeChord","note2pc","note2chroma","midi2chroma","pitch2chroma","defaultOctave","isNoteWithOctave","isNote","step2semitones","midi2note","sharp","scaleStep","noteToMidi","octOffset","modeTarget","renderVoicing","anchor","rootChroma","anchorChroma","voicings","voicing","minDistance","bestIndex","chromaDiffs","targetStep","diff","octDiff","indexWithOffset","anchorMidi","voicingMidi","getBestVoicing_1","getBestVoicing","voicingOptions","finder","picker","lastVoicing","tokenizeChord_1","voicingsInRange_1","tonal_1","require$$0","dictionaryVoicing_1","require$$1","require$$2","voicingsInRange","_a","notesInRange","voiced","relativeIntervals","bottomPitchClass","starts","start","__assign","this","p","__rest","e","exports","dictionaryVoicingFinder","chordSymbol","dictionaryVoicing","minTopNoteDiff_1","minTopNoteDiff","best","current","require$$3","complex","_voicings","lefthand","guidetones","defaultDictionary","voicingRegistry","setVoicingRange","addVoicings","registerVoicings","getVoicing","dictionaryName","stack","rootNotes","voicingAlias","setOrSets"],"mappings":"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IAAK,CACH,iBACA,kBACA,kBACA,mBACA,oBACA,mBACD,EACD,IAAK,CACH,iBACA,mBACA,mBACA,mBACA,oBACA,mBACD,EACD,IAAK,CACH,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACD,EACD,KAAM,CACJ,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,qBACA,qBACA,oBACD,EACD,KAAM,CACJ,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,qBACA,qBACA,oBACA,oBACD,EACD,OAAQ,CACN,iBACA,kBACA,kBACA,mBACA,oBACA,oBACD,EACD,GAAI,CACF,mBACA,kBACA,mBACA,gBACA,mBACA,mBACA,oBACA,qBACA,qBACA,mBACD,EACD,GAAI,CACF,mBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,oBACD,EACD,KAAM,CACJ,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,qBACA,qBACA,oBACD,EACD,MAAO,CACL,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBACA,qBACA,qBACA,oBACD,EACD,QAAS,CACP,iBACA,mBACA,mBACA,mBACA,oBACA,qBACA,qBACA,oBACD,EACD,QAAS,CACP,iBACA,mBACA,mBACA,mBACA,mBACA,qBACA,oBACD,EACD,OAAQ,CAAC,mBAAoB,mBAAoB,oBAAqB,qBAAsB,oBAAoB,EAChH,KAAM,CACJ,iBACA,iBACA,mBACA,kBACA,mBACA,kBACA,oBACA,mBACD,EACD,MAAO,CACL,iBACA,iBACA,mBACA,mBACA,kBACA,mBACA,mBACD,EACD,MAAO,CACL,iBACA,mBACA,mBACA,mBACA,mBACA,qBACA,oBACD,EACD,MAAO,CACL,iBACA,mBACA,mBACA,mBACA,mBACA,qBACA,oBACD,EACD,KAAM,CACJ,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,qBACA,oBACD,EACD,QAAS,CAAC,iBAAkB,cAAe,kBAAmB,kBAAkB,EAChF,MAAO,CACL,kBACA,gBACA,mBACA,mB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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,25,26,27,28]}