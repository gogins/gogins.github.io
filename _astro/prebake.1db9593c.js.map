{"version":3,"mappings":"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","names":["bufferCache","loadCache","getCachedBuffer","url","humanFileSize","bytes","si","thresh","units","u","getSampleBufferSource","s","n","note","speed","freq","bank","resolveUrl","transpose","logger","midi","valueToMidi","ac","getAudioContext","sampleUrl","midiDiff","noteA","noteToMidi","closest","k","key","j","buffer","loadBuffer","reverseBuffer","bufferSource","playbackRate","label","timestamp","res","took","size","decoded","reversed","channel","getLoadedBuffer","processSampleMap","sampleMap","fn","baseUrl","value","replaceUrl","v","samples","resourcePrefixHandlers","registerSamplesPrefix","prefix","resolve","getSamplesPrefixHandler","handler","options","_","path","base","json","error","prebake","tag","registerSound","t","hapValue","onended","onTriggerSample","cutGroups","unit","nudge","cut","loop","clip","loopBegin","begin","loopEnd","end","attack","decay","sustain","release","time","offset","envelope","releaseEnvelope","getEnvelope","out","handle","endTime","playWholeBuffer","releaseTime","bufferDuration","prev","mod","range","type","ctx","osc","g","fm","harmonicityRatio","modulationIndex","wave","modfreq","modgain","registerSynthSounds","fmHarmonicity","fmModulationIndex","fmEnvelopeType","fmAttack","fmDecay","fmSustain","fmRelease","fmVelocity","fmWaveform","vib","vibmod","midiToFreq","o","stop","getOscillator","stopFm","fmEnvelope","modulator","getExpEnvelope","gainNode","waveformN","partials","real","imag","amplitudes","vibrato_oscillator","gain","buildSamples","volume","randomness","frequency","shape","shapeCurve","slide","deltaSlide","pitchJump","pitchJumpTime","repeatTime","noise","modulation","bitCrush","delay","sustainVolume","tremolo","PI2","sampleRate","sign","startSlide","startFrequency","b","tm","i","r","c","f","length","getZZFX","zrand","curve","lfo","zmod","zcrush","zdelay","duration","zzfx","sustainTime","context","source","registerZZFXSounds","maxPan","panwidth","pan","width","Pattern","TAURI","BaseDirectory","readDir","readBinaryFile","writeTextFile","readTextFile","exists","dir","hasStrudelJson","subpath","loadStrudelJson","contents","fileResolver","writeStrudelJson","children","tree","count","walkFileTree","entry","parent","filepath","node","isAudioFile","filename","uint8ArrayToDataURL","uint8Array","blob","resolveFileURL","playFile","__vitePreload","registerSoundfonts"],"sources":["../../../packages/superdough/sampler.mjs","../../../packages/superdough/synth.mjs","../../../packages/superdough/zzfx_fork.mjs","../../../packages/superdough/zzfx.mjs","../../src/repl/piano.mjs","../../src/repl/files.mjs","../../src/repl/prebake.mjs"],"sourcesContent":["import { noteToMidi, valueToMidi } from './util.mjs';\nimport { getAudioContext, registerSound } from './index.mjs';\nimport { getEnvelope } from './helpers.mjs';\nimport { logger } from './logger.mjs';\n\nconst bufferCache = {}; // string: Promise<ArrayBuffer>\nconst loadCache = {}; // string: Promise<ArrayBuffer>\n\nexport const getCachedBuffer = (url) => bufferCache[url];\n\nfunction humanFileSize(bytes, si) {\n  var thresh = si ? 1000 : 1024;\n  if (bytes < thresh) return bytes + ' B';\n  var units = si\n    ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n    : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n  var u = -1;\n  do {\n    bytes /= thresh;\n    ++u;\n  } while (bytes >= thresh);\n  return bytes.toFixed(1) + ' ' + units[u];\n}\n\nexport const getSampleBufferSource = async (s, n, note, speed, freq, bank, resolveUrl) => {\n  let transpose = 0;\n  if (freq !== undefined && note !== undefined) {\n    logger('[sampler] hap has note and freq. ignoring note', 'warning');\n  }\n  let midi = valueToMidi({ freq, note }, 36);\n  transpose = midi - 36; // C3 is middle C\n\n  const ac = getAudioContext();\n  let sampleUrl;\n  if (Array.isArray(bank)) {\n    sampleUrl = bank[n % bank.length];\n  } else {\n    const midiDiff = (noteA) => noteToMidi(noteA) - midi;\n    // object format will expect keys as notes\n    const closest = Object.keys(bank)\n      .filter((k) => !k.startsWith('_'))\n      .reduce(\n        (closest, key, j) => (!closest || Math.abs(midiDiff(key)) < Math.abs(midiDiff(closest)) ? key : closest),\n        null,\n      );\n    transpose = -midiDiff(closest); // semitones to repitch\n    sampleUrl = bank[closest][n % bank[closest].length];\n  }\n  if (resolveUrl) {\n    sampleUrl = await resolveUrl(sampleUrl);\n  }\n  let buffer = await loadBuffer(sampleUrl, ac, s, n);\n  if (speed < 0) {\n    // should this be cached?\n    buffer = reverseBuffer(buffer);\n  }\n  const bufferSource = ac.createBufferSource();\n  bufferSource.buffer = buffer;\n  const playbackRate = 1.0 * Math.pow(2, transpose / 12);\n  // bufferSource.playbackRate.value = Math.pow(2, transpose / 12);\n  bufferSource.playbackRate.value = playbackRate;\n  return bufferSource;\n};\n\nexport const loadBuffer = (url, ac, s, n = 0) => {\n  const label = s ? `sound \"${s}:${n}\"` : 'sample';\n  if (!loadCache[url]) {\n    logger(`[sampler] load ${label}..`, 'load-sample', { url });\n    const timestamp = Date.now();\n    loadCache[url] = fetch(url)\n      .then((res) => res.arrayBuffer())\n      .then(async (res) => {\n        const took = Date.now() - timestamp;\n        const size = humanFileSize(res.byteLength);\n        // const downSpeed = humanFileSize(res.byteLength / took);\n        logger(`[sampler] load ${label}... done! loaded ${size} in ${took}ms`, 'loaded-sample', { url });\n        const decoded = await ac.decodeAudioData(res);\n        bufferCache[url] = decoded;\n        return decoded;\n      });\n  }\n  return loadCache[url];\n};\n\nexport function reverseBuffer(buffer) {\n  const ac = getAudioContext();\n  const reversed = ac.createBuffer(buffer.numberOfChannels, buffer.length, ac.sampleRate);\n  for (let channel = 0; channel < buffer.numberOfChannels; channel++) {\n    reversed.copyToChannel(buffer.getChannelData(channel).slice().reverse(), channel, channel);\n  }\n  return reversed;\n}\n\nexport const getLoadedBuffer = (url) => {\n  return bufferCache[url];\n};\n\nexport const processSampleMap = (sampleMap, fn, baseUrl = sampleMap._base || '') => {\n  return Object.entries(sampleMap).forEach(([key, value]) => {\n    if (typeof value === 'string') {\n      value = [value];\n    }\n    if (typeof value !== 'object') {\n      throw new Error('wrong sample map format for ' + key);\n    }\n    baseUrl = value._base || baseUrl;\n    const replaceUrl = (v) => (baseUrl + v).replace('github:', 'https://raw.githubusercontent.com/');\n    if (Array.isArray(value)) {\n      //return [key, value.map(replaceUrl)];\n      value = value.map(replaceUrl);\n    } else {\n      // must be object\n      value = Object.fromEntries(\n        Object.entries(value).map(([note, samples]) => {\n          return [note, (typeof samples === 'string' ? [samples] : samples).map(replaceUrl)];\n        }),\n      );\n    }\n    fn(key, value);\n  });\n};\n\n// allows adding a custom url prefix handler\n// for example, it is used by the desktop app to load samples starting with '~/music'\nlet resourcePrefixHandlers = {};\nexport function registerSamplesPrefix(prefix, resolve) {\n  resourcePrefixHandlers[prefix] = resolve;\n}\n// finds a prefix handler for the given url (if any)\nfunction getSamplesPrefixHandler(url) {\n  const handler = Object.entries(resourcePrefixHandlers).find(([key]) => url.startsWith(key));\n  if (handler) {\n    return handler[1];\n  }\n  return;\n}\n\n/**\n * Loads a collection of samples to use with `s`\n * @example\n * samples('github:tidalcycles/Dirt-Samples/master');\n * s(\"[bd ~]*2, [~ hh]*2, ~ sd\")\n * @example\n * samples({\n *  bd: '808bd/BD0000.WAV',\n *  sd: '808sd/SD0010.WAV'\n *  }, 'https://raw.githubusercontent.com/tidalcycles/Dirt-Samples/master/');\n * s(\"[bd ~]*2, [~ hh]*2, ~ sd\")\n *\n */\n\nexport const samples = async (sampleMap, baseUrl = sampleMap._base || '', options = {}) => {\n  if (typeof sampleMap === 'string') {\n    // check if custom prefix handler\n    const handler = getSamplesPrefixHandler(sampleMap);\n    if (handler) {\n      return handler(sampleMap);\n    }\n    if (sampleMap.startsWith('github:')) {\n      let [_, path] = sampleMap.split('github:');\n      path = path.endsWith('/') ? path.slice(0, -1) : path;\n      sampleMap = `https://raw.githubusercontent.com/${path}/strudel.json`.replace(\"//strudel.json\", \"/strudel.json\");\n    }\n    if (typeof fetch !== 'function') {\n      // not a browser\n      return;\n    }\n    const base = sampleMap.split('/').slice(0, -1).join('/');\n    if (typeof fetch === 'undefined') {\n      // skip fetch when in node / testing\n      return;\n    }\n    return fetch(sampleMap)\n      .then((res) => res.json())\n      .then((json) => samples(json, baseUrl || json._base || base, options))\n      .catch((error) => {\n        console.error(error);\n        throw new Error(`error loading \"${sampleMap}\"`);\n      });\n  }\n  const { prebake, tag } = options;\n  processSampleMap(\n    sampleMap,\n    (key, value) =>\n      registerSound(key, (t, hapValue, onended) => onTriggerSample(t, hapValue, onended, value), {\n        type: 'sample',\n        samples: value,\n        baseUrl,\n        prebake,\n        tag,\n      }),\n    baseUrl,\n  );\n};\n\nconst cutGroups = [];\n\nexport async function onTriggerSample(t, value, onended, bank, resolveUrl) {\n  let {\n    s,\n    freq,\n    unit,\n    nudge = 0, // TODO: is this in seconds?\n    cut,\n    loop,\n    clip = undefined, // if 1, samples will be cut off when the hap ends\n    n = 0,\n    note,\n    speed = 1, // sample playback speed\n    loopBegin = 0,\n    begin = 0,\n    loopEnd = 1,\n    end = 1,\n  } = value;\n  // load sample\n  if (speed === 0) {\n    // no playback\n    return;\n  }\n  loop = s.startsWith('wt_') ? 1 : value.loop;\n  const ac = getAudioContext();\n  // destructure adsr here, because the default should be different for synths and samples\n  const { attack = 0.001, decay = 0.001, sustain = 1, release = 0.001 } = value;\n  //const soundfont = getSoundfontKey(s);\n  const time = t + nudge;\n\n  const bufferSource = await getSampleBufferSource(s, n, note, speed, freq, bank, resolveUrl);\n\n  // asny stuff above took too long?\n  if (ac.currentTime > t) {\n    logger(`[sampler] still loading sound \"${s}:${n}\"`, 'highlight');\n    // console.warn('sample still loading:', s, n);\n    return;\n  }\n  if (!bufferSource) {\n    logger(`[sampler] could not load \"${s}:${n}\"`, 'error');\n    return;\n  }\n  bufferSource.playbackRate.value = Math.abs(speed) * bufferSource.playbackRate.value;\n  if (unit === 'c') {\n    // are there other units?\n    bufferSource.playbackRate.value = bufferSource.playbackRate.value * bufferSource.buffer.duration * 1; //cps;\n  }\n  // \"The computation of the offset into the sound is performed using the sound buffer's natural sample rate,\n  // rather than the current playback rate, so even if the sound is playing at twice its normal speed,\n  // the midway point through a 10-second audio buffer is still 5.\"\n  const offset = begin * bufferSource.buffer.duration;\n  if (loop) {\n    bufferSource.loop = true;\n    bufferSource.loopStart = loopBegin * bufferSource.buffer.duration - offset;\n    bufferSource.loopEnd = loopEnd * bufferSource.buffer.duration - offset;\n  }\n  bufferSource.start(time, offset);\n  const { node: envelope, stop: releaseEnvelope } = getEnvelope(attack, decay, sustain, release, 1, t);\n  bufferSource.connect(envelope);\n  const out = ac.createGain(); // we need a separate gain for the cutgroups because firefox...\n  envelope.connect(out);\n  bufferSource.onended = function () {\n    bufferSource.disconnect();\n    envelope.disconnect();\n    out.disconnect();\n    onended();\n  };\n  const stop = (endTime, playWholeBuffer = clip === undefined && loop === undefined) => {\n    let releaseTime = endTime;\n    if (playWholeBuffer) {\n      const bufferDuration = bufferSource.buffer.duration / bufferSource.playbackRate.value;\n      releaseTime = t + (end - begin) * bufferDuration;\n    }\n    bufferSource.stop(releaseTime + release);\n    releaseEnvelope(releaseTime);\n  };\n  const handle = { node: out, bufferSource, stop };\n\n  // cut groups\n  if (cut !== undefined) {\n    const prev = cutGroups[cut];\n    if (prev) {\n      prev.node.gain.setValueAtTime(1, time);\n      prev.node.gain.linearRampToValueAtTime(0, time + 0.01);\n    }\n    cutGroups[cut] = handle;\n  }\n\n  return handle;\n}\n","import { midiToFreq, noteToMidi } from './util.mjs';\nimport { registerSound, getAudioContext } from './superdough.mjs';\nimport { gainNode, getEnvelope, getExpEnvelope } from './helpers.mjs';\n\nconst mod = (freq, range = 1, type = 'sine') => {\n  const ctx = getAudioContext();\n  const osc = ctx.createOscillator();\n  osc.type = type;\n  osc.frequency.value = freq;\n  osc.start();\n  const g = new GainNode(ctx, { gain: range });\n  osc.connect(g); // -range, range\n  return { node: g, stop: (t) => osc.stop(t) };\n};\n\nconst fm = (osc, harmonicityRatio, modulationIndex, wave = 'sine') => {\n  const carrfreq = osc.frequency.value;\n  const modfreq = carrfreq * harmonicityRatio;\n  const modgain = modfreq * modulationIndex;\n  return mod(modfreq, modgain, wave);\n};\n\nexport function registerSynthSounds() {\n  ['sine', 'square', 'triangle', 'sawtooth'].forEach((wave) => {\n    registerSound(\n      wave,\n      (t, value, onended) => {\n        // destructure adsr here, because the default should be different for synths and samples\n        let {\n          attack = 0.001,\n          decay = 0.05,\n          sustain = 0.6,\n          release = 0.01,\n          fmh: fmHarmonicity = 1,\n          fmi: fmModulationIndex,\n          fmenv: fmEnvelopeType = 'lin',\n          fmattack: fmAttack,\n          fmdecay: fmDecay,\n          fmsustain: fmSustain,\n          fmrelease: fmRelease,\n          fmvelocity: fmVelocity,\n          fmwave: fmWaveform = 'sine',\n          vib = 0,\n          vibmod = 0.5,\n        } = value;\n        let { n, note, freq } = value;\n        // with synths, n and note are the same thing\n        note = note || 36;\n        if (typeof note === 'string') {\n          note = noteToMidi(note); // e.g. c3 => 48\n        }\n        // get frequency\n        if (!freq && typeof note === 'number') {\n          freq = midiToFreq(note); // + 48);\n        }\n        // maybe pull out the above frequency resolution?? (there is also getFrequency but it has no default)\n        // make oscillator\n        const { node: o, stop } = getOscillator({\n          t,\n          s: wave,\n          freq,\n          vib,\n          vibmod,\n          partials: n,\n        });\n\n        // FM + FM envelope\n        let stopFm, fmEnvelope;\n        if (fmModulationIndex) {\n          const { node: modulator, stop } = fm(o, fmHarmonicity, fmModulationIndex, fmWaveform);\n          if (![fmAttack, fmDecay, fmSustain, fmRelease, fmVelocity].find((v) => v !== undefined)) {\n            // no envelope by default\n            modulator.connect(o.frequency);\n          } else {\n            fmAttack = fmAttack ?? 0.001;\n            fmDecay = fmDecay ?? 0.001;\n            fmSustain = fmSustain ?? 1;\n            fmRelease = fmRelease ?? 0.001;\n            fmVelocity = fmVelocity ?? 1;\n            fmEnvelope = getEnvelope(fmAttack, fmDecay, fmSustain, fmRelease, fmVelocity, t);\n            if (fmEnvelopeType === 'exp') {\n              fmEnvelope = getExpEnvelope(fmAttack, fmDecay, fmSustain, fmRelease, fmVelocity, t);\n              fmEnvelope.node.maxValue = fmModulationIndex * 2;\n              fmEnvelope.node.minValue = 0.00001;\n            }\n            modulator.connect(fmEnvelope.node);\n            fmEnvelope.node.connect(o.frequency);\n          }\n          stopFm = stop;\n        }\n\n        // turn down\n        const g = gainNode(0.3);\n\n        // gain envelope\n        const { node: envelope, stop: releaseEnvelope } = getEnvelope(attack, decay, sustain, release, 1, t);\n\n        o.onended = () => {\n          o.disconnect();\n          g.disconnect();\n          onended();\n        };\n        return {\n          node: o.connect(g).connect(envelope),\n          stop: (releaseTime) => {\n            releaseEnvelope(releaseTime);\n            fmEnvelope?.stop(releaseTime);\n            let end = releaseTime + release;\n            stop(end);\n            stopFm?.(end);\n          },\n        };\n      },\n      { type: 'synth', prebake: true },\n    );\n  });\n}\n\nexport function waveformN(partials, type) {\n  const real = new Float32Array(partials + 1);\n  const imag = new Float32Array(partials + 1);\n  const ac = getAudioContext();\n  const osc = ac.createOscillator();\n\n  const amplitudes = {\n    sawtooth: (n) => 1 / n,\n    square: (n) => (n % 2 === 0 ? 0 : 1 / n),\n    triangle: (n) => (n % 2 === 0 ? 0 : 1 / (n * n)),\n  };\n\n  if (!amplitudes[type]) {\n    throw new Error(`unknown wave type ${type}`);\n  }\n\n  real[0] = 0; // dc offset\n  imag[0] = 0;\n  let n = 1;\n  while (n <= partials) {\n    real[n] = amplitudes[type](n);\n    imag[n] = 0;\n    n++;\n  }\n\n  const wave = ac.createPeriodicWave(real, imag);\n  osc.setPeriodicWave(wave);\n  return osc;\n}\n\nexport function getOscillator({ s, freq, t, vib, vibmod, partials }) {\n  // Make oscillator with partial count\n  let o;\n  if (!partials || s === 'sine') {\n    o = getAudioContext().createOscillator();\n    o.type = s || 'triangle';\n  } else {\n    o = waveformN(partials, s);\n  }\n  o.frequency.value = Number(freq);\n  o.start(t);\n\n  // Additional oscillator for vibrato effect\n  let vibrato_oscillator;\n  if (vib > 0) {\n    vibrato_oscillator = getAudioContext().createOscillator();\n    vibrato_oscillator.frequency.value = vib;\n    const gain = getAudioContext().createGain();\n    // Vibmod is the amount of vibrato, in semitones\n    gain.gain.value = vibmod * 100;\n    vibrato_oscillator.connect(gain);\n    gain.connect(o.detune);\n    vibrato_oscillator.start(t);\n  }\n\n  return {\n    node: o,\n    stop: (time) => {\n      vibrato_oscillator?.stop(time);\n      o.stop(time);\n    },\n  };\n}\n","import { getAudioContext } from './superdough.mjs';\n\n// https://github.com/KilledByAPixel/ZzFX/blob/master/ZzFX.js#L85C5-L180C6\n// changes: replaced this.volume with 1 + using sampleRate from getAudioContext()\nexport function buildSamples(\n  volume = 1,\n  randomness = 0.05,\n  frequency = 220,\n  attack = 0,\n  sustain = 0,\n  release = 0.1,\n  shape = 0,\n  shapeCurve = 1,\n  slide = 0,\n  deltaSlide = 0,\n  pitchJump = 0,\n  pitchJumpTime = 0,\n  repeatTime = 0,\n  noise = 0,\n  modulation = 0,\n  bitCrush = 0,\n  delay = 0,\n  sustainVolume = 1,\n  decay = 0,\n  tremolo = 0,\n) {\n  // init parameters\n  let PI2 = Math.PI * 2,\n    sampleRate = getAudioContext().sampleRate,\n    sign = (v) => (v > 0 ? 1 : -1),\n    startSlide = (slide *= (500 * PI2) / sampleRate / sampleRate),\n    startFrequency = (frequency *= ((1 + randomness * 2 * Math.random() - randomness) * PI2) / sampleRate),\n    b = [],\n    t = 0,\n    tm = 0,\n    i = 0,\n    j = 1,\n    r = 0,\n    c = 0,\n    s = 0,\n    f,\n    length;\n\n  // scale by sample rate\n  attack = attack * sampleRate + 9; // minimum attack to prevent pop\n  decay *= sampleRate;\n  sustain *= sampleRate;\n  release *= sampleRate;\n  delay *= sampleRate;\n  deltaSlide *= (500 * PI2) / sampleRate ** 3;\n  modulation *= PI2 / sampleRate;\n  pitchJump *= PI2 / sampleRate;\n  pitchJumpTime *= sampleRate;\n  repeatTime = (repeatTime * sampleRate) | 0;\n\n  // generate waveform\n  for (length = (attack + decay + sustain + release + delay) | 0; i < length; b[i++] = s) {\n    if (!(++c % ((bitCrush * 100) | 0))) {\n      // bit crush\n      s = shape\n        ? shape > 1\n          ? shape > 2\n            ? shape > 3 // wave shape\n              ? Math.sin((t % PI2) ** 3) // 4 noise\n              : Math.max(Math.min(Math.tan(t), 1), -1) // 3 tan\n            : 1 - (((((2 * t) / PI2) % 2) + 2) % 2) // 2 saw\n          : 1 - 4 * Math.abs(Math.round(t / PI2) - t / PI2) // 1 triangle\n        : Math.sin(t); // 0 sin\n\n      s =\n        (repeatTime\n          ? 1 - tremolo + tremolo * Math.sin((PI2 * i) / repeatTime) // tremolo\n          : 1) *\n        sign(s) *\n        Math.abs(s) ** shapeCurve * // curve 0=square, 2=pointy\n        volume *\n        1 * // envelope\n        (i < attack\n          ? i / attack // attack\n          : i < attack + decay // decay\n          ? 1 - ((i - attack) / decay) * (1 - sustainVolume) // decay falloff\n          : i < attack + decay + sustain // sustain\n          ? sustainVolume // sustain volume\n          : i < length - delay // release\n          ? ((length - i - delay) / release) * // release falloff\n            sustainVolume // release volume\n          : 0); // post release\n\n      s = delay\n        ? s / 2 +\n          (delay > i\n            ? 0 // delay\n            : ((i < length - delay ? 1 : (length - i) / delay) * // release delay\n                b[(i - delay) | 0]) /\n              2)\n        : s; // sample delay\n    }\n\n    f =\n      (frequency += slide += deltaSlide) * // frequency\n      Math.cos(modulation * tm++); // modulation\n    t += f - f * noise * (1 - (((Math.sin(i) + 1) * 1e9) % 2)); // noise\n\n    if (j && ++j > pitchJumpTime) {\n      // pitch jump\n      frequency += pitchJump; // apply pitch jump\n      startFrequency += pitchJump; // also apply to start\n      j = 0; // stop pitch jump time\n    }\n\n    if (repeatTime && !(++r % repeatTime)) {\n      // repeat\n      frequency = startFrequency; // reset frequency\n      slide = startSlide; // reset slide\n      j ||= 1; // reset pitch jump time\n    }\n  }\n\n  return b;\n}\n","//import { ZZFX } from 'zzfx';\nimport { midiToFreq, noteToMidi } from './util.mjs';\nimport { registerSound, getAudioContext } from './superdough.mjs';\nimport { buildSamples } from './zzfx_fork.mjs';\n\nexport const getZZFX = (value, t) => {\n  let {\n    s,\n    note = 36,\n    freq,\n    //\n    zrand = 0,\n    attack = 0,\n    decay = 0,\n    sustain = 0.8,\n    release = 0.1,\n    curve = 1,\n    slide = 0,\n    deltaSlide = 0,\n    pitchJump = 0,\n    pitchJumpTime = 0,\n    lfo = 0,\n    noise = 0,\n    zmod = 0,\n    zcrush = 0,\n    zdelay = 0,\n    tremolo = 0,\n    duration = 0.2,\n    zzfx,\n  } = value;\n  const sustainTime = Math.max(duration - attack - decay, 0);\n  if (typeof note === 'string') {\n    note = noteToMidi(note); // e.g. c3 => 48\n  }\n  // get frequency\n  if (!freq && typeof note === 'number') {\n    freq = midiToFreq(note);\n  }\n  s = s.replace('z_', '');\n  const shape = ['sine', 'triangle', 'sawtooth', 'tan', 'noise'].indexOf(s) || 0;\n  curve = s === 'square' ? 0 : curve;\n\n  const params = zzfx || [\n    0.25, // volume\n    zrand,\n    freq,\n    attack,\n    sustainTime,\n    release,\n    shape,\n    curve,\n    slide,\n    deltaSlide,\n    pitchJump,\n    pitchJumpTime,\n    lfo,\n    noise,\n    zmod,\n    zcrush,\n    zdelay,\n    sustain, // sustain volume!\n    decay,\n    tremolo,\n  ];\n  // console.log(redableZZFX(params));\n\n  const samples = /* ZZFX. */ buildSamples(...params);\n  const context = getAudioContext();\n  const buffer = context.createBuffer(1, samples.length, context.sampleRate);\n  buffer.getChannelData(0).set(samples);\n  const source = getAudioContext().createBufferSource();\n  source.buffer = buffer;\n  source.start(t);\n  return {\n    node: source,\n  };\n};\n\nexport function registerZZFXSounds() {\n  ['zzfx', 'z_sine', 'z_sawtooth', 'z_triangle', 'z_square', 'z_tan', 'z_noise'].forEach((wave) => {\n    registerSound(\n      wave,\n      (t, value, onended) => {\n        const { node: o } = getZZFX({ s: wave, ...value }, t);\n        o.onended = () => {\n          o.disconnect();\n          onended();\n        };\n        return {\n          node: o,\n          stop: () => {},\n        };\n      },\n      { type: 'synth', prebake: true },\n    );\n  });\n}\n\n// just for debugging\nfunction redableZZFX(params) {\n  const paramOrder = [\n    'volume',\n    'zrand',\n    'frequency',\n    'attack',\n    'sustain',\n    'release',\n    'shape',\n    'curve',\n    'slide',\n    'deltaSlide',\n    'pitchJump',\n    'pitchJumpTime',\n    'lfo',\n    'noise',\n    'zmod',\n    'zcrush',\n    'zdelay',\n    'sustainVolume',\n    'decay',\n    'tremolo',\n  ];\n  return Object.fromEntries(paramOrder.map((param, i) => [param, params[i]]));\n}\n","import { Pattern, noteToMidi, valueToMidi } from '@strudel.cycles/core';\n\nconst maxPan = noteToMidi('C8');\nconst panwidth = (pan, width) => pan * width + (1 - width) / 2;\n\nPattern.prototype.piano = function () {\n  return this.clip(1)\n    .s('piano')\n    .release(0.1)\n    .fmap((value) => {\n      const midi = valueToMidi(value);\n      // pan by pitch\n      const pan = panwidth(Math.min(Math.round(midi) / maxPan, 1), 0.5);\n      return { ...value, pan: (value.pan || 1) * pan };\n    });\n};\n","import {\n  processSampleMap,\n  registerSamplesPrefix,\n  registerSound,\n  onTriggerSample,\n  getAudioContext,\n  loadBuffer,\n} from '@strudel.cycles/webaudio';\n\nlet TAURI;\nif (typeof window !== 'undefined') {\n  TAURI = window?.__TAURI__;\n}\nexport const { BaseDirectory, readDir, readBinaryFile, writeTextFile, readTextFile, exists } = TAURI?.fs || {};\n\nexport const dir = BaseDirectory?.Audio; // https://tauri.app/v1/api/js/path#audiodir\nconst prefix = '~/music/';\n\nasync function hasStrudelJson(subpath) {\n  return exists(subpath + '/strudel.json', { dir });\n}\n\nasync function loadStrudelJson(subpath) {\n  const contents = await readTextFile(subpath + '/strudel.json', { dir });\n  const sampleMap = JSON.parse(contents);\n  processSampleMap(sampleMap, (key, value) => {\n    registerSound(key, (t, hapValue, onended) => onTriggerSample(t, hapValue, onended, value, fileResolver(subpath)), {\n      type: 'sample',\n      samples: value,\n      fileSystem: true,\n      tag: 'local',\n    });\n  });\n}\n\nasync function writeStrudelJson(subpath) {\n  const children = await readDir(subpath, { dir, recursive: true });\n  const name = subpath.split('/').slice(-1)[0];\n  const tree = { name, children };\n\n  let samples = {};\n  let count = 0;\n  walkFileTree(tree, (entry, parent) => {\n    if (['wav', 'mp3'].includes(entry.name.split('.').slice(-1)[0])) {\n      samples[parent.name] = samples[parent.name] || [];\n      count += 1;\n      samples[parent.name].push(entry.subpath.slice(1).concat([entry.name]).join('/'));\n    }\n  });\n  const json = JSON.stringify(samples, null, 2);\n  const filepath = subpath + '/strudel.json';\n  await writeTextFile(filepath, json, { dir });\n  console.log(`wrote strudel.json with ${count} samples to ${subpath}!`);\n}\n\nregisterSamplesPrefix(prefix, async (path) => {\n  const subpath = path.replace(prefix, '');\n  const hasJson = await hasStrudelJson(subpath);\n  if (!hasJson) {\n    await writeStrudelJson(subpath);\n  }\n  return loadStrudelJson(subpath);\n});\n\nexport const walkFileTree = (node, fn) => {\n  if (!Array.isArray(node?.children)) {\n    return;\n  }\n  for (const entry of node.children) {\n    entry.subpath = (node.subpath || []).concat([node.name]);\n    fn(entry, node);\n    if (entry.children) {\n      walkFileTree(entry, fn);\n    }\n  }\n};\n\nexport const isAudioFile = (filename) => ['wav', 'mp3'].includes(filename.split('.').slice(-1)[0]);\n\nfunction uint8ArrayToDataURL(uint8Array) {\n  const blob = new Blob([uint8Array], { type: 'audio/*' });\n  const dataURL = URL.createObjectURL(blob);\n  return dataURL;\n}\n\nconst loadCache = {}; // caches local urls to data urls\nexport async function resolveFileURL(url) {\n  if (loadCache[url]) {\n    return loadCache[url];\n  }\n  loadCache[url] = (async () => {\n    const contents = await readBinaryFile(url, { dir });\n    return uint8ArrayToDataURL(contents);\n  })();\n  return loadCache[url];\n}\n\nconst fileResolver = (subpath) => (url) => resolveFileURL(subpath.endsWith('/') ? subpath + url : subpath + '/' + url);\n\nexport async function playFile(path) {\n  const url = await resolveFileURL(path);\n  const ac = getAudioContext();\n  const bufferSource = ac.createBufferSource();\n  bufferSource.buffer = await loadBuffer(url, ac);\n  bufferSource.connect(ac.destination);\n  bufferSource.start(ac.currentTime);\n}\n","import { Pattern, noteToMidi, valueToMidi } from '@strudel.cycles/core';\nimport { registerSynthSounds, registerZZFXSounds, samples } from '@strudel.cycles/webaudio';\nimport './piano.mjs';\nimport './files.mjs';\n\nexport async function prebake() {\n  // https://archive.org/details/SalamanderGrandPianoV3\n  // License: CC-by http://creativecommons.org/licenses/by/3.0/ Author: Alexander Holm\n  await Promise.all([\n    registerSynthSounds(),\n    registerZZFXSounds(),\n    //registerSoundfonts(),\n    // need dynamic import here, because importing @strudel.cycles/soundfonts fails on server:\n    // => getting \"window is not defined\", as soon as \"@strudel.cycles/soundfonts\" is imported statically\n    // seems to be a problem with soundfont2\n    import('@strudel.cycles/soundfonts').then(({ registerSoundfonts }) => registerSoundfonts()),\n    samples(`./piano.json`, `./piano/`, { prebake: true }),\n    // https://github.com/sgossner/VCSL/\n    // https://api.github.com/repositories/126427031/contents/\n    // LICENSE: CC0 general-purpose\n    samples(`./vcsl.json`, 'github:sgossner/VCSL/master/', { prebake: true }),\n    samples(`./tidal-drum-machines.json`, 'github:ritchse/tidal-drum-machines/main/machines/', {\n      prebake: true,\n      tag: 'drum-machines',\n    }),\n    samples(`./EmuSP12.json`, `./EmuSP12/`, { prebake: true, tag: 'drum-machines' }),\n    samples(\n      {\n        casio: ['casio/high.wav', 'casio/low.wav', 'casio/noise.wav'],\n        crow: ['crow/000_crow.wav', 'crow/001_crow2.wav', 'crow/002_crow3.wav', 'crow/003_crow4.wav'],\n        insect: [\n          'insect/000_everglades_conehead.wav',\n          'insect/001_robust_shieldback.wav',\n          'insect/002_seashore_meadow_katydid.wav',\n        ],\n        wind: [\n          'wind/000_wind1.wav',\n          'wind/001_wind10.wav',\n          'wind/002_wind2.wav',\n          'wind/003_wind3.wav',\n          'wind/004_wind4.wav',\n          'wind/005_wind5.wav',\n          'wind/006_wind6.wav',\n          'wind/007_wind7.wav',\n          'wind/008_wind8.wav',\n          'wind/009_wind9.wav',\n        ],\n        jazz: [\n          'jazz/000_BD.wav',\n          'jazz/001_CB.wav',\n          'jazz/002_FX.wav',\n          'jazz/003_HH.wav',\n          'jazz/004_OH.wav',\n          'jazz/005_P1.wav',\n          'jazz/006_P2.wav',\n          'jazz/007_SN.wav',\n        ],\n        metal: [\n          'metal/000_0.wav',\n          'metal/001_1.wav',\n          'metal/002_2.wav',\n          'metal/003_3.wav',\n          'metal/004_4.wav',\n          'metal/005_5.wav',\n          'metal/006_6.wav',\n          'metal/007_7.wav',\n          'metal/008_8.wav',\n          'metal/009_9.wav',\n        ],\n        east: [\n          'east/000_nipon_wood_block.wav',\n          'east/001_ohkawa_mute.wav',\n          'east/002_ohkawa_open.wav',\n          'east/003_shime_hi.wav',\n          'east/004_shime_hi_2.wav',\n          'east/005_shime_mute.wav',\n          'east/006_taiko_1.wav',\n          'east/007_taiko_2.wav',\n          'east/008_taiko_3.wav',\n        ],\n        space: [\n          'space/000_0.wav',\n          'space/001_1.wav',\n          'space/002_11.wav',\n          'space/003_12.wav',\n          'space/004_13.wav',\n          'space/005_14.wav',\n          'space/006_15.wav',\n          'space/007_16.wav',\n          'space/008_17.wav',\n          'space/009_18.wav',\n          'space/010_2.wav',\n          'space/011_3.wav',\n          'space/012_4.wav',\n          'space/013_5.wav',\n          'space/014_6.wav',\n          'space/015_7.wav',\n          'space/016_8.wav',\n          'space/017_9.wav',\n        ],\n        numbers: [\n          'numbers/0.wav',\n          'numbers/1.wav',\n          'numbers/2.wav',\n          'numbers/3.wav',\n          'numbers/4.wav',\n          'numbers/5.wav',\n          'numbers/6.wav',\n          'numbers/7.wav',\n          'numbers/8.wav',\n        ],\n      },\n      'github:tidalcycles/Dirt-Samples/master/',\n    ),\n  ]);\n  // await samples('github:tidalcycles/Dirt-Samples/master');\n}\n\nconst maxPan = noteToMidi('C8');\nconst panwidth = (pan, width) => pan * width + (1 - width) / 2;\n\nPattern.prototype.piano = function () {\n  return this.fmap((v) => ({ ...v, clip: v.clip ?? 1 })) // set clip if not already set..\n    .s('piano')\n    .release(0.1)\n    .fmap((value) => {\n      const midi = valueToMidi(value);\n      // pan by pitch\n      const pan = panwidth(Math.min(Math.round(midi) / maxPan, 1), 0.5);\n      return { ...value, pan: (value.pan || 1) * pan };\n    });\n};\n"],"file":"_astro/prebake.1db9593c.js"}