{"version":3,"file":"midibridge.53d443ca.js","sources":["../../../packages/desktopbridge/midibridge.mjs"],"sourcesContent":["import { Invoke } from './utils.mjs';\nimport { Pattern, noteToMidi } from '@strudel.cycles/core';\n\nconst ON_MESSAGE = 0x90;\nconst OFF_MESSAGE = 0x80;\nconst CC_MESSAGE = 0xb0;\n\nPattern.prototype.midi = function (output) {\n  return this.onTrigger((time, hap, currentTime) => {\n    const { note, nrpnn, nrpv, ccn, ccv } = hap.value;\n    const offset = (time - currentTime) * 1000;\n    const velocity = Math.floor((hap.context?.velocity ?? 0.9) * 100); // TODO: refactor velocity\n    const duration = Math.floor(hap.duration.valueOf() * 1000 - 10);\n    const roundedOffset = Math.round(offset);\n    const midichan = (hap.value.midichan ?? 1) - 1;\n    const requestedport = output ?? 'IAC';\n    const messagesfromjs = [];\n    if (note != null) {\n      const midiNumber = typeof note === 'number' ? note : noteToMidi(note);\n      messagesfromjs.push({\n        requestedport,\n        message: [ON_MESSAGE + midichan, midiNumber, velocity],\n        offset: roundedOffset,\n      });\n      messagesfromjs.push({\n        requestedport,\n        message: [OFF_MESSAGE + midichan, midiNumber, velocity],\n        offset: roundedOffset + duration,\n      });\n    }\n    if (ccv && ccn) {\n      if (typeof ccv !== 'number' || ccv < 0 || ccv > 1) {\n        throw new Error('expected ccv to be a number between 0 and 1');\n      }\n      if (!['string', 'number'].includes(typeof ccn)) {\n        throw new Error('expected ccn to be a number or a string');\n      }\n      const scaled = Math.round(ccv * 127);\n      messagesfromjs.push({\n        requestedport,\n        message: [CC_MESSAGE + midichan, ccn, scaled],\n        offset: roundedOffset,\n      });\n    }\n    // invoke is temporarily blocking, run in an async process\n    if (messagesfromjs.length) {\n      setTimeout(() => {\n        Invoke('sendmidi', { messagesfromjs });\n      });\n    }\n  });\n};\n"],"names":["ON_MESSAGE","OFF_MESSAGE","CC_MESSAGE","Pattern","output","time","hap","currentTime","note","nrpnn","nrpv","ccn","ccv","offset","velocity","duration","roundedOffset","midichan","requestedport","messagesfromjs","midiNumber","noteToMidi","scaled","Invoke"],"mappings":"gSAGA,MAAMA,EAAa,IACbC,EAAc,IACdC,EAAa,IAEnBC,EAAQ,UAAU,KAAO,SAAUC,EAAQ,CACzC,OAAO,KAAK,UAAU,CAACC,EAAMC,EAAKC,IAAgB,CAChD,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,KAAAC,EAAM,IAAAC,EAAK,IAAAC,CAAK,EAAGN,EAAI,MACtCO,GAAUR,EAAOE,GAAe,IAChCO,EAAW,KAAK,OAAOR,EAAI,SAAS,UAAY,IAAO,GAAG,EAC1DS,EAAW,KAAK,MAAMT,EAAI,SAAS,QAAS,EAAG,IAAO,EAAE,EACxDU,EAAgB,KAAK,MAAMH,CAAM,EACjCI,GAAYX,EAAI,MAAM,UAAY,GAAK,EACvCY,EAAgBd,GAAU,MAC1Be,EAAiB,CAAA,EACvB,GAAIX,GAAQ,KAAM,CAChB,MAAMY,EAAa,OAAOZ,GAAS,SAAWA,EAAOa,EAAWb,CAAI,EACpEW,EAAe,KAAK,CAClB,cAAAD,EACA,QAAS,CAAClB,EAAaiB,EAAUG,EAAYN,CAAQ,EACrD,OAAQE,CAChB,CAAO,EACDG,EAAe,KAAK,CAClB,cAAAD,EACA,QAAS,CAACjB,EAAcgB,EAAUG,EAAYN,CAAQ,EACtD,OAAQE,EAAgBD,CAChC,CAAO,CACF,CACD,GAAIH,GAAOD,EAAK,CACd,GAAI,OAAOC,GAAQ,UAAYA,EAAM,GAAKA,EAAM,EAC9C,MAAM,IAAI,MAAM,6CAA6C,EAE/D,GAAI,CAAC,CAAC,SAAU,QAAQ,EAAE,SAAS,OAAOD,CAAG,EAC3C,MAAM,IAAI,MAAM,yCAAyC,EAE3D,MAAMW,EAAS,KAAK,MAAMV,EAAM,GAAG,EACnCO,EAAe,KAAK,CAClB,cAAAD,EACA,QAAS,CAAChB,EAAae,EAAUN,EAAKW,CAAM,EAC5C,OAAQN,CAChB,CAAO,CACF,CAEGG,EAAe,QACjB,WAAW,IAAM,CACfI,EAAO,WAAY,CAAE,eAAAJ,CAAc,CAAE,CAC7C,CAAO,CAEP,CAAG,CACH"}