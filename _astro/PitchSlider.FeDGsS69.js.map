{"version":3,"file":"PitchSlider.FeDGsS69.js","sources":["../../src/useFrame.mjs","../../src/components/PitchSlider.jsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nfunction useFrame(callback, autostart = false) {\n  const requestRef = useRef();\n  const previousTimeRef = useRef();\n\n  const animate = (time) => {\n    if (previousTimeRef.current !== undefined) {\n      const deltaTime = time - previousTimeRef.current;\n      callback(time, deltaTime);\n    }\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  const start = () => {\n    requestRef.current = requestAnimationFrame(animate);\n  };\n  const stop = () => {\n    requestRef.current && cancelAnimationFrame(requestRef.current);\n    delete requestRef.current;\n  };\n  useEffect(() => {\n    if (requestRef.current) {\n      stop();\n      start();\n    }\n  }, [callback]);\n\n  useEffect(() => {\n    if (autostart) {\n      start();\n    }\n    return stop;\n  }, []); // Make sure the effect only runs once\n\n  return {\n    start,\n    stop,\n  };\n}\n\nexport default useFrame;\n","import useEvent from '@src/useEvent.mjs';\nimport useFrame from '@src/useFrame.mjs';\nimport { getAudioContext } from '@strudel/webaudio';\nimport { midi2note } from '@strudel/core';\nimport { useState, useRef, useEffect } from 'react';\nimport Claviature from '@components/Claviature';\n\nlet Button = (props) => <button {...props} className=\"bg-lineHighlight p-2 rounded-md color-foreground\" />;\n\nfunction plotValues(ctx, values, min, max, color) {\n  let { width, height } = ctx.canvas;\n  ctx.strokeStyle = color;\n  const thickness = 8;\n  ctx.lineWidth = thickness;\n  ctx.beginPath();\n\n  let x = (f) => ((f - min) / (max - min)) * width;\n  let y = (i) => (1 - i / values.length) * height;\n  values.forEach((f, i, a) => {\n    ctx.lineTo(x(f), y(i));\n  });\n  ctx.stroke();\n}\n\nfunction getColor(cssVariable) {\n  if (typeof document === 'undefined') {\n    return 'white';\n  }\n  const dummyElement = document.createElement('div');\n  dummyElement.style.color = cssVariable;\n  // Append the dummy element to the document body\n  document.body.appendChild(dummyElement);\n  // Get the computed style of the dummy element\n  const styles = getComputedStyle(dummyElement);\n  // Get the value of the CSS variable\n  const color = styles.getPropertyValue(cssVariable);\n  document.body.removeChild(dummyElement);\n  return color;\n}\n\nlet pitchColor = '#eab308';\nlet frequencyColor = '#3b82f6';\n\nexport function PitchSlider({\n  buttons = [],\n  animatable = false,\n  plot = false,\n  showPitchSlider = false,\n  showFrequencySlider = false,\n  pitchStep = '0.001',\n  min = 55,\n  max = 7040,\n  initial = 220,\n  baseFrequency = min,\n  zeroOffset = 0,\n  claviature,\n}) {\n  const oscRef = useRef();\n  const activeRef = useRef();\n  const freqRef = useRef(initial);\n  const historyRef = useRef([freqRef.current]);\n  const frameRef = useRef();\n  const canvasRef = useRef();\n  const [hz, setHz] = useState(freqRef.current);\n\n  useEffect(() => {\n    freqRef.current = hz;\n  }, [hz]);\n\n  useEvent('mouseup', () => {\n    oscRef.current?.stop();\n    activeRef.current = false;\n  });\n\n  let freqSlider2freq = (progress) => min + progress * (max - min);\n  let pitchSlider2freq = (progress) => min * 2 ** (progress * Math.log2(max / min));\n  let freq2freqSlider = (freq) => (freq - min) / (max - min);\n  let freq2pitchSlider = (freq) => {\n    const [minOct, maxOct] = [Math.log2(min), Math.log2(max)];\n    return (Math.log2(freq) - minOct) / (maxOct - minOct);\n  };\n\n  const freqSlider = freq2freqSlider(hz);\n  const pitchSlider = freq2pitchSlider(hz);\n\n  let startOsc = (hz) => {\n    if (oscRef.current) {\n      oscRef.current.stop();\n    }\n    oscRef.current = getAudioContext().createOscillator();\n    oscRef.current.frequency.value = hz;\n    oscRef.current.connect(getAudioContext().destination);\n    oscRef.current.start();\n    activeRef.current = true;\n    setHz(hz);\n  };\n\n  let startSweep = (exp = false) => {\n    let f = min;\n    startOsc(f);\n    const frame = () => {\n      if (f < max) {\n        if (!exp) {\n          f += 10;\n        } else {\n          f *= 1.01;\n        }\n        oscRef.current.frequency.value = f;\n        frameRef.current = requestAnimationFrame(frame);\n      } else {\n        oscRef.current.stop();\n        cancelAnimationFrame(frameRef.current);\n      }\n      setHz(f);\n    };\n    requestAnimationFrame(frame);\n  };\n\n  useFrame(() => {\n    historyRef.current.push(freqRef.current);\n    historyRef.current = historyRef.current.slice(-1000);\n    if (canvasRef.current) {\n      let ctx = canvasRef.current.getContext('2d');\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      if (showFrequencySlider) {\n        plotValues(ctx, historyRef.current, min, max, frequencyColor);\n      }\n      if (showPitchSlider) {\n        const [minOct, maxOct] = [Math.log2(min), Math.log2(max)];\n        let perceptual = historyRef.current.map((v) => Math.log2(v));\n        plotValues(ctx, perceptual, minOct, maxOct, pitchColor);\n      }\n    }\n  }, plot);\n\n  let handleChangeFrequency = (f) => {\n    setHz(f);\n    if (oscRef.current) {\n      oscRef.current.frequency.value = f;\n    }\n  };\n  let handleMouseDown = () => {\n    cancelAnimationFrame(frameRef.current);\n    startOsc(hz);\n  };\n\n  let exponent, activeNote, activeNoteLabel;\n  if (showPitchSlider) {\n    const expOffset = baseFrequency ? Math.log2(baseFrequency / min) : 0;\n    exponent = freq2pitchSlider(hz) * Math.log2(max / min) - expOffset;\n    let semitones = parseFloat((exponent * 12).toFixed(2));\n    if (zeroOffset) {\n      semitones = semitones + zeroOffset;\n      const isWhole = Math.round(semitones) === semitones;\n      activeNote = midi2note(Math.round(semitones));\n      activeNoteLabel = (!isWhole ? '~' : '') + activeNote;\n      semitones = !isWhole ? semitones.toFixed(2) : semitones;\n      exponent = (\n        <>\n          (<span className=\"text-yellow-500\">{semitones}</span> - {zeroOffset})/12\n        </>\n      );\n    } else if (semitones % 12 === 0) {\n      exponent = <span className=\"text-yellow-500\">{semitones / 12}</span>;\n    } else if (semitones % 1 === 0) {\n      exponent = (\n        <>\n          <span className=\"text-yellow-500\">{semitones}</span>/12\n        </>\n      );\n    } else {\n      exponent = <span className=\"text-yellow-500\">{exponent.toFixed(2)}</span>;\n    }\n  }\n  return (\n    <>\n      <span className=\"font-mono\">\n        {showFrequencySlider && <span className=\"text-blue-500\">{hz.toFixed(0)}Hz</span>}\n        {showFrequencySlider && showPitchSlider && <> = </>}\n        {showPitchSlider && (\n          <>\n            {baseFrequency || min}Hz * 2<sup>{exponent}</sup>\n          </>\n        )}\n      </span>\n      {claviature && (\n        <>\n          {' '}\n          = <span className=\"text-yellow-500\">{activeNoteLabel}</span>\n        </>\n      )}\n      <div>\n        {showFrequencySlider && (\n          <div className=\"flex space-x-1 items-center\">\n            <input\n              type=\"range\"\n              value={freqSlider}\n              min={0}\n              max={1}\n              step={0.001}\n              onMouseDown={handleMouseDown}\n              className={`block w-full max-w-[600px] accent-blue-500 `}\n              onChange={(e) => {\n                const f = freqSlider2freq(parseFloat(e.target.value));\n                handleChangeFrequency(f);\n              }}\n            />\n          </div>\n        )}\n        {showPitchSlider && (\n          <div>\n            <input\n              type=\"range\"\n              value={pitchSlider}\n              min={0}\n              max={1}\n              //step=\".001\"\n              step={pitchStep}\n              onMouseDown={handleMouseDown}\n              className={`block w-full max-w-[600px] accent-yellow-500`}\n              onChange={(e) => {\n                const f = pitchSlider2freq(parseFloat(e.target.value));\n                handleChangeFrequency(f);\n              }}\n            />\n          </div>\n        )}\n      </div>\n      <div className=\"px-2\">\n        {plot && <canvas ref={canvasRef} className=\"w-full max-w-[584px] h-[300px]\" height=\"600\" width={800} />}\n      </div>\n      <div className=\"space-x-2\">\n        {animatable && (\n          <Button onClick={() => startSweep()}>\n            <span style={{ color: '#3b82f6' }}>Frequency Sweep</span>\n          </Button>\n        )}\n        {animatable && (\n          <Button onClick={() => startSweep(true)}>\n            <span style={{ color: '#eab308' }}>Pitch Sweep</span>\n          </Button>\n        )}\n        {buttons.map((f, i) => (\n          <Button key={(f, i)} onMouseDown={() => startOsc(f)}>\n            {f}Hz\n          </Button>\n        ))}\n      </div>\n      {claviature && (\n        <Claviature\n          onMouseDown={(note) => {\n            const f = 440 * 2 ** ((note - 69) / 12);\n            handleChangeFrequency(f);\n            cancelAnimationFrame(frameRef.current);\n            startOsc(f);\n          }}\n          options={{\n            range: ['A1', 'A5'],\n            scaleY: 0.75,\n            scaleX: 0.86,\n            colorize: activeNote ? [{ keys: [activeNote], color: '#eab308' }] : [],\n            labels: activeNote ? { [activeNote]: activeNote } : {},\n          }}\n        />\n      )}\n    </>\n  );\n}\n"],"names":["useFrame","callback","autostart","requestRef","useRef","previousTimeRef","animate","time","deltaTime","start","stop","useEffect","Button","props","jsx","plotValues","ctx","values","min","max","color","width","height","thickness","x","y","i","a","pitchColor","frequencyColor","PitchSlider","buttons","animatable","plot","showPitchSlider","showFrequencySlider","pitchStep","initial","baseFrequency","zeroOffset","claviature","oscRef","activeRef","freqRef","historyRef","frameRef","canvasRef","hz","setHz","useState","useEvent","freqSlider2freq","progress","pitchSlider2freq","freq2freqSlider","freq","freq2pitchSlider","minOct","maxOct","freqSlider","pitchSlider","startOsc","getAudioContext","startSweep","exp","f","frame","perceptual","v","handleChangeFrequency","handleMouseDown","exponent","activeNote","activeNoteLabel","expOffset","semitones","isWhole","midi2note","jsxs","Fragment","e","Claviature","note"],"mappings":"iUAEA,SAASA,EAASC,EAAUC,EAAY,GAAO,CAC7C,MAAMC,EAAaC,EAAAA,SACbC,EAAkBD,EAAAA,SAElBE,EAAWC,GAAS,CACxB,GAAIF,EAAgB,UAAY,OAAW,CACzC,MAAMG,EAAYD,EAAOF,EAAgB,QACzCJ,EAASM,EAAMC,CAAS,CACzB,CACDH,EAAgB,QAAUE,EAC1BJ,EAAW,QAAU,sBAAsBG,CAAO,CACtD,EAEQG,EAAQ,IAAM,CAClBN,EAAW,QAAU,sBAAsBG,CAAO,CACtD,EACQI,EAAO,IAAM,CACjBP,EAAW,SAAW,qBAAqBA,EAAW,OAAO,EAC7D,OAAOA,EAAW,OACtB,EACEQ,OAAAA,EAAAA,UAAU,IAAM,CACVR,EAAW,UACbO,IACAD,IAEN,EAAK,CAACR,CAAQ,CAAC,EAEbU,EAAAA,UAAU,KACJT,GACFO,IAEKC,GACN,CAAE,CAAA,EAEE,CACL,MAAAD,EACA,KAAAC,CACJ,CACA,CCjCA,IAAIE,EAAUC,GAAUC,EAAAA,IAAC,UAAQ,GAAGD,EAAO,UAAU,kDAAmD,CAAA,EAExG,SAASE,EAAWC,EAAKC,EAAQC,EAAKC,EAAKC,EAAO,CAChD,GAAI,CAAE,MAAAC,EAAO,OAAAC,GAAWN,EAAI,OAC5BA,EAAI,YAAcI,EAClB,MAAMG,EAAY,EAClBP,EAAI,UAAYO,EAChBP,EAAI,UAAU,EAEd,IAAIQ,EAAK,IAAQ,EAAIN,IAAQC,EAAMD,GAAQG,EACvCI,EAAKC,IAAO,EAAIA,EAAIT,EAAO,QAAUK,EACzCL,EAAO,QAAQ,CAAC,EAAGS,EAAGC,IAAM,CAC1BX,EAAI,OAAOQ,EAAE,CAAC,EAAGC,EAAEC,CAAC,CAAC,CAAA,CACtB,EACDV,EAAI,OAAO,CACb,CAkBA,IAAIY,EAAa,UACbC,EAAiB,UAEd,SAASC,GAAY,CAC1B,QAAAC,EAAU,CAAC,EACX,WAAAC,EAAa,GACb,KAAAC,EAAO,GACP,gBAAAC,EAAkB,GAClB,oBAAAC,EAAsB,GACtB,UAAAC,EAAY,QACZ,IAAAlB,EAAM,GACN,IAAAC,EAAM,KACN,QAAAkB,EAAU,IACV,cAAAC,EAAgBpB,EAChB,WAAAqB,EAAa,EACb,WAAAC,CACF,EAAG,CACD,MAAMC,EAASrC,EAAAA,SACTsC,EAAYtC,EAAAA,SACZuC,EAAUvC,SAAOiC,CAAO,EACxBO,EAAaxC,EAAA,OAAO,CAACuC,EAAQ,OAAO,CAAC,EACrCE,EAAWzC,EAAAA,SACX0C,EAAY1C,EAAAA,SACZ,CAAC2C,EAAIC,CAAK,EAAIC,EAAAA,SAASN,EAAQ,OAAO,EAE5ChC,EAAAA,UAAU,IAAM,CACdgC,EAAQ,QAAUI,CAAA,EACjB,CAACA,CAAE,CAAC,EAEPG,EAAS,UAAW,IAAM,CACxBT,EAAO,SAAS,OAChBC,EAAU,QAAU,EAAA,CACrB,EAED,IAAIS,EAAmBC,GAAalC,EAAMkC,GAAYjC,EAAMD,GACxDmC,EAAoBD,GAAalC,EAAM,IAAMkC,EAAW,KAAK,KAAKjC,EAAMD,CAAG,GAC3EoC,EAAmBC,IAAUA,EAAOrC,IAAQC,EAAMD,GAClDsC,EAAoBD,GAAS,CAC/B,KAAM,CAACE,EAAQC,CAAM,EAAI,CAAC,KAAK,KAAKxC,CAAG,EAAG,KAAK,KAAKC,CAAG,CAAC,EACxD,OAAQ,KAAK,KAAKoC,CAAI,EAAIE,IAAWC,EAASD,EAAA,EAG1C,MAAAE,EAAaL,EAAgBP,CAAE,EAC/Ba,EAAcJ,EAAiBT,CAAE,EAEnC,IAAAc,EAAYd,GAAO,CACjBN,EAAO,SACTA,EAAO,QAAQ,OAEVA,EAAA,QAAUqB,EAAgB,EAAE,iBAAiB,EAC7CrB,EAAA,QAAQ,UAAU,MAAQM,EACjCN,EAAO,QAAQ,QAAQqB,EAAgB,EAAE,WAAW,EACpDrB,EAAO,QAAQ,QACfC,EAAU,QAAU,GACpBM,EAAMD,CAAE,CAAA,EAGNgB,EAAa,CAACC,EAAM,KAAU,CAChC,IAAIC,EAAI/C,EACR2C,EAASI,CAAC,EACV,MAAMC,EAAQ,IAAM,CACdD,EAAI9C,GACD6C,EAGEC,GAAA,KAFAA,GAAA,GAIAxB,EAAA,QAAQ,UAAU,MAAQwB,EACxBpB,EAAA,QAAU,sBAAsBqB,CAAK,IAE9CzB,EAAO,QAAQ,OACf,qBAAqBI,EAAS,OAAO,GAEvCG,EAAMiB,CAAC,CAAA,EAET,sBAAsBC,CAAK,CAAA,EAG7BlE,EAAS,IAAM,CAGb,GAFW4C,EAAA,QAAQ,KAAKD,EAAQ,OAAO,EACvCC,EAAW,QAAUA,EAAW,QAAQ,MAAM,IAAK,EAC/CE,EAAU,QAAS,CACrB,IAAI9B,EAAM8B,EAAU,QAAQ,WAAW,IAAI,EAK3C,GAJI9B,EAAA,UAAU,EAAG,EAAGA,EAAI,OAAO,MAAOA,EAAI,OAAO,MAAM,EACnDmB,GACFpB,EAAWC,EAAK4B,EAAW,QAAS1B,EAAKC,EAAKU,CAAc,EAE1DK,EAAiB,CACnB,KAAM,CAACuB,EAAQC,CAAM,EAAI,CAAC,KAAK,KAAKxC,CAAG,EAAG,KAAK,KAAKC,CAAG,CAAC,EACpD,IAAAgD,EAAavB,EAAW,QAAQ,IAAKwB,GAAM,KAAK,KAAKA,CAAC,CAAC,EAC3DrD,EAAWC,EAAKmD,EAAYV,EAAQC,EAAQ9B,CAAU,CACxD,CACF,GACCK,CAAI,EAEH,IAAAoC,EAAyBJ,GAAM,CACjCjB,EAAMiB,CAAC,EACHxB,EAAO,UACFA,EAAA,QAAQ,UAAU,MAAQwB,EACnC,EAEEK,EAAkB,IAAM,CAC1B,qBAAqBzB,EAAS,OAAO,EACrCgB,EAASd,CAAE,CAAA,EAGTwB,EAAUC,EAAYC,EAC1B,GAAIvC,EAAiB,CACnB,MAAMwC,EAAYpC,EAAgB,KAAK,KAAKA,EAAgBpB,CAAG,EAAI,EACnEqD,EAAWf,EAAiBT,CAAE,EAAI,KAAK,KAAK5B,EAAMD,CAAG,EAAIwD,EACzD,IAAIC,EAAY,YAAYJ,EAAW,IAAI,QAAQ,CAAC,CAAC,EACrD,GAAIhC,EAAY,CACdoC,EAAYA,EAAYpC,EACxB,MAAMqC,EAAU,KAAK,MAAMD,CAAS,IAAMA,EAC1CH,EAAaK,EAAU,KAAK,MAAMF,CAAS,CAAC,EACzBF,GAACG,EAAgB,GAAN,KAAYJ,EAC1CG,EAAaC,EAAiCD,EAAvBA,EAAU,QAAQ,CAAC,EAC1CJ,EACIO,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAA,IACEjE,EAAA,IAAA,OAAA,CAAK,UAAU,kBAAmB,SAAU6D,EAAA,EAAO,MAAIpC,EAAW,MACtE,CAAA,CAAA,CAAA,MAEOoC,EAAY,KAAO,EAC5BJ,EAAYzD,EAAAA,IAAA,OAAA,CAAK,UAAU,kBAAmB,WAAY,EAAG,CAAA,EACpD6D,EAAY,IAAM,EAC3BJ,EAEIO,EAAA,KAAAC,WAAA,CAAA,SAAA,CAACjE,EAAA,IAAA,OAAA,CAAK,UAAU,kBAAmB,SAAU6D,EAAA,EAAO,KACtD,CAAA,CAAA,EAGFJ,QAAY,OAAK,CAAA,UAAU,kBAAmB,SAASA,EAAA,QAAQ,CAAC,CAAE,CAAA,CAEtE,CACA,OAEIO,EAAA,KAAAC,WAAA,CAAA,SAAA,CAACD,EAAAA,KAAA,OAAA,CAAK,UAAU,YACb,SAAA,CAAuB3C,GAAA2C,EAAA,KAAC,OAAK,CAAA,UAAU,gBAAiB,SAAA,CAAA/B,EAAG,QAAQ,CAAC,EAAE,IAAA,EAAE,EACxEZ,GAAuBD,GAAmBpB,EAAA,IAAAiE,EAAA,SAAA,CAAE,SAAG,MAAA,EAC/C7C,GAEI4C,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAiBzC,GAAApB,EAAI,SAAMJ,EAAAA,IAAC,OAAK,SAASyD,CAAA,CAAA,CAAA,EAC7C,CAAA,EAEJ,EACC/B,GAEIsC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAA,IAAI,KACFjE,EAAA,IAAA,OAAA,CAAK,UAAU,kBAAmB,SAAgB2D,EAAA,CAAA,EACvD,SAED,MACE,CAAA,SAAA,CACCtC,GAAArB,EAAA,IAAC,MAAI,CAAA,UAAU,8BACb,SAAAA,EAAA,IAAC,QAAA,CACC,KAAK,QACL,MAAO6C,EACP,IAAK,EACL,IAAK,EACL,KAAM,KACN,YAAaW,EACb,UAAW,8CACX,SAAWU,GAAM,CACf,MAAMf,EAAId,EAAgB,WAAW6B,EAAE,OAAO,KAAK,CAAC,EACpDX,EAAsBJ,CAAC,CACzB,CAAA,CAAA,EAEJ,EAED/B,SACE,MACC,CAAA,SAAApB,EAAA,IAAC,QAAA,CACC,KAAK,QACL,MAAO8C,EACP,IAAK,EACL,IAAK,EAEL,KAAMxB,EACN,YAAakC,EACb,UAAW,+CACX,SAAWU,GAAM,CACf,MAAMf,EAAIZ,EAAiB,WAAW2B,EAAE,OAAO,KAAK,CAAC,EACrDX,EAAsBJ,CAAC,CACzB,CAAA,CAAA,EAEJ,CAAA,EAEJ,EACCnD,MAAA,MAAA,CAAI,UAAU,OACZ,YAASA,EAAA,IAAA,SAAA,CAAO,IAAKgC,EAAW,UAAU,iCAAiC,OAAO,MAAM,MAAO,GAAK,CAAA,EACvG,EACAgC,EAAAA,KAAC,MAAI,CAAA,UAAU,YACZ,SAAA,CAAA9C,GACElB,EAAA,IAAAF,EAAA,CAAO,QAAS,IAAMmD,IACrB,SAAAjD,EAAA,IAAC,OAAK,CAAA,MAAO,CAAE,MAAO,SAAU,EAAG,0BAAe,CAAA,EACpD,EAEDkB,GACElB,EAAAA,IAAAF,EAAA,CAAO,QAAS,IAAMmD,EAAW,EAAI,EACpC,SAACjD,EAAAA,IAAA,OAAA,CAAK,MAAO,CAAE,MAAO,SAAU,EAAG,sBAAW,CAAA,EAChD,EAEDiB,EAAQ,IAAI,CAACkC,EAAGvC,IACdoD,EAAA,KAAAlE,EAAA,CAAoB,YAAa,IAAMiD,EAASI,CAAC,EAC/C,SAAA,CAAAA,EAAE,IAAA,CADS,EAAGvC,EAGlB,CAAA,EACH,EACCc,GACC1B,EAAA,IAACmE,EAAA,CACC,YAAcC,GAAS,CACrB,MAAMjB,EAAI,IAAM,KAAOiB,EAAO,IAAM,IACpCb,EAAsBJ,CAAC,EACvB,qBAAqBpB,EAAS,OAAO,EACrCgB,EAASI,CAAC,CACZ,EACA,QAAS,CACP,MAAO,CAAC,KAAM,IAAI,EAClB,OAAQ,IACR,OAAQ,IACR,SAAUO,EAAa,CAAC,CAAE,KAAM,CAACA,CAAU,EAAG,MAAO,SAAW,CAAA,EAAI,CAAC,EACrE,OAAQA,EAAa,CAAE,CAACA,CAAU,EAAGA,GAAe,CAAC,CACvD,CAAA,CACF,CAEJ,CAAA,CAAA,CAEJ"}