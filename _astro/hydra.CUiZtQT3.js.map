{"version":3,"mappings":";;;;;;wJAGA,IAAIA,EACAC,EAEG,eAAeC,EAAUC,EAAU,GAAI,CAO5C,GALIH,GAAiB,KAAK,UAAUA,CAAa,IAAM,KAAK,UAAUG,CAAO,GAC3E,SAAS,eAAe,cAAc,GAAG,OAAM,EAEjDH,EAAgBG,EAEZ,CAAC,SAAS,eAAe,cAAc,EAAG,CAC5C,KAAM,CACJ,IAAAC,EAAM,gCACN,YAAAC,EAAc,GACd,YAAAC,EAAc,QACd,WAAAC,EAAa,EACb,UAAAC,EAAY,GACZ,GAAGC,CACT,EAAQ,CACF,YAAa,GACb,GAAGN,CACT,EACU,CAAE,OAAAO,CAAQ,EAAGC,EAAe,eAAgB,CAAE,YAAAL,EAAa,WAAAC,EAAY,UAAAC,CAAS,CAAE,EAMxF,GALAC,EAAY,OAASC,EAErB,YAAM,OAA0BN,wBAEhCH,EAAQ,IAAI,MAAMQ,CAAW,EACzBJ,EAAa,CACf,KAAM,CAAE,OAAAK,GAAWC,IACnBD,EAAO,MAAM,QAAU,OACvBT,EAAM,MAAM,GAAG,KAAK,CAAE,IAAKS,CAAM,CAAE,CACpC,CACF,CACH,CAEO,SAASE,GAAa,CACvBX,GACFA,EAAM,KAAI,EAEZ,WAAW,IAAI,QACf,SAAS,eAAe,cAAc,GAAG,OAAM,EAC/C,WAAW,MAAQY,EACnB,WAAW,MAAQC,CACrB,CAEY,MAACC,EAAKC,GAAM,IAAMC,EAAMD,CAAC,EAAE,SAASE,IAAWA,GAAS,EAAE,CAAC,EAAE","names":["latestOptions","hydra","initHydra","options","src","feedStrudel","contextType","pixelRatio","pixelated","hydraConfig","canvas","getDrawContext","clearHydra","controls.speed","controls.shape","H","p","reify","getTime"],"ignoreList":[],"sources":["../../../packages/hydra/hydra.mjs"],"sourcesContent":["import { getDrawContext } from '@strudel/draw';\nimport { controls, getTime, reify } from '@strudel/core';\n\nlet latestOptions;\nlet hydra;\n\nexport async function initHydra(options = {}) {\n  // reset if options have changed since last init\n  if (latestOptions && JSON.stringify(latestOptions) !== JSON.stringify(options)) {\n    document.getElementById('hydra-canvas')?.remove();\n  }\n  latestOptions = options;\n  //load and init hydra\n  if (!document.getElementById('hydra-canvas')) {\n    const {\n      src = 'https://unpkg.com/hydra-synth',\n      feedStrudel = false,\n      contextType = 'webgl',\n      pixelRatio = 1,\n      pixelated = true,\n      ...hydraConfig\n    } = {\n      detectAudio: false,\n      ...options,\n    };\n    const { canvas } = getDrawContext('hydra-canvas', { contextType, pixelRatio, pixelated });\n    hydraConfig.canvas = canvas;\n\n    await import(/* @vite-ignore */ src);\n    /* eslint-disable-next-line */\n    hydra = new Hydra(hydraConfig);\n    if (feedStrudel) {\n      const { canvas } = getDrawContext();\n      canvas.style.display = 'none';\n      hydra.synth.s0.init({ src: canvas });\n    }\n  }\n}\n\nexport function clearHydra() {\n  if (hydra) {\n    hydra.hush();\n  }\n  globalThis.s0?.clear();\n  document.getElementById('hydra-canvas')?.remove();\n  globalThis.speed = controls.speed;\n  globalThis.shape = controls.shape;\n}\n\nexport const H = (p) => () => reify(p).queryArc(getTime(), getTime())[0].value;\n"],"file":"_astro/hydra.CUiZtQT3.js"}