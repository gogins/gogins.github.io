{"version":3,"file":"scope.4b7f6baa.js","sources":["../../../packages/superdough/feedbackdelay.mjs","../../../packages/superdough/reverbGen.mjs","../../../packages/superdough/reverb.mjs","../../../packages/superdough/vowel.mjs","../../../packages/superdough/logger.mjs","../../../packages/superdough/util.mjs","../../../packages/superdough/worklets.mjs?url","../../../packages/superdough/helpers.mjs","../../../packages/superdough/sampler.mjs","../../../packages/superdough/superdough.mjs","../../../packages/superdough/dspworklet.mjs","../../../packages/webaudio/webaudio.mjs","../../../packages/webaudio/scope.mjs"],"sourcesContent":["if (typeof DelayNode !== 'undefined') {\n  class FeedbackDelayNode extends DelayNode {\n    constructor(ac, wet, time, feedback) {\n      super(ac);\n      wet = Math.abs(wet);\n      this.delayTime.value = time;\n\n      const feedbackGain = ac.createGain();\n      feedbackGain.gain.value = Math.min(Math.abs(feedback), 0.995);\n      this.feedback = feedbackGain.gain;\n\n      const delayGain = ac.createGain();\n      delayGain.gain.value = wet;\n      this.delayGain = delayGain;\n\n      this.connect(feedbackGain);\n      this.connect(delayGain);\n      feedbackGain.connect(this);\n\n      this.connect = (target) => delayGain.connect(target);\n      return this;\n    }\n    start(t) {\n      this.delayGain.gain.setValueAtTime(this.delayGain.gain.value, t + this.delayTime.value);\n    }\n  }\n\n  AudioContext.prototype.createFeedbackDelay = function (wet, time, feedback) {\n    return new FeedbackDelayNode(this, wet, time, feedback);\n  };\n}\n","// Copyright 2014 Alan deLespinasse\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar reverbGen = {};\n\n/** Generates a reverb impulse response.\n\n @param {!Object} params TODO: Document the properties.\n @param {!function(!AudioBuffer)} callback Function to call when\n  the impulse response has been generated. The impulse response\n  is passed to this function as its parameter. May be called\n  immediately within the current execution context, or later. */\nreverbGen.generateReverb = function (params, callback) {\n  var audioContext = params.audioContext || new AudioContext();\n  var sampleRate = audioContext.sampleRate;\n  var numChannels = params.numChannels || 2;\n  // params.decayTime is the -60dB fade time. We let it go 50% longer to get to -90dB.\n  var totalTime = params.decayTime * 1.5;\n  var decaySampleFrames = Math.round(params.decayTime * sampleRate);\n  var numSampleFrames = Math.round(totalTime * sampleRate);\n  var fadeInSampleFrames = Math.round((params.fadeInTime || 0) * sampleRate);\n  // 60dB is a factor of 1 million in power, or 1000 in amplitude.\n  var decayBase = Math.pow(1 / 1000, 1 / decaySampleFrames);\n  var reverbIR = audioContext.createBuffer(numChannels, numSampleFrames, sampleRate);\n  for (var i = 0; i < numChannels; i++) {\n    var chan = reverbIR.getChannelData(i);\n    for (var j = 0; j < numSampleFrames; j++) {\n      chan[j] = randomSample() * Math.pow(decayBase, j);\n    }\n    for (var j = 0; j < fadeInSampleFrames; j++) {\n      chan[j] *= j / fadeInSampleFrames;\n    }\n  }\n\n  applyGradualLowpass(reverbIR, params.lpFreqStart || 0, params.lpFreqEnd || 0, params.decayTime, callback);\n};\n\n/** Creates a canvas element showing a graph of the given data.\n\n\n @param {!Float32Array} data An array of numbers, or a Float32Array.\n @param {number} width Width in pixels of the canvas.\n @param {number} height Height in pixels of the canvas.\n @param {number} min Minimum value of data for the graph (lower edge).\n @param {number} max Maximum value of data in the graph (upper edge).\n @return {!CanvasElement} The generated canvas element. */\nreverbGen.generateGraph = function (data, width, height, min, max) {\n  var canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  var gc = canvas.getContext('2d');\n  gc.fillStyle = '#000';\n  gc.fillRect(0, 0, canvas.width, canvas.height);\n  gc.fillStyle = '#fff';\n  var xscale = width / data.length;\n  var yscale = height / (max - min);\n  for (var i = 0; i < data.length; i++) {\n    gc.fillRect(i * xscale, height - (data[i] - min) * yscale, 1, 1);\n  }\n  return canvas;\n};\n\n/** Applies a constantly changing lowpass filter to the given sound.\n\n @private\n @param {!AudioBuffer} input\n @param {number} lpFreqStart\n @param {number} lpFreqEnd\n @param {number} lpFreqEndAt\n @param {!function(!AudioBuffer)} callback May be called\n  immediately within the current execution context, or later.*/\nvar applyGradualLowpass = function (input, lpFreqStart, lpFreqEnd, lpFreqEndAt, callback) {\n  if (lpFreqStart == 0) {\n    callback(input);\n    return;\n  }\n  var channelData = getAllChannelData(input);\n  var context = new OfflineAudioContext(input.numberOfChannels, channelData[0].length, input.sampleRate);\n  var player = context.createBufferSource();\n  player.buffer = input;\n  var filter = context.createBiquadFilter();\n\n  lpFreqStart = Math.min(lpFreqStart, input.sampleRate / 2);\n  lpFreqEnd = Math.min(lpFreqEnd, input.sampleRate / 2);\n\n  filter.type = 'lowpass';\n  filter.Q.value = 0.0001;\n  filter.frequency.setValueAtTime(lpFreqStart, 0);\n  filter.frequency.linearRampToValueAtTime(lpFreqEnd, lpFreqEndAt);\n\n  player.connect(filter);\n  filter.connect(context.destination);\n  player.start();\n  context.oncomplete = function (event) {\n    callback(event.renderedBuffer);\n  };\n  context.startRendering();\n\n  window.filterNode = filter;\n};\n\n/** @private\n @param {!AudioBuffer} buffer\n @return {!Array.<!Float32Array>} An array containing the Float32Array of each channel's samples. */\nvar getAllChannelData = function (buffer) {\n  var channels = [];\n  for (var i = 0; i < buffer.numberOfChannels; i++) {\n    channels[i] = buffer.getChannelData(i);\n  }\n  return channels;\n};\n\n/** @private\n @return {number} A random number from -1 to 1. */\nvar randomSample = function () {\n  return Math.random() * 2 - 1;\n};\n\nexport default reverbGen;\n","import reverbGen from './reverbGen.mjs';\n\nif (typeof AudioContext !== 'undefined') {\n  AudioContext.prototype.adjustLength = function (duration, buffer) {\n    const newLength = buffer.sampleRate * duration;\n    const newBuffer = this.createBuffer(buffer.numberOfChannels, buffer.length, buffer.sampleRate);\n    for (let channel = 0; channel < buffer.numberOfChannels; channel++) {\n      let oldData = buffer.getChannelData(channel);\n      let newData = newBuffer.getChannelData(channel);\n\n      for (let i = 0; i < newLength; i++) {\n        newData[i] = oldData[i] || 0;\n      }\n    }\n    return newBuffer;\n  };\n\n  AudioContext.prototype.createReverb = function (duration, fade, lp, dim, ir) {\n    const convolver = this.createConvolver();\n    convolver.generate = (d = 2, fade = 0.1, lp = 15000, dim = 1000, ir) => {\n      convolver.duration = d;\n      convolver.fade = fade;\n      convolver.lp = lp;\n      convolver.dim = dim;\n      convolver.ir = ir;\n      if (ir) {\n        convolver.buffer = this.adjustLength(d, ir);\n      } else {\n        reverbGen.generateReverb(\n          {\n            audioContext: this,\n            numChannels: 2,\n            decayTime: d,\n            fadeInTime: fade,\n            lpFreqStart: lp,\n            lpFreqEnd: dim,\n          },\n          (buffer) => {\n            convolver.buffer = buffer;\n          },\n        );\n      }\n    };\n    convolver.generate(duration, fade, lp, dim, ir);\n    return convolver;\n  };\n}\n","// credits to webdirt: https://github.com/dktr0/WebDirt/blob/41342e81d6ad694a2310d491fef7b7e8b0929efe/js-src/Graph.js#L597\nexport var vowelFormant = {\n  a: { freqs: [660, 1120, 2750, 3000, 3350], gains: [1, 0.5012, 0.0708, 0.0631, 0.0126], qs: [80, 90, 120, 130, 140] },\n  e: { freqs: [440, 1800, 2700, 3000, 3300], gains: [1, 0.1995, 0.1259, 0.1, 0.1], qs: [70, 80, 100, 120, 120] },\n  i: { freqs: [270, 1850, 2900, 3350, 3590], gains: [1, 0.0631, 0.0631, 0.0158, 0.0158], qs: [40, 90, 100, 120, 120] },\n  o: { freqs: [430, 820, 2700, 3000, 3300], gains: [1, 0.3162, 0.0501, 0.0794, 0.01995], qs: [40, 80, 100, 120, 120] },\n  u: { freqs: [370, 630, 2750, 3000, 3400], gains: [1, 0.1, 0.0708, 0.0316, 0.01995], qs: [40, 60, 100, 120, 120] },\n};\nif (typeof GainNode !== 'undefined') {\n  class VowelNode extends GainNode {\n    constructor(ac, letter) {\n      super(ac);\n      if (!vowelFormant[letter]) {\n        throw new Error('vowel: unknown vowel ' + letter);\n      }\n      const { gains, qs, freqs } = vowelFormant[letter];\n      const makeupGain = ac.createGain();\n      for (let i = 0; i < 5; i++) {\n        const gain = ac.createGain();\n        gain.gain.value = gains[i];\n        const filter = ac.createBiquadFilter();\n        filter.type = 'bandpass';\n        filter.Q.value = qs[i];\n        filter.frequency.value = freqs[i];\n        this.connect(filter);\n        filter.connect(gain);\n        gain.connect(makeupGain);\n      }\n      makeupGain.gain.value = 8; // how much makeup gain to add?\n      this.connect = (target) => makeupGain.connect(target);\n      return this;\n    }\n  }\n\n  AudioContext.prototype.createVowelFilter = function (letter) {\n    return new VowelNode(this, letter);\n  };\n}\n","let log = (msg) => console.log(msg);\n\nexport const logger = (...args) => log(...args);\n\nexport const setLogger = (fn) => {\n  log = fn;\n};\n","import { logger } from './logger.mjs';\n\n// currently duplicate with core util.mjs to skip dependency\n// TODO: add separate util module?\n\nexport const tokenizeNote = (note) => {\n  if (typeof note !== 'string') {\n    return [];\n  }\n  const [pc, acc = '', oct] = note.match(/^([a-gA-G])([#bsf]*)([0-9]*)$/)?.slice(1) || [];\n  if (!pc) {\n    return [];\n  }\n  return [pc, acc, oct ? Number(oct) : undefined];\n};\nconst chromas = { c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11 };\nconst accs = { '#': 1, b: -1, s: 1, f: -1 };\n\nexport const noteToMidi = (note, defaultOctave = 3) => {\n  const [pc, acc, oct = defaultOctave] = tokenizeNote(note);\n  if (!pc) {\n    throw new Error('not a note: \"' + note + '\"');\n  }\n  const chroma = chromas[pc.toLowerCase()];\n  const offset = acc?.split('').reduce((o, char) => o + accs[char], 0) || 0;\n  return (Number(oct) + 1) * 12 + chroma + offset;\n};\nexport const midiToFreq = (n) => {\n  return Math.pow(2, (n - 69) / 12) * 440;\n};\nexport const clamp = (num, min, max) => Math.min(Math.max(num, min), max);\n\nexport const freqToMidi = (freq) => {\n  return (12 * Math.log(freq / 440)) / Math.LN2 + 69;\n};\n\nexport const valueToMidi = (value, fallbackValue) => {\n  if (typeof value !== 'object') {\n    throw new Error('valueToMidi: expected object value');\n  }\n  let { freq, note } = value;\n  if (typeof freq === 'number') {\n    return freqToMidi(freq);\n  }\n  if (typeof note === 'string') {\n    return noteToMidi(note);\n  }\n  if (typeof note === 'number') {\n    return note;\n  }\n  if (!fallbackValue) {\n    throw new Error('valueToMidi: expected freq or note to be set');\n  }\n  return fallbackValue;\n};\n\nexport function nanFallback(value, fallback) {\n  if (isNaN(Number(value))) {\n    logger(`\"${value}\" is not a number, falling back to ${fallback}`, 'warning');\n    return fallback;\n  }\n  return value;\n}\n","export default \"data:application/javascript;base64,Ly8gTElDRU5TRSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2My4wIHNlZSBodHRwczovL2dpdGh1Yi5jb20vZGt0cjAvV2ViRGlydC9ibG9iL21haW4vTElDRU5TRQovLyBhbGwgdGhlIGNyZWRpdCBnb2VzIHRvIGRrdHIwJ3Mgd2ViZGlydDogaHR0cHM6Ly9naXRodWIuY29tL2RrdHIwL1dlYkRpcnQvYmxvYi81Y2UzZDY5ODM2MmM1NGQ2ZTFiNjhhY2M0N2ViMjk1NWFjNjJjNzkzL2Rpc3QvQXVkaW9Xb3JrbGV0cy5qcwovLyA8MwoKY2xhc3MgQ29hcnNlUHJvY2Vzc29yIGV4dGVuZHMgQXVkaW9Xb3JrbGV0UHJvY2Vzc29yIHsKICBzdGF0aWMgZ2V0IHBhcmFtZXRlckRlc2NyaXB0b3JzKCkgewogICAgcmV0dXJuIFt7IG5hbWU6ICdjb2Fyc2UnLCBkZWZhdWx0VmFsdWU6IDEgfV07CiAgfQoKICBjb25zdHJ1Y3RvcigpIHsKICAgIHN1cGVyKCk7CiAgICB0aGlzLm5vdFN0YXJ0ZWQgPSB0cnVlOwogIH0KCiAgcHJvY2VzcyhpbnB1dHMsIG91dHB1dHMsIHBhcmFtZXRlcnMpIHsKICAgIGNvbnN0IGlucHV0ID0gaW5wdXRzWzBdOwogICAgY29uc3Qgb3V0cHV0ID0gb3V0cHV0c1swXTsKICAgIGNvbnN0IGNvYXJzZSA9IHBhcmFtZXRlcnMuY29hcnNlOwogICAgY29uc3QgYmxvY2tTaXplID0gMTI4OwogICAgY29uc3QgaGFzSW5wdXQgPSAhKGlucHV0WzBdID09PSB1bmRlZmluZWQpOwogICAgaWYgKGhhc0lucHV0KSB7CiAgICAgIHRoaXMubm90U3RhcnRlZCA9IGZhbHNlOwogICAgICBvdXRwdXRbMF1bMF0gPSBpbnB1dFswXVswXTsKICAgICAgZm9yIChsZXQgbiA9IDE7IG4gPCBibG9ja1NpemU7IG4rKykgewogICAgICAgIGZvciAobGV0IG8gPSAwOyBvIDwgb3V0cHV0Lmxlbmd0aDsgbysrKSB7CiAgICAgICAgICBvdXRwdXRbb11bbl0gPSBuICUgY29hcnNlID09IDAgPyBpbnB1dFswXVtuXSA6IG91dHB1dFtvXVtuIC0gMV07CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgICByZXR1cm4gdGhpcy5ub3RTdGFydGVkIHx8IGhhc0lucHV0OwogIH0KfQoKcmVnaXN0ZXJQcm9jZXNzb3IoJ2NvYXJzZS1wcm9jZXNzb3InLCBDb2Fyc2VQcm9jZXNzb3IpOwoKY2xhc3MgQ3J1c2hQcm9jZXNzb3IgZXh0ZW5kcyBBdWRpb1dvcmtsZXRQcm9jZXNzb3IgewogIHN0YXRpYyBnZXQgcGFyYW1ldGVyRGVzY3JpcHRvcnMoKSB7CiAgICByZXR1cm4gW3sgbmFtZTogJ2NydXNoJywgZGVmYXVsdFZhbHVlOiAwIH1dOwogIH0KCiAgY29uc3RydWN0b3IoKSB7CiAgICBzdXBlcigpOwogICAgdGhpcy5ub3RTdGFydGVkID0gdHJ1ZTsKICB9CgogIHByb2Nlc3MoaW5wdXRzLCBvdXRwdXRzLCBwYXJhbWV0ZXJzKSB7CiAgICBjb25zdCBpbnB1dCA9IGlucHV0c1swXTsKICAgIGNvbnN0IG91dHB1dCA9IG91dHB1dHNbMF07CiAgICBjb25zdCBjcnVzaCA9IHBhcmFtZXRlcnMuY3J1c2g7CiAgICBjb25zdCBibG9ja1NpemUgPSAxMjg7CiAgICBjb25zdCBoYXNJbnB1dCA9ICEoaW5wdXRbMF0gPT09IHVuZGVmaW5lZCk7CiAgICBpZiAoaGFzSW5wdXQpIHsKICAgICAgdGhpcy5ub3RTdGFydGVkID0gZmFsc2U7CiAgICAgIGlmIChjcnVzaC5sZW5ndGggPT09IDEpIHsKICAgICAgICBjb25zdCB4ID0gTWF0aC5wb3coMiwgY3J1c2hbMF0gLSAxKTsKICAgICAgICBmb3IgKGxldCBuID0gMDsgbiA8IGJsb2NrU2l6ZTsgbisrKSB7CiAgICAgICAgICBjb25zdCB2YWx1ZSA9IE1hdGgucm91bmQoaW5wdXRbMF1bbl0gKiB4KSAvIHg7CiAgICAgICAgICBmb3IgKGxldCBvID0gMDsgbyA8IG91dHB1dC5sZW5ndGg7IG8rKykgewogICAgICAgICAgICBvdXRwdXRbb11bbl0gPSB2YWx1ZTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgZm9yIChsZXQgbiA9IDA7IG4gPCBibG9ja1NpemU7IG4rKykgewogICAgICAgICAgbGV0IHggPSBNYXRoLnBvdygyLCBjcnVzaFtuXSAtIDEpOwogICAgICAgICAgY29uc3QgdmFsdWUgPSBNYXRoLnJvdW5kKGlucHV0WzBdW25dICogeCkgLyB4OwogICAgICAgICAgZm9yIChsZXQgbyA9IDA7IG8gPCBvdXRwdXQubGVuZ3RoOyBvKyspIHsKICAgICAgICAgICAgb3V0cHV0W29dW25dID0gdmFsdWU7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgICByZXR1cm4gdGhpcy5ub3RTdGFydGVkIHx8IGhhc0lucHV0OwogIH0KfQpyZWdpc3RlclByb2Nlc3NvcignY3J1c2gtcHJvY2Vzc29yJywgQ3J1c2hQcm9jZXNzb3IpOwoKY2xhc3MgU2hhcGVQcm9jZXNzb3IgZXh0ZW5kcyBBdWRpb1dvcmtsZXRQcm9jZXNzb3IgewogIHN0YXRpYyBnZXQgcGFyYW1ldGVyRGVzY3JpcHRvcnMoKSB7CiAgICByZXR1cm4gW3sgbmFtZTogJ3NoYXBlJywgZGVmYXVsdFZhbHVlOiAwIH1dOwogIH0KCiAgY29uc3RydWN0b3IoKSB7CiAgICBzdXBlcigpOwogICAgdGhpcy5ub3RTdGFydGVkID0gdHJ1ZTsKICB9CgogIHByb2Nlc3MoaW5wdXRzLCBvdXRwdXRzLCBwYXJhbWV0ZXJzKSB7CiAgICBjb25zdCBpbnB1dCA9IGlucHV0c1swXTsKICAgIGNvbnN0IG91dHB1dCA9IG91dHB1dHNbMF07CiAgICBjb25zdCBzaGFwZTAgPSBwYXJhbWV0ZXJzLnNoYXBlWzBdOwogICAgY29uc3Qgc2hhcGUxID0gc2hhcGUwIDwgMSA/IHNoYXBlMCA6IDEuMCAtIDRlLTEwOwogICAgY29uc3Qgc2hhcGUgPSAoMi4wICogc2hhcGUxKSAvICgxLjAgLSBzaGFwZTEpOwogICAgY29uc3QgYmxvY2tTaXplID0gMTI4OwogICAgY29uc3QgaGFzSW5wdXQgPSAhKGlucHV0WzBdID09PSB1bmRlZmluZWQpOwogICAgaWYgKGhhc0lucHV0KSB7CiAgICAgIHRoaXMubm90U3RhcnRlZCA9IGZhbHNlOwogICAgICBmb3IgKGxldCBuID0gMDsgbiA8IGJsb2NrU2l6ZTsgbisrKSB7CiAgICAgICAgY29uc3QgdmFsdWUgPSAoKDEgKyBzaGFwZSkgKiBpbnB1dFswXVtuXSkgLyAoMSArIHNoYXBlICogTWF0aC5hYnMoaW5wdXRbMF1bbl0pKTsKICAgICAgICBmb3IgKGxldCBvID0gMDsgbyA8IG91dHB1dC5sZW5ndGg7IG8rKykgewogICAgICAgICAgb3V0cHV0W29dW25dID0gdmFsdWU7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgICByZXR1cm4gdGhpcy5ub3RTdGFydGVkIHx8IGhhc0lucHV0OwogIH0KfQoKcmVnaXN0ZXJQcm9jZXNzb3IoJ3NoYXBlLXByb2Nlc3NvcicsIFNoYXBlUHJvY2Vzc29yKTsK\"","import { getAudioContext } from './superdough.mjs';\nimport { clamp } from './util.mjs';\n\nexport function gainNode(value) {\n  const node = getAudioContext().createGain();\n  node.gain.value = value;\n  return node;\n}\n\n// alternative to getADSR returning the gain node and a stop handle to trigger the release anytime in the future\nexport const getEnvelope = (attack, decay, sustain, release, velocity, begin) => {\n  const gainNode = getAudioContext().createGain();\n  let phase = begin;\n  gainNode.gain.setValueAtTime(0, begin);\n  phase += attack;\n  gainNode.gain.linearRampToValueAtTime(velocity, phase); // attack\n  phase += decay;\n  let sustainLevel = sustain * velocity;\n  gainNode.gain.linearRampToValueAtTime(sustainLevel, phase); // decay / sustain\n  // sustain end\n  return {\n    node: gainNode,\n    stop: (t) => {\n      // to make sure the release won't begin before sustain is reached\n      phase = Math.max(t, phase);\n      // see https://github.com/tidalcycles/strudel/issues/522\n      gainNode.gain.setValueAtTime(sustainLevel, phase);\n      phase += release;\n      gainNode.gain.linearRampToValueAtTime(0, phase); // release\n      return phase;\n    },\n  };\n};\n\nexport const getExpEnvelope = (attack, decay, sustain, release, velocity, begin) => {\n  sustain = Math.max(0.001, sustain);\n  velocity = Math.max(0.001, velocity);\n  const gainNode = getAudioContext().createGain();\n  gainNode.gain.setValueAtTime(0.0001, begin);\n  gainNode.gain.exponentialRampToValueAtTime(velocity, begin + attack);\n  gainNode.gain.exponentialRampToValueAtTime(sustain * velocity, begin + attack + decay);\n  return {\n    node: gainNode,\n    stop: (t) => {\n      // similar to getEnvelope, this will glitch if sustain level has not been reached\n      gainNode.gain.exponentialRampToValueAtTime(0.0001, t + release);\n    },\n  };\n};\n\nexport const getADSR = (attack, decay, sustain, release, velocity, begin, end) => {\n  const gainNode = getAudioContext().createGain();\n  gainNode.gain.setValueAtTime(0, begin);\n  gainNode.gain.linearRampToValueAtTime(velocity, begin + attack); // attack\n  gainNode.gain.linearRampToValueAtTime(sustain * velocity, begin + attack + decay); // sustain start\n  gainNode.gain.setValueAtTime(sustain * velocity, end); // sustain end\n  gainNode.gain.linearRampToValueAtTime(0, end + release); // release\n  // for some reason, using exponential ramping creates little cracklings\n  /* let t = begin;\n  gainNode.gain.setValueAtTime(0, t);\n  gainNode.gain.exponentialRampToValueAtTime(velocity, (t += attack));\n  const sustainGain = Math.max(sustain * velocity, 0.001);\n  gainNode.gain.exponentialRampToValueAtTime(sustainGain, (t += decay));\n  if (end - begin < attack + decay) {\n    gainNode.gain.cancelAndHoldAtTime(end);\n  } else {\n    gainNode.gain.setValueAtTime(sustainGain, end);\n  }\n  gainNode.gain.exponentialRampToValueAtTime(0.001, end + release); // release */\n  return gainNode;\n};\n\nexport const getParamADSR = (param, attack, decay, sustain, release, min, max, begin, end) => {\n  const range = max - min;\n  const peak = min + range;\n  const sustainLevel = min + sustain * range;\n  param.setValueAtTime(min, begin);\n  param.linearRampToValueAtTime(peak, begin + attack);\n  param.linearRampToValueAtTime(sustainLevel, begin + attack + decay);\n  param.setValueAtTime(sustainLevel, end);\n  param.linearRampToValueAtTime(min, end + Math.max(release, 0.1));\n};\n\nexport function getCompressor(ac, threshold, ratio, knee, attack, release) {\n  const options = {\n    threshold: threshold ?? -3,\n    ratio: ratio ?? 10,\n    knee: knee ?? 10,\n    attack: attack ?? 0.005,\n    release: release ?? 0.05,\n  };\n  return new DynamicsCompressorNode(ac, options);\n}\n\nexport function createFilter(\n  context,\n  type,\n  frequency,\n  Q,\n  attack,\n  decay,\n  sustain,\n  release,\n  fenv,\n  start,\n  end,\n  fanchor = 0.5,\n) {\n  const filter = context.createBiquadFilter();\n  filter.type = type;\n  filter.Q.value = Q;\n  filter.frequency.value = frequency;\n\n  // Apply ADSR to filter frequency\n  if (!isNaN(fenv) && fenv !== 0) {\n    const offset = fenv * fanchor;\n\n    const min = clamp(2 ** -offset * frequency, 0, 20000);\n    const max = clamp(2 ** (fenv - offset) * frequency, 0, 20000);\n\n    // console.log('min', min, 'max', max);\n\n    getParamADSR(filter.frequency, attack, decay, sustain, release, min, max, start, end);\n    return filter;\n  }\n\n  return filter;\n}\n\n// stays 1 until .5, then fades out\nlet wetfade = (d) => (d < 0.5 ? 1 : 1 - (d - 0.5) / 0.5);\n\n// mix together dry and wet nodes. 0 = only dry 1 = only wet\n// still not too sure about how this could be used more generally...\nexport function drywet(dry, wet, wetAmount = 0) {\n  const ac = getAudioContext();\n  if (!wetAmount) {\n    return dry;\n  }\n  let dry_gain = ac.createGain();\n  let wet_gain = ac.createGain();\n  dry.connect(dry_gain);\n  wet.connect(wet_gain);\n  dry_gain.gain.value = wetfade(wetAmount);\n  wet_gain.gain.value = wetfade(1 - wetAmount);\n  let mix = ac.createGain();\n  dry_gain.connect(mix);\n  wet_gain.connect(mix);\n  return mix;\n}\n","import { noteToMidi, valueToMidi, nanFallback } from './util.mjs';\nimport { getAudioContext, registerSound } from './index.mjs';\nimport { getEnvelope } from './helpers.mjs';\nimport { logger } from './logger.mjs';\n\nconst bufferCache = {}; // string: Promise<ArrayBuffer>\nconst loadCache = {}; // string: Promise<ArrayBuffer>\n\nexport const getCachedBuffer = (url) => bufferCache[url];\n\nfunction humanFileSize(bytes, si) {\n  var thresh = si ? 1000 : 1024;\n  if (bytes < thresh) return bytes + ' B';\n  var units = si\n    ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n    : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n  var u = -1;\n  do {\n    bytes /= thresh;\n    ++u;\n  } while (bytes >= thresh);\n  return bytes.toFixed(1) + ' ' + units[u];\n}\n\nexport const getSampleBufferSource = async (s, n, note, speed, freq, bank, resolveUrl) => {\n  let transpose = 0;\n  if (freq !== undefined && note !== undefined) {\n    logger('[sampler] hap has note and freq. ignoring note', 'warning');\n  }\n  let midi = valueToMidi({ freq, note }, 36);\n  transpose = midi - 36; // C3 is middle C\n\n  const ac = getAudioContext();\n  let sampleUrl;\n  if (Array.isArray(bank)) {\n    n = nanFallback(n, 0);\n    sampleUrl = bank[n % bank.length];\n  } else {\n    const midiDiff = (noteA) => noteToMidi(noteA) - midi;\n    // object format will expect keys as notes\n    const closest = Object.keys(bank)\n      .filter((k) => !k.startsWith('_'))\n      .reduce(\n        (closest, key, j) => (!closest || Math.abs(midiDiff(key)) < Math.abs(midiDiff(closest)) ? key : closest),\n        null,\n      );\n    transpose = -midiDiff(closest); // semitones to repitch\n    sampleUrl = bank[closest][n % bank[closest].length];\n  }\n  if (resolveUrl) {\n    sampleUrl = await resolveUrl(sampleUrl);\n  }\n  let buffer = await loadBuffer(sampleUrl, ac, s, n);\n  if (speed < 0) {\n    // should this be cached?\n    buffer = reverseBuffer(buffer);\n  }\n  const bufferSource = ac.createBufferSource();\n  bufferSource.buffer = buffer;\n  const playbackRate = 1.0 * Math.pow(2, transpose / 12);\n  bufferSource.playbackRate.value = playbackRate;\n  return bufferSource;\n};\n\nexport const loadBuffer = (url, ac, s, n = 0) => {\n  const label = s ? `sound \"${s}:${n}\"` : 'sample';\n  url = url.replace('#', '%23');\n  if (!loadCache[url]) {\n    logger(`[sampler] load ${label}..`, 'load-sample', { url });\n    const timestamp = Date.now();\n    loadCache[url] = fetch(url)\n      .then((res) => res.arrayBuffer())\n      .then(async (res) => {\n        const took = Date.now() - timestamp;\n        const size = humanFileSize(res.byteLength);\n        // const downSpeed = humanFileSize(res.byteLength / took);\n        logger(`[sampler] load ${label}... done! loaded ${size} in ${took}ms`, 'loaded-sample', { url });\n        const decoded = await ac.decodeAudioData(res);\n        bufferCache[url] = decoded;\n        return decoded;\n      });\n  }\n  return loadCache[url];\n};\n\nexport function reverseBuffer(buffer) {\n  const ac = getAudioContext();\n  const reversed = ac.createBuffer(buffer.numberOfChannels, buffer.length, ac.sampleRate);\n  for (let channel = 0; channel < buffer.numberOfChannels; channel++) {\n    reversed.copyToChannel(buffer.getChannelData(channel).slice().reverse(), channel, channel);\n  }\n  return reversed;\n}\n\nexport const getLoadedBuffer = (url) => {\n  return bufferCache[url];\n};\n\nexport const processSampleMap = (sampleMap, fn, baseUrl = sampleMap._base || '') => {\n  return Object.entries(sampleMap).forEach(([key, value]) => {\n    if (typeof value === 'string') {\n      value = [value];\n    }\n    if (typeof value !== 'object') {\n      throw new Error('wrong sample map format for ' + key);\n    }\n    baseUrl = value._base || baseUrl;\n    const replaceUrl = (v) => (baseUrl + v).replace('github:', 'https://raw.githubusercontent.com/');\n    if (Array.isArray(value)) {\n      //return [key, value.map(replaceUrl)];\n      value = value.map(replaceUrl);\n    } else {\n      // must be object\n      value = Object.fromEntries(\n        Object.entries(value).map(([note, samples]) => {\n          return [note, (typeof samples === 'string' ? [samples] : samples).map(replaceUrl)];\n        }),\n      );\n    }\n    fn(key, value);\n  });\n};\n\n// allows adding a custom url prefix handler\n// for example, it is used by the desktop app to load samples starting with '~/music'\nlet resourcePrefixHandlers = {};\nexport function registerSamplesPrefix(prefix, resolve) {\n  resourcePrefixHandlers[prefix] = resolve;\n}\n// finds a prefix handler for the given url (if any)\nfunction getSamplesPrefixHandler(url) {\n  const handler = Object.entries(resourcePrefixHandlers).find(([key]) => url.startsWith(key));\n  if (handler) {\n    return handler[1];\n  }\n  return;\n}\n\n/**\n * Loads a collection of samples to use with `s`\n * @example\n * samples('github:tidalcycles/Dirt-Samples/master');\n * s(\"[bd ~]*2, [~ hh]*2, ~ sd\")\n * @example\n * samples({\n *  bd: '808bd/BD0000.WAV',\n *  sd: '808sd/SD0010.WAV'\n *  }, 'https://raw.githubusercontent.com/tidalcycles/Dirt-Samples/master/');\n * s(\"[bd ~]*2, [~ hh]*2, ~ sd\")\n * @example\n * samples('shabda:noise,chimp:2')\n * s(\"noise <chimp:0*2 chimp:1>\")\n * @example\n * samples('shabda/speech/fr-FR/f:chocolat')\n * s(\"chocolat*4\")\n */\n\nexport const samples = async (sampleMap, baseUrl = sampleMap._base || '', options = {}) => {\n  if (typeof sampleMap === 'string') {\n    // check if custom prefix handler\n    const handler = getSamplesPrefixHandler(sampleMap);\n    if (handler) {\n      return handler(sampleMap);\n    }\n    if (sampleMap.startsWith('bubo:')) {\n      const [_, repo] = sampleMap.split(':');\n      sampleMap = `github:Bubobubobubobubo/dough-${repo}`;\n    }\n    if (sampleMap.startsWith('github:')) {\n      let [_, path] = sampleMap.split('github:');\n      path = path.endsWith('/') ? path.slice(0, -1) : path;\n      if (path.split('/').length === 2) {\n        // assume main as default branch if none set\n        path += '/main';\n      }\n      sampleMap = `https://raw.githubusercontent.com/${path}/strudel.json`.replace(\"//strudel.json\", \"/strudel.json\");\n    }\n    if (sampleMap.startsWith('shabda:')) {\n      let [_, path] = sampleMap.split('shabda:');\n      sampleMap = `https://shabda.ndre.gr/${path}.json?strudel=1`;\n    }\n    if (sampleMap.startsWith('shabda/speech')) {\n      let [_, path] = sampleMap.split('shabda/speech');\n      path = path.startsWith('/') ? path.substring(1) : path;\n      let [params, words] = path.split(':');\n      let gender = 'f';\n      let language = 'en-GB';\n      if (params) {\n        [language, gender] = params.split('/');\n      }\n      sampleMap = `https://shabda.ndre.gr/speech/${words}.json?gender=${gender}&language=${language}&strudel=1'`;\n    }\n    if (typeof fetch !== 'function') {\n      // not a browser\n      return;\n    }\n    const base = sampleMap.split('/').slice(0, -1).join('/');\n    if (typeof fetch === 'undefined') {\n      // skip fetch when in node / testing\n      return;\n    }\n    return fetch(sampleMap)\n      .then((res) => res.json())\n      .then((json) => samples(json, baseUrl || json._base || base, options))\n      .catch((error) => {\n        console.error(error);\n        throw new Error(`error loading \"${sampleMap}\"`);\n      });\n  }\n  const { prebake, tag } = options;\n  processSampleMap(\n    sampleMap,\n    (key, value) =>\n      registerSound(key, (t, hapValue, onended) => onTriggerSample(t, hapValue, onended, value), {\n        type: 'sample',\n        samples: value,\n        baseUrl,\n        prebake,\n        tag,\n      }),\n    baseUrl,\n  );\n};\n\nconst cutGroups = [];\n\nexport async function onTriggerSample(t, value, onended, bank, resolveUrl) {\n  let {\n    s,\n    freq,\n    unit,\n    nudge = 0, // TODO: is this in seconds?\n    cut,\n    loop,\n    clip = undefined, // if 1, samples will be cut off when the hap ends\n    n = 0,\n    note,\n    speed = 1, // sample playback speed\n    loopBegin = 0,\n    begin = 0,\n    loopEnd = 1,\n    end = 1,\n    vib,\n    vibmod = 0.5,\n  } = value;\n  // load sample\n  if (speed === 0) {\n    // no playback\n    return;\n  }\n  loop = s.startsWith('wt_') ? 1 : value.loop;\n  const ac = getAudioContext();\n  // destructure adsr here, because the default should be different for synths and samples\n  const { attack = 0.001, decay = 0.001, sustain = 1, release = 0.001 } = value;\n  //const soundfont = getSoundfontKey(s);\n  const time = t + nudge;\n\n  const bufferSource = await getSampleBufferSource(s, n, note, speed, freq, bank, resolveUrl);\n\n  // vibrato\n  let vibratoOscillator;\n  if (vib > 0) {\n    vibratoOscillator = getAudioContext().createOscillator();\n    vibratoOscillator.frequency.value = vib;\n    const gain = getAudioContext().createGain();\n    // Vibmod is the amount of vibrato, in semitones\n    gain.gain.value = vibmod * 100;\n    vibratoOscillator.connect(gain);\n    gain.connect(bufferSource.detune);\n    vibratoOscillator.start(0);\n  }\n\n  // asny stuff above took too long?\n  if (ac.currentTime > t) {\n    logger(`[sampler] still loading sound \"${s}:${n}\"`, 'highlight');\n    // console.warn('sample still loading:', s, n);\n    return;\n  }\n  if (!bufferSource) {\n    logger(`[sampler] could not load \"${s}:${n}\"`, 'error');\n    return;\n  }\n  bufferSource.playbackRate.value = Math.abs(speed) * bufferSource.playbackRate.value;\n  if (unit === 'c') {\n    // are there other units?\n    bufferSource.playbackRate.value = bufferSource.playbackRate.value * bufferSource.buffer.duration * 1; //cps;\n  }\n  // \"The computation of the offset into the sound is performed using the sound buffer's natural sample rate,\n  // rather than the current playback rate, so even if the sound is playing at twice its normal speed,\n  // the midway point through a 10-second audio buffer is still 5.\"\n  const offset = begin * bufferSource.buffer.duration;\n  if (loop) {\n    bufferSource.loop = true;\n    bufferSource.loopStart = loopBegin * bufferSource.buffer.duration - offset;\n    bufferSource.loopEnd = loopEnd * bufferSource.buffer.duration - offset;\n  }\n  bufferSource.start(time, offset);\n  const { node: envelope, stop: releaseEnvelope } = getEnvelope(attack, decay, sustain, release, 1, t);\n  bufferSource.connect(envelope);\n  const out = ac.createGain(); // we need a separate gain for the cutgroups because firefox...\n  envelope.connect(out);\n  bufferSource.onended = function () {\n    bufferSource.disconnect();\n    vibratoOscillator?.stop();\n    envelope.disconnect();\n    out.disconnect();\n    onended();\n  };\n  const stop = (endTime, playWholeBuffer = clip === undefined && loop === undefined) => {\n    let releaseTime = endTime;\n    if (playWholeBuffer) {\n      const bufferDuration = bufferSource.buffer.duration / bufferSource.playbackRate.value;\n      releaseTime = t + (end - begin) * bufferDuration;\n    }\n    const silentAt = releaseEnvelope(releaseTime);\n    bufferSource.stop(silentAt);\n  };\n  const handle = { node: out, bufferSource, stop };\n\n  // cut groups\n  if (cut !== undefined) {\n    const prev = cutGroups[cut];\n    if (prev) {\n      prev.node.gain.setValueAtTime(1, time);\n      prev.node.gain.linearRampToValueAtTime(0, time + 0.01);\n    }\n    cutGroups[cut] = handle;\n  }\n\n  return handle;\n}\n","/*\nsuperdough.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/superdough/superdough.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport './feedbackdelay.mjs';\nimport './reverb.mjs';\nimport './vowel.mjs';\nimport { clamp, nanFallback } from './util.mjs';\nimport workletsUrl from './worklets.mjs?url';\nimport { createFilter, gainNode, getCompressor } from './helpers.mjs';\nimport { map } from 'nanostores';\nimport { logger } from './logger.mjs';\nimport { loadBuffer } from './sampler.mjs';\n\nexport const soundMap = map();\n\nexport function registerSound(key, onTrigger, data = {}) {\n  soundMap.setKey(key, { onTrigger, data });\n}\n\nexport function getSound(s) {\n  return soundMap.get()[s];\n}\n\nexport const resetLoadedSounds = () => soundMap.set({});\n\nlet audioContext;\n\nexport const getAudioContext = () => {\n  if (!audioContext) {\n    audioContext = new AudioContext();\n    const maxChannelCount = audioContext.destination.maxChannelCount;\n    audioContext.destination.channelCount = maxChannelCount;\n  }\n  return audioContext;\n};\n\nlet workletsLoading;\n\nfunction loadWorklets() {\n  if (workletsLoading) {\n    return workletsLoading;\n  }\n  workletsLoading = getAudioContext().audioWorklet.addModule(workletsUrl);\n  return workletsLoading;\n}\n\nfunction getWorklet(ac, processor, params) {\n  const node = new AudioWorkletNode(ac, processor);\n  Object.entries(params).forEach(([key, value]) => {\n    node.parameters.get(key).value = value;\n  });\n  return node;\n}\n\n// this function should be called on first user interaction (to avoid console warning)\nexport async function initAudio(options = {}) {\n  const { disableWorklets = false } = options;\n  if (typeof window !== 'undefined') {\n    await getAudioContext().resume();\n    if (!disableWorklets) {\n      await loadWorklets().catch((err) => {\n        console.warn('could not load AudioWorklet effects coarse, crush and shape', err);\n      });\n    } else {\n      console.log('disableWorklets: AudioWorklet effects coarse, crush and shape are skipped!');\n    }\n  }\n}\n\nexport async function initAudioOnFirstClick(options) {\n  return new Promise((resolve) => {\n    document.addEventListener('click', async function listener() {\n      await initAudio(options);\n      resolve();\n      document.removeEventListener('click', listener);\n    });\n  });\n}\n\nlet delays = {};\nconst maxfeedback = 0.98;\n\nlet channelMerger, destinationGain;\n\n// input: AudioNode, channels: ?Array<int>\nexport const connectToDestination = (input, channels = [0, 1]) => {\n  const ctx = getAudioContext();\n  if (channelMerger == null) {\n    channelMerger = new ChannelMergerNode(ctx, { numberOfInputs: ctx.destination.channelCount });\n    destinationGain = new GainNode(ctx);\n    channelMerger.connect(destinationGain);\n    destinationGain.connect(ctx.destination);\n  }\n  //This upmix can be removed if correct channel counts are set throughout the app,\n  // and then strudel could theoretically support surround sound audio files\n  const stereoMix = new StereoPannerNode(ctx);\n  input.connect(stereoMix);\n\n  const splitter = new ChannelSplitterNode(ctx, {\n    numberOfOutputs: stereoMix.channelCount,\n  });\n  stereoMix.connect(splitter);\n  channels.forEach((ch, i) => {\n    splitter.connect(channelMerger, i % stereoMix.channelCount, clamp(ch, 0, ctx.destination.channelCount - 1));\n  });\n};\n\nexport const panic = () => {\n  if (destinationGain == null) {\n    return;\n  }\n  destinationGain.gain.linearRampToValueAtTime(0, getAudioContext().currentTime + 0.01);\n  destinationGain = null;\n};\n\nfunction getDelay(orbit, delaytime, delayfeedback, t) {\n  if (delayfeedback > maxfeedback) {\n    //logger(`delayfeedback was clamped to ${maxfeedback} to save your ears`);\n  }\n  delayfeedback = clamp(delayfeedback, 0, 0.98);\n  if (!delays[orbit]) {\n    const ac = getAudioContext();\n    const dly = ac.createFeedbackDelay(1, delaytime, delayfeedback);\n    dly.start?.(t); // for some reason, this throws when audion extension is installed..\n    connectToDestination(dly, [0, 1]);\n    delays[orbit] = dly;\n  }\n  delays[orbit].delayTime.value !== delaytime && delays[orbit].delayTime.setValueAtTime(delaytime, t);\n  delays[orbit].feedback.value !== delayfeedback && delays[orbit].feedback.setValueAtTime(delayfeedback, t);\n  return delays[orbit];\n}\n\n// each orbit will have its own lfo\nconst phaserLFOs = {};\nfunction getPhaser(orbit, t, speed = 1, depth = 0.5, centerFrequency = 1000, sweep = 2000) {\n  //gain\n  const ac = getAudioContext();\n  const lfoGain = ac.createGain();\n  lfoGain.gain.value = sweep;\n\n  //LFO\n  if (phaserLFOs[orbit] == null) {\n    phaserLFOs[orbit] = ac.createOscillator();\n    phaserLFOs[orbit].frequency.value = speed;\n    phaserLFOs[orbit].type = 'sine';\n    phaserLFOs[orbit].start();\n  }\n\n  phaserLFOs[orbit].connect(lfoGain);\n  if (phaserLFOs[orbit].frequency.value != speed) {\n    phaserLFOs[orbit].frequency.setValueAtTime(speed, t);\n  }\n\n  //filters\n  const numStages = 2; //num of filters in series\n  let fOffset = 0;\n  const filterChain = [];\n  for (let i = 0; i < numStages; i++) {\n    const filter = ac.createBiquadFilter();\n    filter.type = 'notch';\n    filter.gain.value = 1;\n    filter.frequency.value = centerFrequency + fOffset;\n    filter.Q.value = 2 - Math.min(Math.max(depth * 2, 0), 1.9);\n\n    lfoGain.connect(filter.detune);\n    fOffset += 282;\n    if (i > 0) {\n      filterChain[i - 1].connect(filter);\n    }\n    filterChain.push(filter);\n  }\n  return filterChain[filterChain.length - 1];\n}\n\nlet reverbs = {};\n\nlet hasChanged = (now, before) => now !== undefined && now !== before;\n\nfunction getReverb(orbit, duration, fade, lp, dim, ir) {\n  // If no reverb has been created for a given orbit, create one\n  if (!reverbs[orbit]) {\n    const ac = getAudioContext();\n    const reverb = ac.createReverb(duration, fade, lp, dim, ir);\n    connectToDestination(reverb, [0, 1]);\n    reverbs[orbit] = reverb;\n  }\n  if (\n    hasChanged(duration, reverbs[orbit].duration) ||\n    hasChanged(fade, reverbs[orbit].fade) ||\n    hasChanged(lp, reverbs[orbit].lp) ||\n    hasChanged(dim, reverbs[orbit].dim) ||\n    reverbs[orbit].ir !== ir\n  ) {\n    // only regenerate when something has changed\n    // avoids endless regeneration on things like\n    // stack(s(\"a\"), s(\"b\").rsize(8)).room(.5)\n    // this only works when args may stay undefined until here\n    // setting default values breaks this\n    reverbs[orbit].generate(duration, fade, lp, dim, ir);\n  }\n  return reverbs[orbit];\n}\n\nexport let analyser, analyserData /* s = {} */;\n\nexport function getAnalyser(/* orbit,  */ fftSize = 2048) {\n  if (!analyser /*s [orbit] */) {\n    const analyserNode = getAudioContext().createAnalyser();\n    analyserNode.fftSize = fftSize;\n    // getDestination().connect(analyserNode);\n    analyser /* s[orbit] */ = analyserNode;\n    //analyserData = new Uint8Array(analyser.frequencyBinCount);\n    analyserData = new Float32Array(analyser.frequencyBinCount);\n  }\n  if (analyser /* s[orbit] */.fftSize !== fftSize) {\n    analyser /* s[orbit] */.fftSize = fftSize;\n    //analyserData = new Uint8Array(analyser.frequencyBinCount);\n    analyserData = new Float32Array(analyser.frequencyBinCount);\n  }\n  return analyser /* s[orbit] */;\n}\n\nexport function getAnalyzerData(type = 'time') {\n  const getter = {\n    time: () => analyser?.getFloatTimeDomainData(analyserData),\n    frequency: () => analyser?.getFloatFrequencyData(analyserData),\n  }[type];\n  if (!getter) {\n    throw new Error(`getAnalyzerData: ${type} not supported. use one of ${Object.keys(getter).join(', ')}`);\n  }\n  getter();\n  return analyserData;\n}\n\nfunction effectSend(input, effect, wet) {\n  const send = gainNode(wet);\n  input.connect(send);\n  send.connect(effect);\n  return send;\n}\n\nexport const superdough = async (value, deadline, hapDuration) => {\n  const ac = getAudioContext();\n  if (typeof value !== 'object') {\n    throw new Error(\n      `expected hap.value to be an object, but got \"${value}\". Hint: append .note() or .s() to the end`,\n      'error',\n    );\n  }\n\n  // duration is passed as value too..\n  value.duration = hapDuration;\n  // calculate absolute time\n  let t = ac.currentTime + deadline;\n  // destructure\n  let {\n    s = 'triangle',\n    bank,\n    source,\n    gain = 0.8,\n    postgain = 1,\n    density = 0.03,\n    // filters\n    ftype = '12db',\n    fanchor = 0.5,\n    // low pass\n    cutoff,\n    lpenv,\n    lpattack = 0.01,\n    lpdecay = 0.01,\n    lpsustain = 1,\n    lprelease = 0.01,\n    resonance = 1,\n    // high pass\n    hpenv,\n    hcutoff,\n    hpattack = 0.01,\n    hpdecay = 0.01,\n    hpsustain = 1,\n    hprelease = 0.01,\n    hresonance = 1,\n    // band pass\n    bpenv,\n    bandf,\n    bpattack = 0.01,\n    bpdecay = 0.01,\n    bpsustain = 1,\n    bprelease = 0.01,\n    bandq = 1,\n    channels = [1, 2],\n    //phaser\n    phaser,\n    phaserdepth = 0.75,\n    phasersweep,\n    phasercenter,\n    //\n    coarse,\n    crush,\n    shape,\n    pan,\n    vowel,\n    delay = 0,\n    delayfeedback = 0.5,\n    delaytime = 0.25,\n    orbit = 1,\n    room,\n    roomfade,\n    roomlp,\n    roomdim,\n    roomsize,\n    ir,\n    i = 0,\n    velocity = 1,\n    analyze, // analyser wet\n    fft = 8, // fftSize 0 - 10\n    compressor: compressorThreshold,\n    compressorRatio,\n    compressorKnee,\n    compressorAttack,\n    compressorRelease,\n  } = value;\n  gain = nanFallback(gain, 1);\n\n  //music programs/audio gear usually increments inputs/outputs from 1, so imitate that behavior\n  channels = (Array.isArray(channels) ? channels : [channels]).map((ch) => ch - 1);\n\n  gain *= velocity; // legacy fix for velocity\n  let toDisconnect = []; // audio nodes that will be disconnected when the source has ended\n  const onended = () => {\n    toDisconnect.forEach((n) => n?.disconnect());\n  };\n  if (bank && s) {\n    s = `${bank}_${s}`;\n  }\n\n  // get source AudioNode\n  let sourceNode;\n  if (source) {\n    sourceNode = source(t, value, hapDuration);\n  } else if (getSound(s)) {\n    const { onTrigger } = getSound(s);\n    const soundHandle = await onTrigger(t, value, onended);\n    if (soundHandle) {\n      sourceNode = soundHandle.node;\n      soundHandle.stop(t + hapDuration);\n    }\n  } else {\n    throw new Error(`sound ${s} not found! Is it loaded?`);\n  }\n  if (!sourceNode) {\n    // if onTrigger does not return anything, we will just silently skip\n    // this can be used for things like speed(0) in the sampler\n    return;\n  }\n\n  if (ac.currentTime > t) {\n    logger('[webaudio] skip hap: still loading', ac.currentTime - t);\n    return;\n  }\n  const chain = []; // audio nodes that will be connected to each other sequentially\n  chain.push(sourceNode);\n\n  // gain stage\n  chain.push(gainNode(gain));\n\n  if (cutoff !== undefined) {\n    let lp = () =>\n      createFilter(\n        ac,\n        'lowpass',\n        cutoff,\n        resonance,\n        lpattack,\n        lpdecay,\n        lpsustain,\n        lprelease,\n        lpenv,\n        t,\n        t + hapDuration,\n        fanchor,\n      );\n    chain.push(lp());\n    if (ftype === '24db') {\n      chain.push(lp());\n    }\n  }\n\n  if (hcutoff !== undefined) {\n    let hp = () =>\n      createFilter(\n        ac,\n        'highpass',\n        hcutoff,\n        hresonance,\n        hpattack,\n        hpdecay,\n        hpsustain,\n        hprelease,\n        hpenv,\n        t,\n        t + hapDuration,\n        fanchor,\n      );\n    chain.push(hp());\n    if (ftype === '24db') {\n      chain.push(hp());\n    }\n  }\n\n  if (bandf !== undefined) {\n    let bp = () =>\n      createFilter(\n        ac,\n        'bandpass',\n        bandf,\n        bandq,\n        bpattack,\n        bpdecay,\n        bpsustain,\n        bprelease,\n        bpenv,\n        t,\n        t + hapDuration,\n        fanchor,\n      );\n    chain.push(bp());\n    if (ftype === '24db') {\n      chain.push(bp());\n    }\n  }\n\n  if (vowel !== undefined) {\n    const vowelFilter = ac.createVowelFilter(vowel);\n    chain.push(vowelFilter);\n  }\n\n  // effects\n  coarse !== undefined && chain.push(getWorklet(ac, 'coarse-processor', { coarse }));\n  crush !== undefined && chain.push(getWorklet(ac, 'crush-processor', { crush }));\n  shape !== undefined && chain.push(getWorklet(ac, 'shape-processor', { shape }));\n\n  compressorThreshold !== undefined &&\n    chain.push(\n      getCompressor(ac, compressorThreshold, compressorRatio, compressorKnee, compressorAttack, compressorRelease),\n    );\n\n  // panning\n  if (pan !== undefined) {\n    const panner = ac.createStereoPanner();\n    panner.pan.value = 2 * pan - 1;\n    chain.push(panner);\n  }\n  // phaser\n  if (phaser !== undefined && phaserdepth > 0) {\n    const phaserFX = getPhaser(orbit, t, phaser, phaserdepth, phasercenter, phasersweep);\n    chain.push(phaserFX);\n  }\n\n  // last gain\n  const post = new GainNode(ac, { gain: postgain });\n  chain.push(post);\n  connectToDestination(post, channels);\n\n  // delay\n  let delaySend;\n  if (delay > 0 && delaytime > 0 && delayfeedback > 0) {\n    const delyNode = getDelay(orbit, delaytime, delayfeedback, t);\n    delaySend = effectSend(post, delyNode, delay);\n  }\n  // reverb\n  let reverbSend;\n  if (room > 0) {\n    let roomIR;\n    if (ir !== undefined) {\n      let url;\n      let sample = getSound(ir);\n      if (Array.isArray(sample)) {\n        url = sample.data.samples[i % sample.data.samples.length];\n      } else if (typeof sample === 'object') {\n        url = Object.values(sample.data.samples).flat()[i % Object.values(sample.data.samples).length];\n      }\n      roomIR = await loadBuffer(url, ac, ir, 0);\n    }\n    const reverbNode = getReverb(orbit, roomsize, roomfade, roomlp, roomdim, roomIR);\n    reverbSend = effectSend(post, reverbNode, room);\n  }\n\n  // analyser\n  let analyserSend;\n  if (analyze) {\n    const analyserNode = getAnalyser(/* orbit,  */ 2 ** (fft + 5));\n    analyserSend = effectSend(post, analyserNode, analyze);\n  }\n\n  // connect chain elements together\n  chain.slice(1).reduce((last, current) => last.connect(current), chain[0]);\n\n  // toDisconnect = all the node that should be disconnected in onended callback\n  // this is crucial for performance\n  toDisconnect = chain.concat([delaySend, reverbSend, analyserSend]);\n};\n\nexport const superdoughTrigger = (t, hap, ct, cps) => superdough(hap, t - ct, hap.duration / cps, cps);\n","import { getAudioContext } from './superdough.mjs';\n\nlet worklet;\nexport async function dspWorklet(ac, code) {\n  const name = `dsp-worklet-${Date.now()}`;\n  const workletCode = `${code}\nlet __q = []; // trigger queue\nclass MyProcessor extends AudioWorkletProcessor {\n  constructor() {\n    super();\n    this.t = 0;\n    this.stopped = false;\n    this.port.onmessage = (e) => {\n      if(e.data==='stop') {\n        this.stopped = true;\n      } else if(e.data?.dough) {\n        __q.push(e.data)\n      } else {\n        msg?.(e.data)\n      }\n    };\n  }\n  process(inputs, outputs, parameters) {\n    const output = outputs[0];\n    if(__q.length) {\n      for(let i=0;i<__q.length;++i) {\n        const deadline = __q[i].time-currentTime;\n        if(deadline<=0) {\n          trigger(__q[i].dough)\n          __q.splice(i,1)\n        }\n      }\n    }\n    for (let i = 0; i < output[0].length; i++) {\n      const out = dsp(this.t / sampleRate);\n      output.forEach((channel) => {\n        channel[i] = out;\n      });\n      this.t++;\n    }\n  return !this.stopped;\n  }\n}\nregisterProcessor('${name}', MyProcessor);\n`;\n  const base64String = btoa(workletCode);\n  const dataURL = `data:text/javascript;base64,${base64String}`;\n  await ac.audioWorklet.addModule(dataURL);\n  const node = new AudioWorkletNode(ac, name);\n  const stop = () => node.port.postMessage('stop');\n  return { node, stop };\n}\nconst stop = () => {\n  if (worklet) {\n    worklet?.stop();\n    worklet?.node?.disconnect();\n  }\n};\n\nif (typeof window !== 'undefined') {\n  window.addEventListener('message', (e) => {\n    if (e.data === 'strudel-stop') {\n      stop();\n    } else if (e.data?.dough) {\n      worklet?.node.port.postMessage(e.data);\n    }\n  });\n}\n\nexport const dough = async (code) => {\n  const ac = getAudioContext();\n  stop();\n  worklet = await dspWorklet(ac, code);\n  worklet.node.connect(ac.destination);\n};\n\nexport function doughTrigger(t, hap, currentTime, duration, cps) {\n  window.postMessage({ time: t, dough: hap.value, currentTime, duration, cps });\n}\n","/*\nwebaudio.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/webaudio/webaudio.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as strudel from '@strudel.cycles/core';\nimport { superdough, getAudioContext, setLogger, doughTrigger } from 'superdough';\nconst { Pattern, logger } = strudel;\n\nsetLogger(logger);\n\nconst hap2value = (hap) => {\n  hap.ensureObjectValue();\n  return { ...hap.value, velocity: hap.context.velocity };\n};\n\n// TODO: bind logger\nexport const webaudioOutputTrigger = (t, hap, ct, cps) => {\n  if (globalThis.haps_from_outputs) {\n      globalThis.haps_from_outputs.push(hap);\n  }\n  superdough(hap2value(hap), t - ct, hap.duration / cps, cps);\n};\n\nexport const webaudioOutput = (hap, deadline, hapDuration) => {\n  if (globalThis.haps_from_outputs) {\n      globalThis.haps_from_outputs.push(hap);\n  }\n  superdough(hap2value(hap), deadline, hapDuration);\n};\n\nPattern.prototype.webaudio = function () {\n  return this.onTrigger(webaudioOutputTrigger);\n};\n\nexport function webaudioScheduler(options = {}) {\n  options = {\n    getTime: () => getAudioContext().currentTime,\n    defaultOutput: webaudioOutput,\n    ...options,\n  };\n  const { defaultOutput, getTime } = options;\n  return new strudel.Cyclist({\n    ...options,\n    onTrigger: strudel.getTrigger({ defaultOutput, getTime }),\n  });\n}\n\nPattern.prototype.dough = function () {\n  return this.onTrigger(doughTrigger, 1);\n};\n","import { Pattern, getDrawContext, clamp } from '@strudel.cycles/core';\nimport { analyser, getAnalyzerData } from 'superdough';\n\nexport function drawTimeScope(\n  analyser,\n  { align = true, color = 'white', thickness = 3, scale = 0.25, pos = 0.75, trigger = 0 } = {},\n) {\n  const ctx = getDrawContext();\n  const dataArray = getAnalyzerData('time');\n\n  ctx.lineWidth = thickness;\n  ctx.strokeStyle = color;\n\n  ctx.beginPath();\n  let canvas = ctx.canvas;\n\n  const bufferSize = analyser.frequencyBinCount;\n  let triggerIndex = align\n    ? Array.from(dataArray).findIndex((v, i, arr) => i && arr[i - 1] > -trigger && v <= -trigger)\n    : 0;\n  triggerIndex = Math.max(triggerIndex, 0); // fallback to 0 when no trigger is found\n\n  const sliceWidth = (canvas.width * 1.0) / bufferSize;\n  let x = 0;\n  for (let i = triggerIndex; i < bufferSize; i++) {\n    const v = dataArray[i] + 1;\n    const y = (pos - scale * (v - 1)) * canvas.height;\n\n    if (i === 0) {\n      ctx.moveTo(x, y);\n    } else {\n      ctx.lineTo(x, y);\n    }\n    x += sliceWidth;\n  }\n  ctx.stroke();\n}\n\nexport function drawFrequencyScope(\n  analyser,\n  { color = 'white', scale = 0.25, pos = 0.75, lean = 0.5, min = -150, max = 0 } = {},\n) {\n  const dataArray = getAnalyzerData('frequency');\n  const ctx = getDrawContext();\n  const canvas = ctx.canvas;\n\n  ctx.fillStyle = color;\n  const bufferSize = analyser.frequencyBinCount;\n  const sliceWidth = (canvas.width * 1.0) / bufferSize;\n\n  let x = 0;\n  for (let i = 0; i < bufferSize; i++) {\n    const normalized = clamp((dataArray[i] - min) / (max - min), 0, 1);\n    const v = normalized * scale;\n    const h = v * canvas.height;\n    const y = (pos - v * lean) * canvas.height;\n\n    ctx.fillRect(x, y, Math.max(sliceWidth, 1), h);\n    x += sliceWidth;\n  }\n}\n\nfunction clearScreen(smear = 0, smearRGB = `0,0,0`) {\n  const ctx = getDrawContext();\n  if (!smear) {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  } else {\n    ctx.fillStyle = `rgba(${smearRGB},${1 - smear})`;\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  }\n}\n\n/**\n * Renders an oscilloscope for the frequency domain of the audio signal.\n * @name fscope\n * @param {string} color line color as hex or color name. defaults to white.\n * @param {number} scale scales the y-axis. Defaults to 0.25\n * @param {number} pos y-position relative to screen height. 0 = top, 1 = bottom of screen\n * @param {number} lean y-axis alignment where 0 = top and 1 = bottom\n * @param {number} min min value\n * @param {number} max max value\n * @example\n * s(\"sawtooth\").fscope()\n */\nPattern.prototype.fscope = function (config = {}) {\n  return this.analyze(1).draw(() => {\n    clearScreen(config.smear);\n    analyser && drawFrequencyScope(analyser, config);\n  });\n};\n\n/**\n * Renders an oscilloscope for the time domain of the audio signal.\n * @name scope\n * @synonyms tscope\n * @param {object} config optional config with options:\n * @param {boolean} align if 1, the scope will be aligned to the first zero crossing. defaults to 1\n * @param {string} color line color as hex or color name. defaults to white.\n * @param {number} thickness line thickness. defaults to 3\n * @param {number} scale scales the y-axis. Defaults to 0.25\n * @param {number} pos y-position relative to screen height. 0 = top, 1 = bottom of screen\n * @param {number} trigger amplitude value that is used to align the scope. defaults to 0.\n * @example\n * s(\"sawtooth\").scope()\n */\nPattern.prototype.tscope = function (config = {}) {\n  return this.analyze(1).draw(() => {\n    clearScreen(config.smear);\n    analyser && drawTimeScope(analyser, config);\n  });\n};\n\nPattern.prototype.scope = Pattern.prototype.tscope;\n"],"names":["FeedbackDelayNode","ac","wet","time","feedback","feedbackGain","delayGain","target","reverbGen","params","callback","audioContext","sampleRate","numChannels","totalTime","decaySampleFrames","numSampleFrames","fadeInSampleFrames","decayBase","reverbIR","i","chan","j","randomSample","applyGradualLowpass","data","width","height","min","max","canvas","gc","xscale","yscale","input","lpFreqStart","lpFreqEnd","lpFreqEndAt","channelData","getAllChannelData","context","player","filter","event","buffer","channels","duration","newLength","newBuffer","channel","oldData","newData","fade","lp","dim","ir","convolver","d","vowelFormant","VowelNode","letter","gains","qs","freqs","makeupGain","gain","log","msg","logger","args","setLogger","fn","tokenizeNote","note","pc","acc","oct","chromas","accs","noteToMidi","defaultOctave","chroma","offset","o","char","midiToFreq","n","clamp","num","freqToMidi","freq","valueToMidi","value","fallbackValue","nanFallback","fallback","workletsUrl","gainNode","node","getAudioContext","getEnvelope","attack","decay","sustain","release","velocity","begin","phase","sustainLevel","t","getExpEnvelope","getADSR","end","getParamADSR","param","range","peak","getCompressor","threshold","ratio","knee","options","createFilter","type","frequency","Q","fenv","start","fanchor","wetfade","drywet","dry","wetAmount","dry_gain","wet_gain","mix","bufferCache","loadCache","getCachedBuffer","url","humanFileSize","bytes","si","thresh","units","u","getSampleBufferSource","s","speed","bank","resolveUrl","transpose","midi","sampleUrl","midiDiff","noteA","closest","k","key","loadBuffer","reverseBuffer","bufferSource","playbackRate","label","timestamp","res","took","size","decoded","reversed","getLoadedBuffer","processSampleMap","sampleMap","baseUrl","replaceUrl","v","samples","resourcePrefixHandlers","registerSamplesPrefix","prefix","resolve","getSamplesPrefixHandler","handler","_","repo","path","words","gender","language","base","json","error","prebake","tag","registerSound","hapValue","onended","onTriggerSample","cutGroups","unit","nudge","cut","loop","clip","loopBegin","loopEnd","vib","vibmod","vibratoOscillator","envelope","releaseEnvelope","out","handle","endTime","playWholeBuffer","releaseTime","bufferDuration","silentAt","prev","soundMap","map","onTrigger","getSound","resetLoadedSounds","maxChannelCount","workletsLoading","loadWorklets","getWorklet","processor","initAudio","disableWorklets","err","initAudioOnFirstClick","listener","delays","channelMerger","destinationGain","connectToDestination","ctx","stereoMix","splitter","ch","panic","getDelay","orbit","delaytime","delayfeedback","dly","phaserLFOs","getPhaser","depth","centerFrequency","sweep","lfoGain","numStages","fOffset","filterChain","reverbs","hasChanged","now","before","getReverb","reverb","analyser","analyserData","getAnalyser","fftSize","analyserNode","getAnalyzerData","getter","effectSend","effect","send","superdough","deadline","hapDuration","source","postgain","density","ftype","cutoff","lpenv","lpattack","lpdecay","lpsustain","lprelease","resonance","hpenv","hcutoff","hpattack","hpdecay","hpsustain","hprelease","hresonance","bpenv","bandf","bpattack","bpdecay","bpsustain","bprelease","bandq","phaser","phaserdepth","phasersweep","phasercenter","coarse","crush","shape","pan","vowel","delay","room","roomfade","roomlp","roomdim","roomsize","analyze","fft","compressorThreshold","compressorRatio","compressorKnee","compressorAttack","compressorRelease","toDisconnect","sourceNode","soundHandle","chain","hp","bp","vowelFilter","panner","phaserFX","post","delaySend","delyNode","reverbSend","roomIR","sample","reverbNode","analyserSend","last","current","superdoughTrigger","hap","ct","cps","worklet","dspWorklet","code","name","workletCode","dataURL","stop","dough","doughTrigger","currentTime","Pattern","strudel","hap2value","webaudioOutputTrigger","webaudioOutput","webaudioScheduler","defaultOutput","getTime","strudel.Cyclist","strudel.getTrigger","drawTimeScope","align","color","thickness","scale","pos","trigger","getDrawContext","dataArray","bufferSize","triggerIndex","arr","sliceWidth","x","y","drawFrequencyScope","lean","h","clearScreen","smear","smearRGB","config"],"mappings":"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"}