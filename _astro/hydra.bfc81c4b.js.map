{"version":3,"mappings":"gIAEA,IAAIA,EAEJ,SAASC,EAAaC,EAAG,CACvB,KAAM,CAAE,OAAQC,CAAY,EAAGC,EAAc,EAC7C,OAAAF,EAAE,OAAO,GAAK,eACdA,EAAE,OAAO,MAAM,SAAW,QAC1BA,EAAE,OAAO,MAAM,IAAM,MACrBC,EAAW,MAAMD,EAAE,MAAM,EAClBC,CACT,CAEO,eAAeE,EAAUC,EAAU,GAAI,CAO5C,GALIN,GAAiB,KAAK,UAAUA,CAAa,IAAM,KAAK,UAAUM,CAAO,GAC3E,SAAS,eAAe,cAAc,EAAE,OAAM,EAEhDN,EAAgBM,EAEZ,CAAC,SAAS,eAAe,cAAc,EAAG,CAC5C,QAAQ,IAAI,UAAU,EACtB,KAAM,CACJ,IAAAC,EAAM,gCACN,YAAAC,EAAc,GACd,GAAGC,CACJ,EAAG,CAAE,YAAa,GAAO,GAAGH,CAAO,EACpC,YAAM,OAAOC,GAAG,IAChB,MAAMG,EAAQ,IAAI,MAAMD,CAAW,EACnC,GAAID,EAAa,CACf,KAAM,CAAE,OAAAG,GAAWP,IACnBO,EAAO,MAAM,QAAU,OACvBD,EAAM,MAAM,GAAG,KAAK,CAAE,IAAKC,CAAM,CAAE,CACpC,CACDV,EAAaS,CAAK,CACnB,CACH,CAEY,MAACE,EAAKC,GAAM,IAAMA,EAAE,SAAS,QAAO,EAAI,QAAO,CAAE,EAAE,CAAC,EAAE","names":["latestOptions","appendCanvas","c","testCanvas","getDrawContext","initHydra","options","src","feedStrudel","hydraConfig","hydra","canvas","H","p"],"sources":["../../../packages/hydra/hydra.mjs"],"sourcesContent":["import { getDrawContext } from '@strudel.cycles/core';\n\nlet latestOptions;\n\nfunction appendCanvas(c) {\n  const { canvas: testCanvas } = getDrawContext();\n  c.canvas.id = 'hydra-canvas';\n  c.canvas.style.position = 'fixed';\n  c.canvas.style.top = '0px';\n  testCanvas.after(c.canvas);\n  return testCanvas;\n}\n\nexport async function initHydra(options = {}) {\n  // reset if options have changed since last init\n  if (latestOptions && JSON.stringify(latestOptions) !== JSON.stringify(options)) {\n    document.getElementById('hydra-canvas').remove();\n  }\n  latestOptions = options;\n  //load and init hydra\n  if (!document.getElementById('hydra-canvas')) {\n    console.log('reinit..');\n    const {\n      src = 'https://unpkg.com/hydra-synth',\n      feedStrudel = false,\n      ...hydraConfig\n    } = { detectAudio: false, ...options };\n    await import(src);\n    const hydra = new Hydra(hydraConfig);\n    if (feedStrudel) {\n      const { canvas } = getDrawContext();\n      canvas.style.display = 'none';\n      hydra.synth.s0.init({ src: canvas });\n    }\n    appendCanvas(hydra);\n  }\n}\n\nexport const H = (p) => () => p.queryArc(getTime(), getTime())[0].value;\n"],"file":"_astro/hydra.bfc81c4b.js"}