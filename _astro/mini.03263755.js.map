{"version":3,"file":"mini.03263755.js","sources":["../../../packages/mini/krill-parser.js","../../../packages/mini/mini.mjs"],"sourcesContent":["// Generated by Peggy 3.0.2.\n//\n// https://peggyjs.org/\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  // istanbul ignore next Check is a necessary evil to support older environments\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = \"SyntaxError\";\n  return self;\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || \" \";\n  if (str.length > targetLength) { return str; }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\n\npeg$SyntaxError.prototype.format = function(sources) {\n  var str = \"Error: \" + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var offset_s = (this.location.source && (typeof this.location.source.offset === \"function\"))\n      ? this.location.source.offset(s)\n      : s;\n    var loc = this.location.source + \":\" + offset_s.line + \":\" + offset_s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd(\"\", offset_s.line.toString().length, ' ');\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      var hatLen = (last - s.column) || 1;\n      str += \"\\n --> \" + loc + \"\\n\"\n          + filler + \" |\\n\"\n          + offset_s.line + \" | \" + line + \"\\n\"\n          + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ')\n          + peg$padEnd(\"\", hatLen, \"^\");\n    } else {\n      str += \"\\n at \" + loc;\n    }\n  }\n  return str;\n};\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n\n  var peg$startRuleFunctions = { start: peg$parsestart };\n  var peg$startRuleFunction = peg$parsestart;\n\n  var peg$c0 = \".\";\n  var peg$c1 = \"-\";\n  var peg$c2 = \"+\";\n  var peg$c3 = \"0\";\n  var peg$c4 = \",\";\n  var peg$c5 = \"|\";\n  var peg$c6 = \"\\\"\";\n  var peg$c7 = \"'\";\n  var peg$c8 = \"#\";\n  var peg$c9 = \"^\";\n  var peg$c10 = \"_\";\n  var peg$c11 = \"[\";\n  var peg$c12 = \"]\";\n  var peg$c13 = \"{\";\n  var peg$c14 = \"}\";\n  var peg$c15 = \"%\";\n  var peg$c16 = \"<\";\n  var peg$c17 = \">\";\n  var peg$c18 = \"@\";\n  var peg$c19 = \"!\";\n  var peg$c20 = \"(\";\n  var peg$c21 = \")\";\n  var peg$c22 = \"/\";\n  var peg$c23 = \"*\";\n  var peg$c24 = \"?\";\n  var peg$c25 = \":\";\n  var peg$c26 = \"..\";\n  var peg$c27 = \"struct\";\n  var peg$c28 = \"target\";\n  var peg$c29 = \"euclid\";\n  var peg$c30 = \"slow\";\n  var peg$c31 = \"rotL\";\n  var peg$c32 = \"rotR\";\n  var peg$c33 = \"fast\";\n  var peg$c34 = \"scale\";\n  var peg$c35 = \"//\";\n  var peg$c36 = \"cat\";\n  var peg$c37 = \"$\";\n  var peg$c38 = \"setcps\";\n  var peg$c39 = \"setbpm\";\n  var peg$c40 = \"hush\";\n\n  var peg$r0 = /^[1-9]/;\n  var peg$r1 = /^[eE]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[ \\n\\r\\t]/;\n  var peg$r4 = /^[0-9a-zA-Z~]/;\n  var peg$r5 = /^[^\\n]/;\n\n  var peg$e0 = peg$otherExpectation(\"number\");\n  var peg$e1 = peg$literalExpectation(\".\", false);\n  var peg$e2 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n  var peg$e3 = peg$classExpectation([\"e\", \"E\"], false, false);\n  var peg$e4 = peg$literalExpectation(\"-\", false);\n  var peg$e5 = peg$literalExpectation(\"+\", false);\n  var peg$e6 = peg$literalExpectation(\"0\", false);\n  var peg$e7 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e8 = peg$otherExpectation(\"whitespace\");\n  var peg$e9 = peg$classExpectation([\" \", \"\\n\", \"\\r\", \"\\t\"], false, false);\n  var peg$e10 = peg$literalExpectation(\",\", false);\n  var peg$e11 = peg$literalExpectation(\"|\", false);\n  var peg$e12 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e13 = peg$literalExpectation(\"'\", false);\n  var peg$e14 = peg$classExpectation([[\"0\", \"9\"], [\"a\", \"z\"], [\"A\", \"Z\"], \"~\"], false, false);\n  var peg$e15 = peg$literalExpectation(\"#\", false);\n  var peg$e16 = peg$literalExpectation(\"^\", false);\n  var peg$e17 = peg$literalExpectation(\"_\", false);\n  var peg$e18 = peg$literalExpectation(\"[\", false);\n  var peg$e19 = peg$literalExpectation(\"]\", false);\n  var peg$e20 = peg$literalExpectation(\"{\", false);\n  var peg$e21 = peg$literalExpectation(\"}\", false);\n  var peg$e22 = peg$literalExpectation(\"%\", false);\n  var peg$e23 = peg$literalExpectation(\"<\", false);\n  var peg$e24 = peg$literalExpectation(\">\", false);\n  var peg$e25 = peg$literalExpectation(\"@\", false);\n  var peg$e26 = peg$literalExpectation(\"!\", false);\n  var peg$e27 = peg$literalExpectation(\"(\", false);\n  var peg$e28 = peg$literalExpectation(\")\", false);\n  var peg$e29 = peg$literalExpectation(\"/\", false);\n  var peg$e30 = peg$literalExpectation(\"*\", false);\n  var peg$e31 = peg$literalExpectation(\"?\", false);\n  var peg$e32 = peg$literalExpectation(\":\", false);\n  var peg$e33 = peg$literalExpectation(\"..\", false);\n  var peg$e34 = peg$literalExpectation(\"struct\", false);\n  var peg$e35 = peg$literalExpectation(\"target\", false);\n  var peg$e36 = peg$literalExpectation(\"euclid\", false);\n  var peg$e37 = peg$literalExpectation(\"slow\", false);\n  var peg$e38 = peg$literalExpectation(\"rotL\", false);\n  var peg$e39 = peg$literalExpectation(\"rotR\", false);\n  var peg$e40 = peg$literalExpectation(\"fast\", false);\n  var peg$e41 = peg$literalExpectation(\"scale\", false);\n  var peg$e42 = peg$literalExpectation(\"//\", false);\n  var peg$e43 = peg$classExpectation([\"\\n\"], true, false);\n  var peg$e44 = peg$literalExpectation(\"cat\", false);\n  var peg$e45 = peg$literalExpectation(\"$\", false);\n  var peg$e46 = peg$literalExpectation(\"setcps\", false);\n  var peg$e47 = peg$literalExpectation(\"setbpm\", false);\n  var peg$e48 = peg$literalExpectation(\"hush\", false);\n\n  var peg$f0 = function() { return parseFloat(text()); };\n  var peg$f1 = function() { return parseInt(text()); };\n  var peg$f2 = function(chars) { return new AtomStub(chars.join(\"\")) };\n  var peg$f3 = function(s) { return s };\n  var peg$f4 = function(s, stepsPerCycle) { s.arguments_.stepsPerCycle = stepsPerCycle ; return s; };\n  var peg$f5 = function(a) { return a };\n  var peg$f6 = function(s) { s.arguments_.alignment = 'slowcat'; return s; };\n  var peg$f7 = function(a) { return x => x.options_['weight'] = a };\n  var peg$f8 = function(a) { return x => x.options_['reps'] = a };\n  var peg$f9 = function(p, s, r) { return x => x.options_['ops'].push({ type_: \"bjorklund\", arguments_ :{ pulse: p, step:s, rotation:r }}) };\n  var peg$f10 = function(a) { return x => x.options_['ops'].push({ type_: \"stretch\", arguments_ :{ amount:a, type: 'slow' }}) };\n  var peg$f11 = function(a) { return x => x.options_['ops'].push({ type_: \"stretch\", arguments_ :{ amount:a, type: 'fast' }}) };\n  var peg$f12 = function(a) { return x => x.options_['ops'].push({ type_: \"degradeBy\", arguments_ :{ amount:a, seed: seed++ } }) };\n  var peg$f13 = function(s) { return x => x.options_['ops'].push({ type_: \"tail\", arguments_ :{ element:s } }) };\n  var peg$f14 = function(s) { return x => x.options_['ops'].push({ type_: \"range\", arguments_ :{ element:s } }) };\n  var peg$f15 = function(s, ops) { const result = new ElementStub(s, {ops: [], weight: 1, reps: 1});\n    for (const op of ops) {\n      op(result);\n    }\n    return result;\n  };\n  var peg$f16 = function(s) { return new PatternStub(s, 'fastcat'); };\n  var peg$f17 = function(tail) { return { alignment: 'stack', list: tail }; };\n  var peg$f18 = function(tail) { return { alignment: 'rand', list: tail, seed: seed++ }; };\n  var peg$f19 = function(head, tail) { if (tail && tail.list.length > 0) { return new PatternStub([head, ...tail.list], tail.alignment, tail.seed); } else { return head; } };\n  var peg$f20 = function(head, tail) { return new PatternStub(tail ? [head, ...tail.list] : [head], 'polymeter'); };\n  var peg$f21 = function(sc) { return sc; };\n  var peg$f22 = function(s) { return { name: \"struct\", args: { mini:s }}};\n  var peg$f23 = function(s) { return { name: \"target\", args : { name:s}}};\n  var peg$f24 = function(p, s, r) { return { name: \"bjorklund\", args :{ pulse: p, step:parseInt(s) }}};\n  var peg$f25 = function(a) { return { name: \"stretch\", args :{ amount: a}}};\n  var peg$f26 = function(a) { return { name: \"shift\", args :{ amount: \"-\"+a}}};\n  var peg$f27 = function(a) { return { name: \"shift\", args :{ amount: a}}};\n  var peg$f28 = function(a) { return { name: \"stretch\", args :{ amount: \"1/\"+a}}};\n  var peg$f29 = function(s) { return { name: \"scale\", args :{ scale: s.join(\"\")}}};\n  var peg$f30 = function(s, v) { return v};\n  var peg$f31 = function(s, ss) { ss.unshift(s); return new PatternStub(ss, 'slowcat'); };\n  var peg$f32 = function(sg) {return sg};\n  var peg$f33 = function(o, soc) { return new OperatorStub(o.name,o.args,soc)};\n  var peg$f34 = function(sc) { return sc };\n  var peg$f35 = function(c) { return c };\n  var peg$f36 = function(v) { return new CommandStub(\"setcps\", { value: v})};\n  var peg$f37 = function(v) { return new CommandStub(\"setcps\", { value: (v/120/2)})};\n  var peg$f38 = function() { return new CommandStub(\"hush\")};\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$maxFailPos = 0;\n  var peg$maxFailExpected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos, offset) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n\n    var res = {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n    if (offset && peg$source && (typeof peg$source.offset === \"function\")) {\n      res.start = peg$source.offset(res.start);\n      res.end = peg$source.offset(res.end);\n    }\n    return res;\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsestatement();\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseminus();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    s2 = peg$parseint();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsefrac();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseexp();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f0();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e0); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedecimal_point() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s0 = peg$c0;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e1); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedigit1_9() {\n    var s0;\n\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e2); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsee() {\n    var s0;\n\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e3); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseexp() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsee();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseminus();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseplus();\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$parseDIGIT();\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseDIGIT();\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s1 = [s1, s2, s3];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefrac() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedecimal_point();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseDIGIT();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseDIGIT();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseint() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$parsezero();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedigit1_9();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseDIGIT();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseDIGIT();\n        }\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseintneg() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseminus();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    s2 = peg$parseint();\n    if (s2 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s0 = peg$f1();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseminus() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s0 = peg$c1;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e4); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseplus() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c2;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e5); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsezero() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 48) {\n      s0 = peg$c3;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e6); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDIGIT() {\n    var s0;\n\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e7); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e9); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$r3.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e9); }\n      }\n    }\n    peg$silentFails--;\n    s1 = peg$FAILED;\n    if (peg$silentFails === 0) { peg$fail(peg$e8); }\n\n    return s0;\n  }\n\n  function peg$parsecomma() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s2 = peg$c4;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e10); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      s1 = [s1, s2, s3];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepipe() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (input.charCodeAt(peg$currPos) === 124) {\n      s2 = peg$c5;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e11); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      s1 = [s1, s2, s3];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsequote() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s0 = peg$c6;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e12); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s0 = peg$c7;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e13); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestep_char() {\n    var s0;\n\n    if (peg$r4.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e14); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c1;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e4); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s0 = peg$c8;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e15); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s0 = peg$c0;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e1); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 94) {\n              s0 = peg$c9;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e16); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 95) {\n                s0 = peg$c10;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$e17); }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestep() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    s2 = [];\n    s3 = peg$parsestep_char();\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsestep_char();\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      peg$savedPos = s0;\n      s0 = peg$f2(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesub_cycle() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s2 = peg$c11;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e18); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      s4 = peg$parsestack_or_choose();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsews();\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s6 = peg$c12;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e19); }\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parsews();\n          peg$savedPos = s0;\n          s0 = peg$f3(s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepolymeter() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s2 = peg$c13;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e20); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      s4 = peg$parsepolymeter_stack();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsews();\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s6 = peg$c14;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e21); }\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parsepolymeter_steps();\n          if (s7 === peg$FAILED) {\n            s7 = null;\n          }\n          s8 = peg$parsews();\n          peg$savedPos = s0;\n          s0 = peg$f4(s4, s7);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepolymeter_steps() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 37) {\n      s1 = peg$c15;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e22); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseslice();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f5(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslow_sequence() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (input.charCodeAt(peg$currPos) === 60) {\n      s2 = peg$c16;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e23); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      s4 = peg$parsesequence();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsews();\n        if (input.charCodeAt(peg$currPos) === 62) {\n          s6 = peg$c17;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e24); }\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parsews();\n          peg$savedPos = s0;\n          s0 = peg$f6(s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice() {\n    var s0;\n\n    s0 = peg$parsestep();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsesub_cycle();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepolymeter();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseslow_sequence();\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_op() {\n    var s0;\n\n    s0 = peg$parseop_weight();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseop_bjorklund();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseop_slow();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseop_fast();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseop_replicate();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseop_degrade();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseop_tail();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parseop_range();\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseop_weight() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 64) {\n      s1 = peg$c18;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e25); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f7(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseop_replicate() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 33) {\n      s1 = peg$c19;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e26); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f8(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseop_bjorklund() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c20;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e27); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parseslice_with_ops();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsews();\n        s5 = peg$parsecomma();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          s7 = peg$parseslice_with_ops();\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parsews();\n            s9 = peg$parsecomma();\n            if (s9 === peg$FAILED) {\n              s9 = null;\n            }\n            s10 = peg$parsews();\n            s11 = peg$parseslice_with_ops();\n            if (s11 === peg$FAILED) {\n              s11 = null;\n            }\n            s12 = peg$parsews();\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s13 = peg$c21;\n              peg$currPos++;\n            } else {\n              s13 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e28); }\n            }\n            if (s13 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f9(s3, s7, s11);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseop_slow() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 47) {\n      s1 = peg$c22;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e29); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseslice();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f10(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseop_fast() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s1 = peg$c23;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e30); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseslice();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f11(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseop_degrade() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 63) {\n      s1 = peg$c24;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f12(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseop_tail() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 58) {\n      s1 = peg$c25;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e32); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseslice();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f13(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseop_range() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c26) {\n      s1 = peg$c26;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e33); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseslice();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f14(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_with_ops() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseslice();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseslice_op();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseslice_op();\n      }\n      peg$savedPos = s0;\n      s0 = peg$f15(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesequence() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseslice_with_ops();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseslice_with_ops();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f16(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsestack_tail() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parsecomma();\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parsesequence();\n      if (s4 !== peg$FAILED) {\n        s2 = s4;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$parsecomma();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesequence();\n          if (s4 !== peg$FAILED) {\n            s2 = s4;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f17(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsechoose_tail() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parsepipe();\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parsesequence();\n      if (s4 !== peg$FAILED) {\n        s2 = s4;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$parsepipe();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesequence();\n          if (s4 !== peg$FAILED) {\n            s2 = s4;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f18(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsestack_or_choose() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsesequence();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsestack_tail();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsechoose_tail();\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f19(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepolymeter_stack() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsesequence();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsestack_tail();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f20(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemini() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    s2 = peg$parsequote();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      s4 = peg$parsestack_or_choose();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsews();\n        s6 = peg$parsequote();\n        if (s6 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f21(s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseoperator() {\n    var s0;\n\n    s0 = peg$parsescale();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseslow();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsefast();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsetarget();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsebjorklund();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsestruct();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parserotR();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parserotL();\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestruct() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c27) {\n      s1 = peg$c27;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e34); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsemini_or_operator();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f22(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetarget() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c28) {\n      s1 = peg$c28;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e35); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsequote();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsestep();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsequote();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f23(s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsebjorklund() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c29) {\n      s1 = peg$c29;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e36); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parseint();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsews();\n        s5 = peg$parseint();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          s7 = peg$parseint();\n          if (s7 === peg$FAILED) {\n            s7 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f24(s3, s5, s7);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslow() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c30) {\n      s1 = peg$c30;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e37); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f25(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserotL() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c31) {\n      s1 = peg$c31;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e38); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f26(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserotR() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c32) {\n      s1 = peg$c32;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e39); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f27(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefast() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c33) {\n      s1 = peg$c33;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e40); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f28(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsescale() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c34) {\n      s1 = peg$c34;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e41); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsequote();\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsestep_char();\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsestep_char();\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsequote();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f29(s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c35) {\n      s1 = peg$c35;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e42); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$r5.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e43); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$r5.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e43); }\n        }\n      }\n      s1 = [s1, s2];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecat() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c36) {\n      s1 = peg$c36;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e44); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s3 = peg$c11;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e18); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsews();\n        s5 = peg$parsemini_or_operator();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$currPos;\n          s8 = peg$parsecomma();\n          if (s8 !== peg$FAILED) {\n            s9 = peg$parsemini_or_operator();\n            if (s9 !== peg$FAILED) {\n              peg$savedPos = s7;\n              s7 = peg$f30(s5, s9);\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$currPos;\n            s8 = peg$parsecomma();\n            if (s8 !== peg$FAILED) {\n              s9 = peg$parsemini_or_operator();\n              if (s9 !== peg$FAILED) {\n                peg$savedPos = s7;\n                s7 = peg$f30(s5, s9);\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n          }\n          s7 = peg$parsews();\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s8 = peg$c12;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e19); }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f31(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsemini_or_group() {\n    var s0;\n\n    s0 = peg$parsecat();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsemini();\n    }\n\n    return s0;\n  }\n\n  function peg$parsemini_or_operator() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemini_or_group();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = [];\n      s4 = peg$parsecomment();\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parsecomment();\n      }\n      peg$savedPos = s0;\n      s0 = peg$f32(s1);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseoperator();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (input.charCodeAt(peg$currPos) === 36) {\n          s3 = peg$c37;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e45); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          s5 = peg$parsemini_or_operator();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f33(s1, s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsesequ_or_operator_or_comment() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemini_or_operator();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f34(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsecomment();\n    }\n\n    return s0;\n  }\n\n  function peg$parsemini_definition() {\n    var s0;\n\n    s0 = peg$parsesequ_or_operator_or_comment();\n\n    return s0;\n  }\n\n  function peg$parsecommand() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    s2 = peg$parsesetcps();\n    if (s2 === peg$FAILED) {\n      s2 = peg$parsesetbpm();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsehush();\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      peg$savedPos = s0;\n      s0 = peg$f35(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesetcps() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c38) {\n      s1 = peg$c38;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e46); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f36(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesetbpm() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c39) {\n      s1 = peg$c39;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e47); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f37(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsehush() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c40) {\n      s1 = peg$c40;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e48); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f38();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsestatement() {\n    var s0;\n\n    s0 = peg$parsemini_definition();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsecommand();\n    }\n\n    return s0;\n  }\n\n\n  var AtomStub = function(source)\n  {\n    this.type_ = \"atom\";\n    this.source_ = source;\n    this.location_ = location();\n  }\n\n  var PatternStub = function(source, alignment, seed)\n  {\n    this.type_ = \"pattern\";\n    this.arguments_ = { alignment: alignment };\n    if (seed !== undefined) {\n      this.arguments_.seed = seed;\n    }\n    this.source_ = source;\n  }\n\n  var OperatorStub = function(name, args, source)\n  {\n    this.type_ = name;\n    this.arguments_ = args;\n    this.source_ = source;\n  }\n\n  var ElementStub = function(source, options)\n  {\n    this.type_ = \"element\";\n    this.source_ = source;\n    this.options_ = options;\n    this.location_ = location();\n  }\n\n  var CommandStub = function(name, options)\n  {\n    this.type_ = \"command\";\n    this.name_ = name;\n    this.options_ = options;\n  }\n\n  var seed = 0;\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nexport {\n  peg$SyntaxError as SyntaxError,\n\n  peg$parse as parse\n};\n","/*\nmini.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/mini/mini.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as krill from './krill-parser.js';\nimport * as strudel from '@strudel.cycles/core';\n\nconst randOffset = 0.0003;\n\nconst applyOptions = (parent, enter) => (pat, i) => {\n  const ast = parent.source_[i];\n  const options = ast.options_;\n  const ops = options?.ops;\n\n  if (ops) {\n    for (const op of ops) {\n      switch (op.type_) {\n        case 'stretch': {\n          const legalTypes = ['fast', 'slow'];\n          const { type, amount } = op.arguments_;\n          if (!legalTypes.includes(type)) {\n            throw new Error(`mini: stretch: type must be one of ${legalTypes.join('|')} but got ${type}`);\n          }\n          pat = strudel.reify(pat)[type](enter(amount));\n          break;\n        }\n        case 'bjorklund': {\n          if (op.arguments_.rotation) {\n            pat = pat.euclidRot(enter(op.arguments_.pulse), enter(op.arguments_.step), enter(op.arguments_.rotation));\n          } else {\n            pat = pat.euclid(enter(op.arguments_.pulse), enter(op.arguments_.step));\n          }\n          break;\n        }\n        case 'degradeBy': {\n          pat = strudel\n            .reify(pat)\n            ._degradeByWith(strudel.rand.early(randOffset * op.arguments_.seed), op.arguments_.amount ?? 0.5);\n          break;\n        }\n        case 'tail': {\n          const friend = enter(op.arguments_.element);\n          pat = pat.fmap((a) => (b) => Array.isArray(a) ? [...a, b] : [a, b]).appLeft(friend);\n          break;\n        }\n        case 'range': {\n          const friend = enter(op.arguments_.element);\n          pat = strudel.reify(pat);\n          const arrayRange = (start, stop, step = 1) =>\n            Array.from({ length: Math.abs(stop - start) / step + 1 }, (value, index) =>\n              start < stop ? start + index * step : start - index * step,\n            );\n          let range = (apat, bpat) => apat.squeezeBind((a) => bpat.bind((b) => strudel.fastcat(...arrayRange(a, b))));\n          pat = range(pat, friend);\n          break;\n        }\n        default: {\n          console.warn(`operator \"${op.type_}\" not implemented`);\n        }\n      }\n    }\n  }\n\n  return pat;\n};\n\nfunction resolveReplications(ast) {\n  ast.source_ = strudel.flatten(\n    ast.source_.map((child) => {\n      const { reps } = child.options_ || {};\n      if (!reps) {\n        return [child];\n      }\n      delete child.options_.reps;\n      return Array(reps).fill(child);\n    }),\n  );\n}\n\n// expects ast from mini2ast + quoted mini string + optional callback when a node is entered\nexport function patternifyAST(ast, code, onEnter, offset = 0) {\n  onEnter?.(ast);\n  const enter = (node) => patternifyAST(node, code, onEnter, offset);\n  switch (ast.type_) {\n    case 'pattern': {\n      resolveReplications(ast);\n      const children = ast.source_.map((child) => enter(child)).map(applyOptions(ast, enter));\n      const alignment = ast.arguments_.alignment;\n      if (alignment === 'stack') {\n        return strudel.stack(...children);\n      }\n      if (alignment === 'polymeter') {\n        // polymeter\n        const stepsPerCycle = ast.arguments_.stepsPerCycle\n          ? enter(ast.arguments_.stepsPerCycle).fmap((x) => strudel.Fraction(x))\n          : strudel.pure(strudel.Fraction(children.length > 0 ? children[0].__weight : 1));\n\n        const aligned = children.map((child) => child.fast(stepsPerCycle.fmap((x) => x.div(child.__weight || 1))));\n        return strudel.stack(...aligned);\n      }\n      if (alignment === 'rand') {\n        return strudel.chooseInWith(strudel.rand.early(randOffset * ast.arguments_.seed).segment(1), children);\n      }\n      const weightedChildren = ast.source_.some((child) => !!child.options_?.weight);\n      if (!weightedChildren && alignment === 'slowcat') {\n        return strudel.slowcat(...children);\n      }\n      if (weightedChildren) {\n        const weightSum = ast.source_.reduce((sum, child) => sum + (child.options_?.weight || 1), 0);\n        const pat = strudel.timeCat(...ast.source_.map((child, i) => [child.options_?.weight || 1, children[i]]));\n        if (alignment === 'slowcat') {\n          return pat._slow(weightSum); // timecat + slow\n        }\n        pat.__weight = weightSum;\n        return pat;\n      }\n      const pat = strudel.sequence(...children);\n      pat.__weight = children.length;\n      return pat;\n    }\n    case 'element': {\n      return enter(ast.source_);\n    }\n    case 'atom': {\n      if (ast.source_ === '~') {\n        return strudel.silence;\n      }\n      if (!ast.location_) {\n        console.warn('no location for', ast);\n        return ast.source_;\n      }\n      const value = !isNaN(Number(ast.source_)) ? Number(ast.source_) : ast.source_;\n      if (offset === -1) {\n        // skip location handling (used when getting leaves to avoid confusion)\n        return strudel.pure(value);\n      }\n      const [from, to] = getLeafLocation(code, ast, offset);\n      return strudel.pure(value).withLoc(from, to);\n    }\n    case 'stretch':\n      return enter(ast.source_).slow(enter(ast.arguments_.amount));\n    default:\n      console.warn(`node type \"${ast.type_}\" not implemented -> returning silence`);\n      return strudel.silence;\n  }\n}\n\n// takes quoted mini string + leaf node within, returns source location of node (whitespace corrected)\nexport const getLeafLocation = (code, leaf, globalOffset = 0) => {\n  // value is expected without quotes!\n  const { start, end } = leaf.location_;\n  const actual = code?.split('').slice(start.offset, end.offset).join('');\n  // make sure whitespaces are not part of the highlight\n  const [offsetStart = 0, offsetEnd = 0] = actual\n    ? actual.split(leaf.source_).map((p) => p.split('').filter((c) => c === ' ').length)\n    : [];\n  return [start.offset + offsetStart + globalOffset, end.offset - offsetEnd + globalOffset];\n};\n\n// takes quoted mini string, returns ast\nexport const mini2ast = (code) => krill.parse(code);\n\n// takes quoted mini string, returns all nodes that are leaves\nexport const getLeaves = (code) => {\n  const ast = mini2ast(code);\n  let leaves = [];\n  patternifyAST(\n    ast,\n    code,\n    (node) => {\n      if (node.type_ === 'atom') {\n        leaves.push(node);\n      }\n    },\n    -1,\n  );\n  return leaves;\n};\n\n// takes quoted mini string, returns locations [fromCol,toCol] of all leaf nodes\nexport const getLeafLocations = (code, offset = 0) => {\n  return getLeaves(code).map((l) => getLeafLocation(code, l, offset));\n};\n\n// mini notation only (wraps in \"\")\nexport const mini = (...strings) => {\n  const pats = strings.map((str) => {\n    const code = `\"${str}\"`;\n    const ast = mini2ast(code);\n    return patternifyAST(ast, code);\n  });\n  return strudel.sequence(...pats);\n};\n\n// turns str mini string (without quotes) into pattern\n// offset is the position of the mini string in the JS code\n// each leaf node will get .withLoc added\n// this function is used by the transpiler for double quoted strings\nexport const m = (str, offset) => {\n  const code = `\"${str}\"`;\n  const ast = mini2ast(code);\n  return patternifyAST(ast, code, null, offset);\n};\n\n// includes haskell style (raw krill parsing)\nexport const h = (string) => {\n  const ast = mini2ast(string);\n  return patternifyAST(ast, string);\n};\n\nexport function minify(thing) {\n  if (typeof thing === 'string') {\n    return mini(thing);\n  }\n  return strudel.reify(thing);\n}\n\n// calling this function will cause patterns to parse strings as mini notation by default\nexport function miniAllStrings() {\n  strudel.setStringParser(mini);\n}\n"],"names":["peg$subclass","child","parent","C","peg$SyntaxError","message","expected","found","location","self","peg$padEnd","str","targetLength","padString","sources","src","k","s","offset_s","loc","e","filler","line","last","hatLen","DESCRIBE_EXPECTATION_FNS","expectation","literalEscape","escapedParts","part","classEscape","hex","ch","describeExpectation","describeExpected","descriptions","i","j","describeFound","peg$parse","input","options","peg$FAILED","peg$source","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$r5","peg$e0","peg$otherExpectation","peg$e1","peg$literalExpectation","peg$e2","peg$classExpectation","peg$e3","peg$e4","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$e40","peg$e41","peg$e42","peg$e43","peg$e44","peg$e45","peg$e46","peg$e47","peg$e48","peg$f0","text","peg$f2","chars","AtomStub","peg$f3","peg$f4","stepsPerCycle","peg$f5","a","peg$f6","peg$f7","x","peg$f8","peg$f9","p","r","peg$f10","peg$f11","peg$f12","seed","peg$f13","peg$f14","peg$f15","ops","result","ElementStub","op","peg$f16","PatternStub","peg$f17","tail","peg$f18","peg$f19","head","peg$f20","peg$f21","sc","peg$f22","peg$f23","peg$f24","peg$f25","peg$f26","peg$f27","peg$f28","peg$f29","peg$f30","v","peg$f31","ss","peg$f32","sg","peg$f33","o","soc","OperatorStub","peg$f34","peg$f35","c","peg$f36","CommandStub","peg$f37","peg$f38","peg$currPos","peg$savedPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","peg$computeLocation","ignoreCase","parts","inverted","peg$endExpectation","description","peg$computePosDetails","pos","details","startPos","endPos","offset","startPosDetails","endPosDetails","res","peg$fail","peg$buildStructuredError","s0","peg$parsestatement","peg$parsenumber","s2","peg$parseminus","peg$parseint","peg$parsefrac","peg$parseexp","peg$parsedecimal_point","peg$parsedigit1_9","peg$parsee","s1","s3","s4","peg$parseplus","peg$parseDIGIT","peg$parsezero","peg$parsews","peg$parsecomma","peg$parsepipe","peg$parsequote","peg$parsestep_char","peg$parsestep","peg$parsesub_cycle","s6","peg$parsestack_or_choose","peg$parsepolymeter","s7","peg$parsepolymeter_stack","peg$parsepolymeter_steps","peg$parseslice","peg$parseslow_sequence","peg$parsesequence","peg$parseslice_op","peg$parseop_weight","peg$parseop_bjorklund","peg$parseop_slow","peg$parseop_fast","peg$parseop_replicate","peg$parseop_degrade","peg$parseop_tail","peg$parseop_range","s5","s11","s13","peg$parseslice_with_ops","peg$parsestack_tail","peg$parsechoose_tail","peg$parsemini","peg$parseoperator","peg$parsescale","peg$parseslow","peg$parsefast","peg$parsetarget","peg$parsebjorklund","peg$parsestruct","peg$parserotR","peg$parserotL","peg$parsemini_or_operator","peg$parsecomment","peg$parsecat","s8","s9","peg$parsemini_or_group","peg$parsesequ_or_operator_or_comment","peg$parsemini_definition","peg$parsecommand","peg$parsesetcps","peg$parsesetbpm","peg$parsehush","source","alignment","name","args","randOffset","applyOptions","enter","pat","legalTypes","type","amount","strudel.reify","strudel\n            .reify","strudel.rand","friend","b","arrayRange","start","stop","step","value","index","apat","bpat","strudel.fastcat","resolveReplications","ast","strudel.flatten","reps","patternifyAST","code","onEnter","node","children","strudel.stack","strudel.Fraction","strudel.pure","aligned","strudel.chooseInWith","weightedChildren","strudel.slowcat","weightSum","sum","strudel.timeCat","strudel.sequence","strudel.silence","from","to","getLeafLocation","leaf","globalOffset","end","actual","offsetStart","offsetEnd","mini2ast","krill.parse","getLeaves","leaves","getLeafLocations","l","mini","strings","pats","m","h","string","minify","thing","miniAllStrings","strudel.setStringParser"],"mappings":"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"}